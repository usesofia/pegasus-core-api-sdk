"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * Sofia Pegasus core-api
 * Api principal do sistema Pegasus para gerenciamento financeiro de pequenas e m√©dias empresas.
 *
 * The version of the OpenAPI document: 1.7.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.InstallmentFinancialRecordDtoFrequencyEnum = exports.InstallmentFinancialRecordDtoDirectionEnum = void 0;
exports.instanceOfInstallmentFinancialRecordDto = instanceOfInstallmentFinancialRecordDto;
exports.InstallmentFinancialRecordDtoFromJSON = InstallmentFinancialRecordDtoFromJSON;
exports.InstallmentFinancialRecordDtoFromJSONTyped = InstallmentFinancialRecordDtoFromJSONTyped;
exports.InstallmentFinancialRecordDtoToJSON = InstallmentFinancialRecordDtoToJSON;
exports.InstallmentFinancialRecordDtoToJSONTyped = InstallmentFinancialRecordDtoToJSONTyped;
var CreateFinancialRecordRequestBodyDtoPopulatedFilesInner_1 = require("./CreateFinancialRecordRequestBodyDtoPopulatedFilesInner");
var CreateFinancialRecordRequestBodyDtoPopulatedTagsInner_1 = require("./CreateFinancialRecordRequestBodyDtoPopulatedTagsInner");
var CreateInstallmentFinancialRecordRequestBodyDtoInstallmentsInner_1 = require("./CreateInstallmentFinancialRecordRequestBodyDtoInstallmentsInner");
var CreateInstallmentFinancialRecordRequestBodyDtoPopulatedContact_1 = require("./CreateInstallmentFinancialRecordRequestBodyDtoPopulatedContact");
var CreateFinancialRecordRequestBodyDtoPopulatedSubcategory_1 = require("./CreateFinancialRecordRequestBodyDtoPopulatedSubcategory");
/**
 * @export
 */
exports.InstallmentFinancialRecordDtoDirectionEnum = {
    In: 'IN',
    Out: 'OUT'
};
/**
 * @export
 */
exports.InstallmentFinancialRecordDtoFrequencyEnum = {
    Monthly: 'MONTHLY',
    Weekly: 'WEEKLY',
    Yearly: 'YEARLY'
};
/**
 * Check if a given object implements the InstallmentFinancialRecordDto interface.
 */
function instanceOfInstallmentFinancialRecordDto(value) {
    if (!('id' in value) || value['id'] === undefined)
        return false;
    if (!('ownerOrganization' in value) || value['ownerOrganization'] === undefined)
        return false;
    if (!('direction' in value) || value['direction'] === undefined)
        return false;
    if (!('frequency' in value) || value['frequency'] === undefined)
        return false;
    if (!('firstInstallmentDate' in value) || value['firstInstallmentDate'] === undefined)
        return false;
    if (!('contact' in value) || value['contact'] === undefined)
        return false;
    if (!('description' in value) || value['description'] === undefined)
        return false;
    if (!('subcategory' in value) || value['subcategory'] === undefined)
        return false;
    if (!('numberOfInstallments' in value) || value['numberOfInstallments'] === undefined)
        return false;
    if (!('installments' in value) || value['installments'] === undefined)
        return false;
    return true;
}
function InstallmentFinancialRecordDtoFromJSON(json) {
    return InstallmentFinancialRecordDtoFromJSONTyped(json, false);
}
function InstallmentFinancialRecordDtoFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'id': json['id'],
        'ownerOrganization': json['ownerOrganization'],
        'direction': json['direction'],
        'frequency': json['frequency'],
        'firstInstallmentDate': json['firstInstallmentDate'],
        'contact': json['contact'],
        'description': json['description'],
        'subcategory': json['subcategory'],
        'amount': json['amount'] == null ? undefined : json['amount'],
        'tags': json['tags'] == null ? undefined : json['tags'],
        'competenceDate': json['competenceDate'] == null ? undefined : json['competenceDate'],
        'files': json['files'] == null ? undefined : json['files'],
        'numberOfInstallments': json['numberOfInstallments'],
        'installments': (json['installments'].map(CreateInstallmentFinancialRecordRequestBodyDtoInstallmentsInner_1.CreateInstallmentFinancialRecordRequestBodyDtoInstallmentsInnerFromJSON)),
        'createdAt': json['createdAt'] == null ? undefined : json['createdAt'],
        'updatedAt': json['updatedAt'] == null ? undefined : json['updatedAt'],
        'searchScore': json['searchScore'] == null ? undefined : json['searchScore'],
        'populatedSubcategory': json['populatedSubcategory'] == null ? undefined : (0, CreateFinancialRecordRequestBodyDtoPopulatedSubcategory_1.CreateFinancialRecordRequestBodyDtoPopulatedSubcategoryFromJSON)(json['populatedSubcategory']),
        'populatedContact': json['populatedContact'] == null ? undefined : (0, CreateInstallmentFinancialRecordRequestBodyDtoPopulatedContact_1.CreateInstallmentFinancialRecordRequestBodyDtoPopulatedContactFromJSON)(json['populatedContact']),
        'populatedTags': json['populatedTags'] == null ? undefined : (json['populatedTags'].map(CreateFinancialRecordRequestBodyDtoPopulatedTagsInner_1.CreateFinancialRecordRequestBodyDtoPopulatedTagsInnerFromJSON)),
        'populatedFiles': json['populatedFiles'] == null ? undefined : (json['populatedFiles'].map(CreateFinancialRecordRequestBodyDtoPopulatedFilesInner_1.CreateFinancialRecordRequestBodyDtoPopulatedFilesInnerFromJSON)),
        'finalAmount': json['finalAmount'] == null ? undefined : json['finalAmount'],
        'discount': json['discount'] == null ? undefined : json['discount'],
        'finesAndInterest': json['finesAndInterest'] == null ? undefined : json['finesAndInterest'],
    };
}
function InstallmentFinancialRecordDtoToJSON(json) {
    return InstallmentFinancialRecordDtoToJSONTyped(json, false);
}
function InstallmentFinancialRecordDtoToJSONTyped(value, ignoreDiscriminator) {
    if (ignoreDiscriminator === void 0) { ignoreDiscriminator = false; }
    if (value == null) {
        return value;
    }
    return {
        'id': value['id'],
        'ownerOrganization': value['ownerOrganization'],
        'direction': value['direction'],
        'frequency': value['frequency'],
        'firstInstallmentDate': value['firstInstallmentDate'],
        'contact': value['contact'],
        'description': value['description'],
        'subcategory': value['subcategory'],
        'amount': value['amount'],
        'tags': value['tags'],
        'competenceDate': value['competenceDate'],
        'files': value['files'],
        'numberOfInstallments': value['numberOfInstallments'],
        'installments': (value['installments'].map(CreateInstallmentFinancialRecordRequestBodyDtoInstallmentsInner_1.CreateInstallmentFinancialRecordRequestBodyDtoInstallmentsInnerToJSON)),
        'createdAt': value['createdAt'],
        'updatedAt': value['updatedAt'],
        'searchScore': value['searchScore'],
        'populatedSubcategory': (0, CreateFinancialRecordRequestBodyDtoPopulatedSubcategory_1.CreateFinancialRecordRequestBodyDtoPopulatedSubcategoryToJSON)(value['populatedSubcategory']),
        'populatedContact': (0, CreateInstallmentFinancialRecordRequestBodyDtoPopulatedContact_1.CreateInstallmentFinancialRecordRequestBodyDtoPopulatedContactToJSON)(value['populatedContact']),
        'populatedTags': value['populatedTags'] == null ? undefined : (value['populatedTags'].map(CreateFinancialRecordRequestBodyDtoPopulatedTagsInner_1.CreateFinancialRecordRequestBodyDtoPopulatedTagsInnerToJSON)),
        'populatedFiles': value['populatedFiles'] == null ? undefined : (value['populatedFiles'].map(CreateFinancialRecordRequestBodyDtoPopulatedFilesInner_1.CreateFinancialRecordRequestBodyDtoPopulatedFilesInnerToJSON)),
        'finalAmount': value['finalAmount'],
        'discount': value['discount'],
        'finesAndInterest': value['finesAndInterest'],
    };
}
