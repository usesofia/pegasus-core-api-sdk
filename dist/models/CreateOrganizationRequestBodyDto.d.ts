/**
 * Sofia Pegasus core-api
 * Api principal do sistema Pegasus para gerenciamento financeiro de pequenas e médias empresas.
 *
 * The version of the OpenAPI document: 1.11.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { CreateOrganizationRequestBodyDtoPopulatedChildrenInner } from './CreateOrganizationRequestBodyDtoPopulatedChildrenInner';
import type { CreateOrganizationRequestBodyDtoGroupSettings } from './CreateOrganizationRequestBodyDtoGroupSettings';
import type { CreateOrganizationRequestBodyDtoPopulatedParent } from './CreateOrganizationRequestBodyDtoPopulatedParent';
/**
 *
 * @export
 * @interface CreateOrganizationRequestBodyDto
 */
export interface CreateOrganizationRequestBodyDto {
    /**
     * Nome da organização.
     * @type {string}
     * @memberof CreateOrganizationRequestBodyDto
     */
    name: string;
    /**
     * Slug da organização.
     * @type {string}
     * @memberof CreateOrganizationRequestBodyDto
     */
    slug: string;
    /**
     * Tipo da organização.
     * @type {string}
     * @memberof CreateOrganizationRequestBodyDto
     */
    type: CreateOrganizationRequestBodyDtoTypeEnum;
    /**
     * Documento da organização. Geralmente CNPJ.
     * @type {string}
     * @memberof CreateOrganizationRequestBodyDto
     */
    document?: string;
    /**
     * Identificador da organização pai.
     * @type {string}
     * @memberof CreateOrganizationRequestBodyDto
     */
    parent?: string | null;
    /**
     *
     * @type {CreateOrganizationRequestBodyDtoPopulatedParent}
     * @memberof CreateOrganizationRequestBodyDto
     */
    populatedParent?: CreateOrganizationRequestBodyDtoPopulatedParent | null;
    /**
     * Identificadores das organizações filhas.
     * @type {Array<string>}
     * @memberof CreateOrganizationRequestBodyDto
     */
    children?: Array<string> | null;
    /**
     * Organizações filhas.
     * @type {Array<CreateOrganizationRequestBodyDtoPopulatedChildrenInner>}
     * @memberof CreateOrganizationRequestBodyDto
     */
    populatedChildren?: Array<CreateOrganizationRequestBodyDtoPopulatedChildrenInner> | null;
    /**
     * Descrição da organização.
     * @type {string}
     * @memberof CreateOrganizationRequestBodyDto
     */
    description?: string;
    /**
     *
     * @type {CreateOrganizationRequestBodyDtoGroupSettings}
     * @memberof CreateOrganizationRequestBodyDto
     */
    groupSettings?: CreateOrganizationRequestBodyDtoGroupSettings;
    /**
     * Imagem do logo em base64.
     * @type {string}
     * @memberof CreateOrganizationRequestBodyDto
     */
    imageInBase64?: string;
}
/**
 * @export
 */
export declare const CreateOrganizationRequestBodyDtoTypeEnum: {
    readonly Leaf: "LEAF";
    readonly Group: "GROUP";
};
export type CreateOrganizationRequestBodyDtoTypeEnum = typeof CreateOrganizationRequestBodyDtoTypeEnum[keyof typeof CreateOrganizationRequestBodyDtoTypeEnum];
/**
 * Check if a given object implements the CreateOrganizationRequestBodyDto interface.
 */
export declare function instanceOfCreateOrganizationRequestBodyDto(value: object): value is CreateOrganizationRequestBodyDto;
export declare function CreateOrganizationRequestBodyDtoFromJSON(json: any): CreateOrganizationRequestBodyDto;
export declare function CreateOrganizationRequestBodyDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): CreateOrganizationRequestBodyDto;
export declare function CreateOrganizationRequestBodyDtoToJSON(json: any): CreateOrganizationRequestBodyDto;
export declare function CreateOrganizationRequestBodyDtoToJSONTyped(value?: CreateOrganizationRequestBodyDto | null, ignoreDiscriminator?: boolean): any;
