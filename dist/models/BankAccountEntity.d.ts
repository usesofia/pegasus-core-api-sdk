/**
 * Sofia Pegasus core-api
 * Api principal do sistema Pegasus para gerenciamento financeiro de pequenas e médias empresas.
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 *
 * @export
 * @interface BankAccountEntity
 */
export interface BankAccountEntity {
    /**
     * Identificador da conta bancária.
     * @type {string}
     * @memberof BankAccountEntity
     */
    id: string;
    /**
     * Identificador da organização dona da conta bancária.
     * @type {string}
     * @memberof BankAccountEntity
     */
    ownerOrganization: string;
    /**
     * Nome da conta bancária.
     * @type {string}
     * @memberof BankAccountEntity
     */
    name: string;
    /**
     * Tipo da conta bancária.
     * @type {string}
     * @memberof BankAccountEntity
     */
    type: BankAccountEntityTypeEnum;
    /**
     * Número da conta ou cartão.
     * @type {string}
     * @memberof BankAccountEntity
     */
    number: string;
    /**
     * Indica se a conta é automática ou manual.
     * @type {boolean}
     * @memberof BankAccountEntity
     */
    isAutomatic: boolean;
    /**
     * Indica se a conta é a padrão.
     * @type {boolean}
     * @memberof BankAccountEntity
     */
    isDefault: boolean;
    /**
     * Data do saldo inicial.
     * @type {any}
     * @memberof BankAccountEntity
     */
    initialBalanceDate?: any | null;
    /**
     * Valor do saldo inicial.
     * @type {number}
     * @memberof BankAccountEntity
     */
    initialBalanceAmount?: number | null;
    /**
     * Instituição financeira.
     * @type {string}
     * @memberof BankAccountEntity
     */
    institution: string;
    /**
     * Indica se a conta está ativa.
     * @type {boolean}
     * @memberof BankAccountEntity
     */
    active: boolean;
    /**
     * Fornecedor da conta bancária.
     * @type {string}
     * @memberof BankAccountEntity
     */
    provider?: BankAccountEntityProviderEnum | null;
    /**
     * Identificador da conta bancária no fornecedor.
     * @type {string}
     * @memberof BankAccountEntity
     */
    providerAccountId?: string | null;
    /**
     * Identificador do item de conexão do fornecedor.
     * @type {string}
     * @memberof BankAccountEntity
     */
    providerItemId?: string | null;
    /**
     * Data de criação da conta bancária.
     * @type {any}
     * @memberof BankAccountEntity
     */
    createdAt: any | null;
    /**
     * Data de atualização da conta bancária.
     * @type {any}
     * @memberof BankAccountEntity
     */
    updatedAt: any | null;
}
/**
 * @export
 */
export declare const BankAccountEntityTypeEnum: {
    readonly Money: "MONEY";
    readonly Checking: "CHECKING";
    readonly Savings: "SAVINGS";
    readonly CreditCard: "CREDIT_CARD";
    readonly Application: "APPLICATION";
    readonly Other: "OTHER";
};
export type BankAccountEntityTypeEnum = typeof BankAccountEntityTypeEnum[keyof typeof BankAccountEntityTypeEnum];
/**
 * @export
 */
export declare const BankAccountEntityProviderEnum: {
    readonly Pluggy: "PLUGGY";
    readonly Other: "OTHER";
};
export type BankAccountEntityProviderEnum = typeof BankAccountEntityProviderEnum[keyof typeof BankAccountEntityProviderEnum];
/**
 * Check if a given object implements the BankAccountEntity interface.
 */
export declare function instanceOfBankAccountEntity(value: object): value is BankAccountEntity;
export declare function BankAccountEntityFromJSON(json: any): BankAccountEntity;
export declare function BankAccountEntityFromJSONTyped(json: any, ignoreDiscriminator: boolean): BankAccountEntity;
export declare function BankAccountEntityToJSON(json: any): BankAccountEntity;
export declare function BankAccountEntityToJSONTyped(value?: BankAccountEntity | null, ignoreDiscriminator?: boolean): any;
