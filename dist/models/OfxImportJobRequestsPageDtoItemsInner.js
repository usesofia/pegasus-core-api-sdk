"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * Sofia Pegasus core-api
 * Api principal do sistema Pegasus para gerenciamento financeiro de pequenas e m√©dias empresas.
 *
 * The version of the OpenAPI document: 1.12.16
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.OfxImportJobRequestsPageDtoItemsInnerStatusEnum = void 0;
exports.instanceOfOfxImportJobRequestsPageDtoItemsInner = instanceOfOfxImportJobRequestsPageDtoItemsInner;
exports.OfxImportJobRequestsPageDtoItemsInnerFromJSON = OfxImportJobRequestsPageDtoItemsInnerFromJSON;
exports.OfxImportJobRequestsPageDtoItemsInnerFromJSONTyped = OfxImportJobRequestsPageDtoItemsInnerFromJSONTyped;
exports.OfxImportJobRequestsPageDtoItemsInnerToJSON = OfxImportJobRequestsPageDtoItemsInnerToJSON;
exports.OfxImportJobRequestsPageDtoItemsInnerToJSONTyped = OfxImportJobRequestsPageDtoItemsInnerToJSONTyped;
var OfxImportJobRequestsPageDtoItemsInnerPopulatedBankAccount_1 = require("./OfxImportJobRequestsPageDtoItemsInnerPopulatedBankAccount");
var OfxImportJobRequestsPageDtoItemsInnerExecutionsInner_1 = require("./OfxImportJobRequestsPageDtoItemsInnerExecutionsInner");
var OfxImportJobRequestsPageDtoItemsInnerUser_1 = require("./OfxImportJobRequestsPageDtoItemsInnerUser");
/**
 * @export
 */
exports.OfxImportJobRequestsPageDtoItemsInnerStatusEnum = {
    Pending: 'PENDING',
    Processing: 'PROCESSING',
    Finished: 'FINISHED'
};
/**
 * Check if a given object implements the OfxImportJobRequestsPageDtoItemsInner interface.
 */
function instanceOfOfxImportJobRequestsPageDtoItemsInner(value) {
    if (!('id' in value) || value['id'] === undefined)
        return false;
    if (!('bankAccountId' in value) || value['bankAccountId'] === undefined)
        return false;
    if (!('bankAccountName' in value) || value['bankAccountName'] === undefined)
        return false;
    if (!('fileName' in value) || value['fileName'] === undefined)
        return false;
    if (!('requesterUserId' in value) || value['requesterUserId'] === undefined)
        return false;
    if (!('createdAt' in value) || value['createdAt'] === undefined)
        return false;
    if (!('updatedAt' in value) || value['updatedAt'] === undefined)
        return false;
    if (!('executions' in value) || value['executions'] === undefined)
        return false;
    if (!('user' in value) || value['user'] === undefined)
        return false;
    if (!('status' in value) || value['status'] === undefined)
        return false;
    if (!('populatedBankAccount' in value) || value['populatedBankAccount'] === undefined)
        return false;
    return true;
}
function OfxImportJobRequestsPageDtoItemsInnerFromJSON(json) {
    return OfxImportJobRequestsPageDtoItemsInnerFromJSONTyped(json, false);
}
function OfxImportJobRequestsPageDtoItemsInnerFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'id': json['id'],
        'bankAccountId': json['bankAccountId'],
        'bankAccountName': json['bankAccountName'],
        'fileName': json['fileName'],
        'requesterUserId': json['requesterUserId'],
        'totalTransactions': json['totalTransactions'] == null ? undefined : json['totalTransactions'],
        'periodStartDate': json['periodStartDate'] == null ? undefined : json['periodStartDate'],
        'periodEndDate': json['periodEndDate'] == null ? undefined : json['periodEndDate'],
        'createdAt': json['createdAt'],
        'updatedAt': json['updatedAt'],
        'executions': (json['executions'].map(OfxImportJobRequestsPageDtoItemsInnerExecutionsInner_1.OfxImportJobRequestsPageDtoItemsInnerExecutionsInnerFromJSON)),
        'nSuccessImportedTransactions': json['nSuccessImportedTransactions'] == null ? undefined : json['nSuccessImportedTransactions'],
        'user': (0, OfxImportJobRequestsPageDtoItemsInnerUser_1.OfxImportJobRequestsPageDtoItemsInnerUserFromJSON)(json['user']),
        'status': json['status'],
        'populatedBankAccount': (0, OfxImportJobRequestsPageDtoItemsInnerPopulatedBankAccount_1.OfxImportJobRequestsPageDtoItemsInnerPopulatedBankAccountFromJSON)(json['populatedBankAccount']),
    };
}
function OfxImportJobRequestsPageDtoItemsInnerToJSON(json) {
    return OfxImportJobRequestsPageDtoItemsInnerToJSONTyped(json, false);
}
function OfxImportJobRequestsPageDtoItemsInnerToJSONTyped(value, ignoreDiscriminator) {
    if (ignoreDiscriminator === void 0) { ignoreDiscriminator = false; }
    if (value == null) {
        return value;
    }
    return {
        'id': value['id'],
        'bankAccountId': value['bankAccountId'],
        'bankAccountName': value['bankAccountName'],
        'fileName': value['fileName'],
        'requesterUserId': value['requesterUserId'],
        'totalTransactions': value['totalTransactions'],
        'periodStartDate': value['periodStartDate'],
        'periodEndDate': value['periodEndDate'],
        'createdAt': value['createdAt'],
        'updatedAt': value['updatedAt'],
        'executions': (value['executions'].map(OfxImportJobRequestsPageDtoItemsInnerExecutionsInner_1.OfxImportJobRequestsPageDtoItemsInnerExecutionsInnerToJSON)),
        'nSuccessImportedTransactions': value['nSuccessImportedTransactions'],
        'user': (0, OfxImportJobRequestsPageDtoItemsInnerUser_1.OfxImportJobRequestsPageDtoItemsInnerUserToJSON)(value['user']),
        'status': value['status'],
        'populatedBankAccount': (0, OfxImportJobRequestsPageDtoItemsInnerPopulatedBankAccount_1.OfxImportJobRequestsPageDtoItemsInnerPopulatedBankAccountToJSON)(value['populatedBankAccount']),
    };
}
