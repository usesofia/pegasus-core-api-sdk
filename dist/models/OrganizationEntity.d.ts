/**
 * Sofia Pegasus core-api
 * Api principal do sistema Pegasus para gerenciamento financeiro de pequenas e médias empresas.
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { CreateOrganizationRequestBodyDtoPopulatedChildrenInner } from './CreateOrganizationRequestBodyDtoPopulatedChildrenInner';
import type { CreateOrganizationRequestBodyDtoGroupSettings } from './CreateOrganizationRequestBodyDtoGroupSettings';
import type { CreateOrganizationRequestBodyDtoPopulatedParent } from './CreateOrganizationRequestBodyDtoPopulatedParent';
/**
 *
 * @export
 * @interface OrganizationEntity
 */
export interface OrganizationEntity {
    /**
     * Identificador da organização.
     * @type {string}
     * @memberof OrganizationEntity
     */
    id: string;
    /**
     * Nome da organização.
     * @type {string}
     * @memberof OrganizationEntity
     */
    name: string;
    /**
     * Slug da organização.
     * @type {string}
     * @memberof OrganizationEntity
     */
    slug: string;
    /**
     * Tipo da organização.
     * @type {string}
     * @memberof OrganizationEntity
     */
    type: OrganizationEntityTypeEnum;
    /**
     * Documento da organização. Geralmente CNPJ.
     * @type {string}
     * @memberof OrganizationEntity
     */
    document?: string;
    /**
     * URL da imagem do logo da organização.
     * @type {string}
     * @memberof OrganizationEntity
     */
    imageUrl?: string;
    /**
     * Identificador da organização pai.
     * @type {string}
     * @memberof OrganizationEntity
     */
    parent?: string | null;
    /**
     *
     * @type {CreateOrganizationRequestBodyDtoPopulatedParent}
     * @memberof OrganizationEntity
     */
    populatedParent?: CreateOrganizationRequestBodyDtoPopulatedParent | null;
    /**
     * Identificadores das organizações filhas.
     * @type {Array<string>}
     * @memberof OrganizationEntity
     */
    children?: Array<string> | null;
    /**
     * Organizações filhas.
     * @type {Array<CreateOrganizationRequestBodyDtoPopulatedChildrenInner>}
     * @memberof OrganizationEntity
     */
    populatedChildren?: Array<CreateOrganizationRequestBodyDtoPopulatedChildrenInner> | null;
    /**
     * Data de criação da organização.
     * @type {Date}
     * @memberof OrganizationEntity
     */
    createdAt: Date;
    /**
     * Data de atualização da organização.
     * @type {Date}
     * @memberof OrganizationEntity
     */
    updatedAt: Date;
    /**
     *
     * @type {CreateOrganizationRequestBodyDtoGroupSettings}
     * @memberof OrganizationEntity
     */
    groupSettings?: CreateOrganizationRequestBodyDtoGroupSettings;
}
/**
 * @export
 */
export declare const OrganizationEntityTypeEnum: {
    readonly Leaf: "LEAF";
    readonly Group: "GROUP";
};
export type OrganizationEntityTypeEnum = typeof OrganizationEntityTypeEnum[keyof typeof OrganizationEntityTypeEnum];
/**
 * Check if a given object implements the OrganizationEntity interface.
 */
export declare function instanceOfOrganizationEntity(value: object): value is OrganizationEntity;
export declare function OrganizationEntityFromJSON(json: any): OrganizationEntity;
export declare function OrganizationEntityFromJSONTyped(json: any, ignoreDiscriminator: boolean): OrganizationEntity;
export declare function OrganizationEntityToJSON(json: any): OrganizationEntity;
export declare function OrganizationEntityToJSONTyped(value?: OrganizationEntity | null, ignoreDiscriminator?: boolean): any;
