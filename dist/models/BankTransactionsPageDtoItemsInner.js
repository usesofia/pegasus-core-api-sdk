"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * Sofia Pegasus core-api
 * Api principal do sistema Pegasus para gerenciamento financeiro de pequenas e m√©dias empresas.
 *
 * The version of the OpenAPI document: 1.6.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.BankTransactionsPageDtoItemsInnerStatusEnum = exports.BankTransactionsPageDtoItemsInnerTypeEnum = exports.BankTransactionsPageDtoItemsInnerProviderEnum = void 0;
exports.instanceOfBankTransactionsPageDtoItemsInner = instanceOfBankTransactionsPageDtoItemsInner;
exports.BankTransactionsPageDtoItemsInnerFromJSON = BankTransactionsPageDtoItemsInnerFromJSON;
exports.BankTransactionsPageDtoItemsInnerFromJSONTyped = BankTransactionsPageDtoItemsInnerFromJSONTyped;
exports.BankTransactionsPageDtoItemsInnerToJSON = BankTransactionsPageDtoItemsInnerToJSON;
exports.BankTransactionsPageDtoItemsInnerToJSONTyped = BankTransactionsPageDtoItemsInnerToJSONTyped;
var CreateOrUpdateBankTransactionRequestBodyDtoCreditCardMetadata_1 = require("./CreateOrUpdateBankTransactionRequestBodyDtoCreditCardMetadata");
var CreateOrUpdateBankTransactionRequestBodyDtoAiSuggestion_1 = require("./CreateOrUpdateBankTransactionRequestBodyDtoAiSuggestion");
var CreateOrUpdateBankTransactionRequestBodyDtoMerchant_1 = require("./CreateOrUpdateBankTransactionRequestBodyDtoMerchant");
var BankTransactionEntityPopulatedBankAccount_1 = require("./BankTransactionEntityPopulatedBankAccount");
var CreateOrUpdateBankTransactionRequestBodyDtoPaymentData_1 = require("./CreateOrUpdateBankTransactionRequestBodyDtoPaymentData");
/**
 * @export
 */
exports.BankTransactionsPageDtoItemsInnerProviderEnum = {
    Pluggy: 'PLUGGY',
    Ofx: 'OFX',
    Other: 'OTHER'
};
/**
 * @export
 */
exports.BankTransactionsPageDtoItemsInnerTypeEnum = {
    Debit: 'DEBIT',
    Credit: 'CREDIT'
};
/**
 * @export
 */
exports.BankTransactionsPageDtoItemsInnerStatusEnum = {
    Pending: 'PENDING',
    Posted: 'POSTED'
};
/**
 * Check if a given object implements the BankTransactionsPageDtoItemsInner interface.
 */
function instanceOfBankTransactionsPageDtoItemsInner(value) {
    if (!('id' in value) || value['id'] === undefined)
        return false;
    if (!('ownerOrganization' in value) || value['ownerOrganization'] === undefined)
        return false;
    if (!('bankAccount' in value) || value['bankAccount'] === undefined)
        return false;
    if (!('bankAccountName' in value) || value['bankAccountName'] === undefined)
        return false;
    if (!('bankAccountNumber' in value) || value['bankAccountNumber'] === undefined)
        return false;
    if (!('bankAccountInstitutionName' in value) || value['bankAccountInstitutionName'] === undefined)
        return false;
    if (!('provider' in value) || value['provider'] === undefined)
        return false;
    if (!('providerTransactionId' in value) || value['providerTransactionId'] === undefined)
        return false;
    if (!('amountInBrl' in value) || value['amountInBrl'] === undefined)
        return false;
    if (!('amountInBrlVariations' in value) || value['amountInBrlVariations'] === undefined)
        return false;
    if (!('date' in value) || value['date'] === undefined)
        return false;
    if (!('dateVariations' in value) || value['dateVariations'] === undefined)
        return false;
    if (!('type' in value) || value['type'] === undefined)
        return false;
    if (!('typeVariations' in value) || value['typeVariations'] === undefined)
        return false;
    if (!('status' in value) || value['status'] === undefined)
        return false;
    if (!('ignored' in value) || value['ignored'] === undefined)
        return false;
    if (!('createdAt' in value) || value['createdAt'] === undefined)
        return false;
    if (!('updatedAt' in value) || value['updatedAt'] === undefined)
        return false;
    return true;
}
function BankTransactionsPageDtoItemsInnerFromJSON(json) {
    return BankTransactionsPageDtoItemsInnerFromJSONTyped(json, false);
}
function BankTransactionsPageDtoItemsInnerFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'id': json['id'],
        'ownerOrganization': json['ownerOrganization'],
        'bankAccount': json['bankAccount'],
        'bankAccountName': json['bankAccountName'],
        'bankAccountNumber': json['bankAccountNumber'],
        'bankAccountInstitutionName': json['bankAccountInstitutionName'],
        'populatedBankAccount': json['populatedBankAccount'] == null ? undefined : (0, BankTransactionEntityPopulatedBankAccount_1.BankTransactionEntityPopulatedBankAccountFromJSON)(json['populatedBankAccount']),
        'provider': json['provider'],
        'providerTransactionId': json['providerTransactionId'],
        'amountInBrl': json['amountInBrl'],
        'amountInBrlVariations': json['amountInBrlVariations'],
        'date': json['date'],
        'dateVariations': json['dateVariations'],
        'type': json['type'],
        'typeVariations': json['typeVariations'],
        'description': json['description'] == null ? undefined : json['description'],
        'status': json['status'],
        'ignored': json['ignored'],
        'reconciled': json['reconciled'] == null ? undefined : json['reconciled'],
        'financialRecords': json['financialRecords'] == null ? undefined : json['financialRecords'],
        'aiSuggestion': json['aiSuggestion'] == null ? undefined : (0, CreateOrUpdateBankTransactionRequestBodyDtoAiSuggestion_1.CreateOrUpdateBankTransactionRequestBodyDtoAiSuggestionFromJSON)(json['aiSuggestion']),
        'ofxJobRequestId': json['ofxJobRequestId'] == null ? undefined : json['ofxJobRequestId'],
        'ofxJobExecutionId': json['ofxJobExecutionId'] == null ? undefined : json['ofxJobExecutionId'],
        'pluggyJobRequestId': json['pluggyJobRequestId'] == null ? undefined : json['pluggyJobRequestId'],
        'pluggyJobExecutionId': json['pluggyJobExecutionId'] == null ? undefined : json['pluggyJobExecutionId'],
        'externalId': json['externalId'] == null ? undefined : json['externalId'],
        'amount': json['amount'] == null ? undefined : json['amount'],
        'amountInAccountCurrency': json['amountInAccountCurrency'] == null ? undefined : json['amountInAccountCurrency'],
        'balance': json['balance'] == null ? undefined : json['balance'],
        'currencyCode': json['currencyCode'] == null ? undefined : json['currencyCode'],
        'category': json['category'] == null ? undefined : json['category'],
        'providerCode': json['providerCode'] == null ? undefined : json['providerCode'],
        'paymentData': json['paymentData'] == null ? undefined : (0, CreateOrUpdateBankTransactionRequestBodyDtoPaymentData_1.CreateOrUpdateBankTransactionRequestBodyDtoPaymentDataFromJSON)(json['paymentData']),
        'creditCardMetadata': json['creditCardMetadata'] == null ? undefined : (0, CreateOrUpdateBankTransactionRequestBodyDtoCreditCardMetadata_1.CreateOrUpdateBankTransactionRequestBodyDtoCreditCardMetadataFromJSON)(json['creditCardMetadata']),
        'merchant': json['merchant'] == null ? undefined : (0, CreateOrUpdateBankTransactionRequestBodyDtoMerchant_1.CreateOrUpdateBankTransactionRequestBodyDtoMerchantFromJSON)(json['merchant']),
        'categoryId': json['categoryId'] == null ? undefined : json['categoryId'],
        'operationType': json['operationType'] == null ? undefined : json['operationType'],
        'searchScore': json['searchScore'] == null ? undefined : json['searchScore'],
        'createdAt': json['createdAt'],
        'updatedAt': json['updatedAt'],
    };
}
function BankTransactionsPageDtoItemsInnerToJSON(json) {
    return BankTransactionsPageDtoItemsInnerToJSONTyped(json, false);
}
function BankTransactionsPageDtoItemsInnerToJSONTyped(value, ignoreDiscriminator) {
    if (ignoreDiscriminator === void 0) { ignoreDiscriminator = false; }
    if (value == null) {
        return value;
    }
    return {
        'id': value['id'],
        'ownerOrganization': value['ownerOrganization'],
        'bankAccount': value['bankAccount'],
        'bankAccountName': value['bankAccountName'],
        'bankAccountNumber': value['bankAccountNumber'],
        'bankAccountInstitutionName': value['bankAccountInstitutionName'],
        'populatedBankAccount': (0, BankTransactionEntityPopulatedBankAccount_1.BankTransactionEntityPopulatedBankAccountToJSON)(value['populatedBankAccount']),
        'provider': value['provider'],
        'providerTransactionId': value['providerTransactionId'],
        'amountInBrl': value['amountInBrl'],
        'amountInBrlVariations': value['amountInBrlVariations'],
        'date': value['date'],
        'dateVariations': value['dateVariations'],
        'type': value['type'],
        'typeVariations': value['typeVariations'],
        'description': value['description'],
        'status': value['status'],
        'ignored': value['ignored'],
        'reconciled': value['reconciled'],
        'financialRecords': value['financialRecords'],
        'aiSuggestion': (0, CreateOrUpdateBankTransactionRequestBodyDtoAiSuggestion_1.CreateOrUpdateBankTransactionRequestBodyDtoAiSuggestionToJSON)(value['aiSuggestion']),
        'ofxJobRequestId': value['ofxJobRequestId'],
        'ofxJobExecutionId': value['ofxJobExecutionId'],
        'pluggyJobRequestId': value['pluggyJobRequestId'],
        'pluggyJobExecutionId': value['pluggyJobExecutionId'],
        'externalId': value['externalId'],
        'amount': value['amount'],
        'amountInAccountCurrency': value['amountInAccountCurrency'],
        'balance': value['balance'],
        'currencyCode': value['currencyCode'],
        'category': value['category'],
        'providerCode': value['providerCode'],
        'paymentData': (0, CreateOrUpdateBankTransactionRequestBodyDtoPaymentData_1.CreateOrUpdateBankTransactionRequestBodyDtoPaymentDataToJSON)(value['paymentData']),
        'creditCardMetadata': (0, CreateOrUpdateBankTransactionRequestBodyDtoCreditCardMetadata_1.CreateOrUpdateBankTransactionRequestBodyDtoCreditCardMetadataToJSON)(value['creditCardMetadata']),
        'merchant': (0, CreateOrUpdateBankTransactionRequestBodyDtoMerchant_1.CreateOrUpdateBankTransactionRequestBodyDtoMerchantToJSON)(value['merchant']),
        'categoryId': value['categoryId'],
        'operationType': value['operationType'],
        'searchScore': value['searchScore'],
        'createdAt': value['createdAt'],
        'updatedAt': value['updatedAt'],
    };
}
