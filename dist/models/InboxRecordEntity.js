"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * Sofia Pegasus core-api
 * Api principal do sistema Pegasus para gerenciamento financeiro de pequenas e m√©dias empresas.
 *
 * The version of the OpenAPI document: 1.0.8
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.InboxRecordEntityFolderEnum = exports.InboxRecordEntityStatusEnum = exports.InboxRecordEntityNatureEnum = exports.InboxRecordEntityOriginEnum = void 0;
exports.instanceOfInboxRecordEntity = instanceOfInboxRecordEntity;
exports.InboxRecordEntityFromJSON = InboxRecordEntityFromJSON;
exports.InboxRecordEntityFromJSONTyped = InboxRecordEntityFromJSONTyped;
exports.InboxRecordEntityToJSON = InboxRecordEntityToJSON;
exports.InboxRecordEntityToJSONTyped = InboxRecordEntityToJSONTyped;
var CreateInboxRecordRequestBodyDtoBestSuggestedAction_1 = require("./CreateInboxRecordRequestBodyDtoBestSuggestedAction");
var InboxRecordEntityFinalBestSuggestedAction_1 = require("./InboxRecordEntityFinalBestSuggestedAction");
var CreateInboxRecordRequestBodyDtoWhatsappMessageData_1 = require("./CreateInboxRecordRequestBodyDtoWhatsappMessageData");
var InboxRecordEntitySubsequentInboxRecordsInner_1 = require("./InboxRecordEntitySubsequentInboxRecordsInner");
var InboxRecordEntityAutoExecute_1 = require("./InboxRecordEntityAutoExecute");
var InboxRecordEntityLinksInner_1 = require("./InboxRecordEntityLinksInner");
var CreateInboxRecordRequestBodyDtoEmailMessageData_1 = require("./CreateInboxRecordRequestBodyDtoEmailMessageData");
/**
 * @export
 */
exports.InboxRecordEntityOriginEnum = {
    WhatsappAgent: 'WHATSAPP_AGENT',
    EmailForwardingIntegration: 'EMAIL_FORWARDING_INTEGRATION'
};
/**
 * @export
 */
exports.InboxRecordEntityNatureEnum = {
    WhatsappMessage: 'WHATSAPP_MESSAGE',
    EmailMessage: 'EMAIL_MESSAGE'
};
/**
 * @export
 */
exports.InboxRecordEntityStatusEnum = {
    Pending: 'PENDING',
    Delayed: 'DELAYED',
    Archived: 'ARCHIVED'
};
/**
 * @export
 */
exports.InboxRecordEntityFolderEnum = {
    Main: 'MAIN',
    Spam: 'SPAM'
};
/**
 * Check if a given object implements the InboxRecordEntity interface.
 */
function instanceOfInboxRecordEntity(value) {
    if (!('id' in value) || value['id'] === undefined)
        return false;
    if (!('ownerOrganization' in value) || value['ownerOrganization'] === undefined)
        return false;
    if (!('origin' in value) || value['origin'] === undefined)
        return false;
    if (!('nature' in value) || value['nature'] === undefined)
        return false;
    if (!('status' in value) || value['status'] === undefined)
        return false;
    if (!('folder' in value) || value['folder'] === undefined)
        return false;
    if (!('linked' in value) || value['linked'] === undefined)
        return false;
    if (!('links' in value) || value['links'] === undefined)
        return false;
    if (!('subsequentInboxRecords' in value) || value['subsequentInboxRecords'] === undefined)
        return false;
    if (!('createdAt' in value) || value['createdAt'] === undefined)
        return false;
    if (!('updatedAt' in value) || value['updatedAt'] === undefined)
        return false;
    return true;
}
function InboxRecordEntityFromJSON(json) {
    return InboxRecordEntityFromJSONTyped(json, false);
}
function InboxRecordEntityFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'id': json['id'],
        'ownerOrganization': json['ownerOrganization'],
        'origin': json['origin'],
        'nature': json['nature'],
        'status': json['status'],
        'folder': json['folder'],
        'linked': json['linked'],
        'links': (json['links'].map(InboxRecordEntityLinksInner_1.InboxRecordEntityLinksInnerFromJSON)),
        'delayedTo': json['delayedTo'] == null ? undefined : json['delayedTo'],
        'bestSuggestedAction': json['bestSuggestedAction'] == null ? undefined : (0, CreateInboxRecordRequestBodyDtoBestSuggestedAction_1.CreateInboxRecordRequestBodyDtoBestSuggestedActionFromJSON)(json['bestSuggestedAction']),
        'finalBestSuggestedAction': json['finalBestSuggestedAction'] == null ? undefined : (0, InboxRecordEntityFinalBestSuggestedAction_1.InboxRecordEntityFinalBestSuggestedActionFromJSON)(json['finalBestSuggestedAction']),
        'subsequentInboxRecords': (json['subsequentInboxRecords'].map(InboxRecordEntitySubsequentInboxRecordsInner_1.InboxRecordEntitySubsequentInboxRecordsInnerFromJSON)),
        'whatsappMessageData': json['whatsappMessageData'] == null ? undefined : (0, CreateInboxRecordRequestBodyDtoWhatsappMessageData_1.CreateInboxRecordRequestBodyDtoWhatsappMessageDataFromJSON)(json['whatsappMessageData']),
        'emailMessageData': json['emailMessageData'] == null ? undefined : (0, CreateInboxRecordRequestBodyDtoEmailMessageData_1.CreateInboxRecordRequestBodyDtoEmailMessageDataFromJSON)(json['emailMessageData']),
        'autoExecute': json['autoExecute'] == null ? undefined : (0, InboxRecordEntityAutoExecute_1.InboxRecordEntityAutoExecuteFromJSON)(json['autoExecute']),
        'createdAt': json['createdAt'],
        'updatedAt': json['updatedAt'],
    };
}
function InboxRecordEntityToJSON(json) {
    return InboxRecordEntityToJSONTyped(json, false);
}
function InboxRecordEntityToJSONTyped(value, ignoreDiscriminator) {
    if (ignoreDiscriminator === void 0) { ignoreDiscriminator = false; }
    if (value == null) {
        return value;
    }
    return {
        'id': value['id'],
        'ownerOrganization': value['ownerOrganization'],
        'origin': value['origin'],
        'nature': value['nature'],
        'status': value['status'],
        'folder': value['folder'],
        'linked': value['linked'],
        'links': (value['links'].map(InboxRecordEntityLinksInner_1.InboxRecordEntityLinksInnerToJSON)),
        'delayedTo': value['delayedTo'],
        'bestSuggestedAction': (0, CreateInboxRecordRequestBodyDtoBestSuggestedAction_1.CreateInboxRecordRequestBodyDtoBestSuggestedActionToJSON)(value['bestSuggestedAction']),
        'finalBestSuggestedAction': (0, InboxRecordEntityFinalBestSuggestedAction_1.InboxRecordEntityFinalBestSuggestedActionToJSON)(value['finalBestSuggestedAction']),
        'subsequentInboxRecords': (value['subsequentInboxRecords'].map(InboxRecordEntitySubsequentInboxRecordsInner_1.InboxRecordEntitySubsequentInboxRecordsInnerToJSON)),
        'whatsappMessageData': (0, CreateInboxRecordRequestBodyDtoWhatsappMessageData_1.CreateInboxRecordRequestBodyDtoWhatsappMessageDataToJSON)(value['whatsappMessageData']),
        'emailMessageData': (0, CreateInboxRecordRequestBodyDtoEmailMessageData_1.CreateInboxRecordRequestBodyDtoEmailMessageDataToJSON)(value['emailMessageData']),
        'autoExecute': (0, InboxRecordEntityAutoExecute_1.InboxRecordEntityAutoExecuteToJSON)(value['autoExecute']),
        'createdAt': value['createdAt'],
        'updatedAt': value['updatedAt'],
    };
}
