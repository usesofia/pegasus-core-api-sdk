/**
 * Sofia Pegasus core-api
 * Api principal do sistema Pegasus para gerenciamento financeiro de pequenas e médias empresas.
 *
 * The version of the OpenAPI document: 1.12.11
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { CreateFinancialRecordRequestBodyDtoPopulatedSubcategoryPopulatedNormalizedSubcategory } from './CreateFinancialRecordRequestBodyDtoPopulatedSubcategoryPopulatedNormalizedSubcategory';
import type { CreateFinancialRecordRequestBodyDtoPopulatedSubcategoryPopulatedCategory } from './CreateFinancialRecordRequestBodyDtoPopulatedSubcategoryPopulatedCategory';
/**
 *
 * @export
 * @interface SubcategoryEntity
 */
export interface SubcategoryEntity {
    /**
     * Identificador da subcategoria.
     * @type {string}
     * @memberof SubcategoryEntity
     */
    id: string;
    /**
     * Identificador da organização dona da subcategoria.
     * @type {string}
     * @memberof SubcategoryEntity
     */
    ownerOrganization: string;
    /**
     * Nome da subcategoria.
     * @type {string}
     * @memberof SubcategoryEntity
     */
    name: string;
    /**
     * Slug da subcategoria.
     * @type {string}
     * @memberof SubcategoryEntity
     */
    slug: string;
    /**
     * Índice da subcategoria.
     * @type {number}
     * @memberof SubcategoryEntity
     */
    index: number;
    /**
     * Identificador da categoria.
     * @type {string}
     * @memberof SubcategoryEntity
     */
    category: string;
    /**
     *
     * @type {CreateFinancialRecordRequestBodyDtoPopulatedSubcategoryPopulatedCategory}
     * @memberof SubcategoryEntity
     */
    populatedCategory?: CreateFinancialRecordRequestBodyDtoPopulatedSubcategoryPopulatedCategory | null;
    /**
     * Identificador da subcategoria normalizada.
     * @type {string}
     * @memberof SubcategoryEntity
     */
    normalizedSubcategory?: string | null;
    /**
     *
     * @type {CreateFinancialRecordRequestBodyDtoPopulatedSubcategoryPopulatedNormalizedSubcategory}
     * @memberof SubcategoryEntity
     */
    populatedNormalizedSubcategory?: CreateFinancialRecordRequestBodyDtoPopulatedSubcategoryPopulatedNormalizedSubcategory | null;
    /**
     * Indica se a subcategoria deve ser exibida no DRE.
     * @type {boolean}
     * @memberof SubcategoryEntity
     */
    considerInDre: boolean;
    /**
     * Descrição da subcategoria.
     * @type {string}
     * @memberof SubcategoryEntity
     */
    description: string;
    /**
     * Indica se a subcategoria está ativa.
     * @type {boolean}
     * @memberof SubcategoryEntity
     */
    active?: boolean;
    /**
     * Pontuação de busca da subcategoria.
     * @type {number}
     * @memberof SubcategoryEntity
     */
    searchScore?: number | null;
    /**
     * Data de criação da subcategoria.
     * @type {any}
     * @memberof SubcategoryEntity
     */
    createdAt: any | null;
    /**
     * Data de atualização da subcategoria.
     * @type {any}
     * @memberof SubcategoryEntity
     */
    updatedAt: any | null;
}
/**
 * Check if a given object implements the SubcategoryEntity interface.
 */
export declare function instanceOfSubcategoryEntity(value: object): value is SubcategoryEntity;
export declare function SubcategoryEntityFromJSON(json: any): SubcategoryEntity;
export declare function SubcategoryEntityFromJSONTyped(json: any, ignoreDiscriminator: boolean): SubcategoryEntity;
export declare function SubcategoryEntityToJSON(json: any): SubcategoryEntity;
export declare function SubcategoryEntityToJSONTyped(value?: SubcategoryEntity | null, ignoreDiscriminator?: boolean): any;
