"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * Sofia Pegasus core-api
 * Api principal do sistema Pegasus para gerenciamento financeiro de pequenas e m√©dias empresas.
 *
 * The version of the OpenAPI document: 1.12.11
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.BulkRemoveJobRequestEntityResourceEnum = void 0;
exports.instanceOfBulkRemoveJobRequestEntity = instanceOfBulkRemoveJobRequestEntity;
exports.BulkRemoveJobRequestEntityFromJSON = BulkRemoveJobRequestEntityFromJSON;
exports.BulkRemoveJobRequestEntityFromJSONTyped = BulkRemoveJobRequestEntityFromJSONTyped;
exports.BulkRemoveJobRequestEntityToJSON = BulkRemoveJobRequestEntityToJSON;
exports.BulkRemoveJobRequestEntityToJSONTyped = BulkRemoveJobRequestEntityToJSONTyped;
/**
 * @export
 */
exports.BulkRemoveJobRequestEntityResourceEnum = {
    FinancialRecords: 'FinancialRecords',
    Contacts: 'Contacts',
    BankAccounts: 'BankAccounts',
    BankTransactions: 'BankTransactions',
    InstallmentFinancialRecords: 'InstallmentFinancialRecords',
    RecurringFinancialRecords: 'RecurringFinancialRecords',
    Tags: 'Tags',
    Subcategories: 'Subcategories'
};
/**
 * Check if a given object implements the BulkRemoveJobRequestEntity interface.
 */
function instanceOfBulkRemoveJobRequestEntity(value) {
    if (!('id' in value) || value['id'] === undefined)
        return false;
    if (!('resource' in value) || value['resource'] === undefined)
        return false;
    if (!('ids' in value) || value['ids'] === undefined)
        return false;
    if (!('requesterUserId' in value) || value['requesterUserId'] === undefined)
        return false;
    if (!('createdAt' in value) || value['createdAt'] === undefined)
        return false;
    if (!('updatedAt' in value) || value['updatedAt'] === undefined)
        return false;
    if (!('deletedAt' in value) || value['deletedAt'] === undefined)
        return false;
    return true;
}
function BulkRemoveJobRequestEntityFromJSON(json) {
    return BulkRemoveJobRequestEntityFromJSONTyped(json, false);
}
function BulkRemoveJobRequestEntityFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'id': json['id'],
        'resource': json['resource'],
        'ids': json['ids'],
        'requesterUserId': json['requesterUserId'],
        'createdAt': json['createdAt'],
        'updatedAt': json['updatedAt'],
        'deletedAt': json['deletedAt'],
    };
}
function BulkRemoveJobRequestEntityToJSON(json) {
    return BulkRemoveJobRequestEntityToJSONTyped(json, false);
}
function BulkRemoveJobRequestEntityToJSONTyped(value, ignoreDiscriminator) {
    if (ignoreDiscriminator === void 0) { ignoreDiscriminator = false; }
    if (value == null) {
        return value;
    }
    return {
        'id': value['id'],
        'resource': value['resource'],
        'ids': value['ids'],
        'requesterUserId': value['requesterUserId'],
        'createdAt': value['createdAt'],
        'updatedAt': value['updatedAt'],
        'deletedAt': value['deletedAt'],
    };
}
