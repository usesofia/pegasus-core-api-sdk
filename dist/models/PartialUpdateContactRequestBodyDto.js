"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * Sofia Pegasus core-api
 * Api principal do sistema Pegasus para gerenciamento financeiro de pequenas e m√©dias empresas.
 *
 * The version of the OpenAPI document: 1.7.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.PartialUpdateContactRequestBodyDtoChannelEnum = exports.PartialUpdateContactRequestBodyDtoOriginEnum = exports.PartialUpdateContactRequestBodyDtoDocumentTypeEnum = exports.PartialUpdateContactRequestBodyDtoTypesEnum = void 0;
exports.instanceOfPartialUpdateContactRequestBodyDto = instanceOfPartialUpdateContactRequestBodyDto;
exports.PartialUpdateContactRequestBodyDtoFromJSON = PartialUpdateContactRequestBodyDtoFromJSON;
exports.PartialUpdateContactRequestBodyDtoFromJSONTyped = PartialUpdateContactRequestBodyDtoFromJSONTyped;
exports.PartialUpdateContactRequestBodyDtoToJSON = PartialUpdateContactRequestBodyDtoToJSON;
exports.PartialUpdateContactRequestBodyDtoToJSONTyped = PartialUpdateContactRequestBodyDtoToJSONTyped;
var CreateContactRequestBodyDtoAddress_1 = require("./CreateContactRequestBodyDtoAddress");
/**
 * @export
 */
exports.PartialUpdateContactRequestBodyDtoTypesEnum = {
    Customer: 'CUSTOMER',
    Employee: 'EMPLOYEE',
    Supplier: 'SUPPLIER',
    Partner: 'PARTNER'
};
/**
 * @export
 */
exports.PartialUpdateContactRequestBodyDtoDocumentTypeEnum = {
    Cnpj: 'CNPJ',
    Cpf: 'CPF'
};
/**
 * @export
 */
exports.PartialUpdateContactRequestBodyDtoOriginEnum = {
    Indication: 'INDICATION',
    Ads: 'ADS',
    OrganicSearch: 'ORGANIC_SEARCH',
    SocialMedia: 'SOCIAL_MEDIA',
    Events: 'EVENTS',
    Partnerships: 'PARTNERSHIPS',
    PhysicalStore: 'PHYSICAL_STORE',
    Other: 'OTHER'
};
/**
 * @export
 */
exports.PartialUpdateContactRequestBodyDtoChannelEnum = {
    WebApp: 'WEB_APP',
    Whatsapp: 'WHATSAPP',
    System: 'SYSTEM',
    Email: 'EMAIL'
};
/**
 * Check if a given object implements the PartialUpdateContactRequestBodyDto interface.
 */
function instanceOfPartialUpdateContactRequestBodyDto(value) {
    if (!('channel' in value) || value['channel'] === undefined)
        return false;
    return true;
}
function PartialUpdateContactRequestBodyDtoFromJSON(json) {
    return PartialUpdateContactRequestBodyDtoFromJSONTyped(json, false);
}
function PartialUpdateContactRequestBodyDtoFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'name': json['name'] == null ? undefined : json['name'],
        'types': json['types'] == null ? undefined : json['types'],
        'documentType': json['documentType'] == null ? undefined : json['documentType'],
        'document': json['document'] == null ? undefined : json['document'],
        'email': json['email'] == null ? undefined : json['email'],
        'phone': json['phone'] == null ? undefined : json['phone'],
        'pixKeys': json['pixKeys'] == null ? undefined : json['pixKeys'],
        'birthDate': json['birthDate'] == null ? undefined : json['birthDate'],
        'origin': json['origin'] == null ? undefined : json['origin'],
        'address': json['address'] == null ? undefined : (0, CreateContactRequestBodyDtoAddress_1.CreateContactRequestBodyDtoAddressFromJSON)(json['address']),
        'searchScore': json['searchScore'] == null ? undefined : json['searchScore'],
        'channel': json['channel'],
    };
}
function PartialUpdateContactRequestBodyDtoToJSON(json) {
    return PartialUpdateContactRequestBodyDtoToJSONTyped(json, false);
}
function PartialUpdateContactRequestBodyDtoToJSONTyped(value, ignoreDiscriminator) {
    if (ignoreDiscriminator === void 0) { ignoreDiscriminator = false; }
    if (value == null) {
        return value;
    }
    return {
        'name': value['name'],
        'types': value['types'],
        'documentType': value['documentType'],
        'document': value['document'],
        'email': value['email'],
        'phone': value['phone'],
        'pixKeys': value['pixKeys'],
        'birthDate': value['birthDate'],
        'origin': value['origin'],
        'address': (0, CreateContactRequestBodyDtoAddress_1.CreateContactRequestBodyDtoAddressToJSON)(value['address']),
        'searchScore': value['searchScore'],
        'channel': value['channel'],
    };
}
