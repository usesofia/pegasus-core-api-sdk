"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * Sofia Pegasus core-api
 * Api principal do sistema Pegasus para gerenciamento financeiro de pequenas e m√©dias empresas.
 *
 * The version of the OpenAPI document: 1.12.9
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.instanceOfFinancialRecordRadarItemTagEntity = instanceOfFinancialRecordRadarItemTagEntity;
exports.FinancialRecordRadarItemTagEntityFromJSON = FinancialRecordRadarItemTagEntityFromJSON;
exports.FinancialRecordRadarItemTagEntityFromJSONTyped = FinancialRecordRadarItemTagEntityFromJSONTyped;
exports.FinancialRecordRadarItemTagEntityToJSON = FinancialRecordRadarItemTagEntityToJSON;
exports.FinancialRecordRadarItemTagEntityToJSONTyped = FinancialRecordRadarItemTagEntityToJSONTyped;
/**
 * Check if a given object implements the FinancialRecordRadarItemTagEntity interface.
 */
function instanceOfFinancialRecordRadarItemTagEntity(value) {
    if (!('property' in value) || value['property'] === undefined)
        return false;
    if (!('currentValue' in value) || value['currentValue'] === undefined)
        return false;
    return true;
}
function FinancialRecordRadarItemTagEntityFromJSON(json) {
    return FinancialRecordRadarItemTagEntityFromJSONTyped(json, false);
}
function FinancialRecordRadarItemTagEntityFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'iconName': json['iconName'] == null ? undefined : json['iconName'],
        'property': json['property'],
        'currentValue': json['currentValue'],
        'oldValue': json['oldValue'] == null ? undefined : json['oldValue'],
    };
}
function FinancialRecordRadarItemTagEntityToJSON(json) {
    return FinancialRecordRadarItemTagEntityToJSONTyped(json, false);
}
function FinancialRecordRadarItemTagEntityToJSONTyped(value, ignoreDiscriminator) {
    if (ignoreDiscriminator === void 0) { ignoreDiscriminator = false; }
    if (value == null) {
        return value;
    }
    return {
        'iconName': value['iconName'],
        'property': value['property'],
        'currentValue': value['currentValue'],
        'oldValue': value['oldValue'],
    };
}
