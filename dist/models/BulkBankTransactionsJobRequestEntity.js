"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * Sofia Pegasus core-api
 * Api principal do sistema Pegasus para gerenciamento financeiro de pequenas e m√©dias empresas.
 *
 * The version of the OpenAPI document: 1.5.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.BulkBankTransactionsJobRequestEntityOperationEnum = void 0;
exports.instanceOfBulkBankTransactionsJobRequestEntity = instanceOfBulkBankTransactionsJobRequestEntity;
exports.BulkBankTransactionsJobRequestEntityFromJSON = BulkBankTransactionsJobRequestEntityFromJSON;
exports.BulkBankTransactionsJobRequestEntityFromJSONTyped = BulkBankTransactionsJobRequestEntityFromJSONTyped;
exports.BulkBankTransactionsJobRequestEntityToJSON = BulkBankTransactionsJobRequestEntityToJSON;
exports.BulkBankTransactionsJobRequestEntityToJSONTyped = BulkBankTransactionsJobRequestEntityToJSONTyped;
/**
 * @export
 */
exports.BulkBankTransactionsJobRequestEntityOperationEnum = {
    Archive: 'ARCHIVE',
    Unarchive: 'UNARCHIVE',
    Unreconcile: 'UNRECONCILE',
    RequestAiSuggestion: 'REQUEST_AI_SUGGESTION',
    CreateFromAiSuggestion: 'CREATE_FROM_AI_SUGGESTION',
    ReconcileFromAiSuggestion: 'RECONCILE_FROM_AI_SUGGESTION'
};
/**
 * Check if a given object implements the BulkBankTransactionsJobRequestEntity interface.
 */
function instanceOfBulkBankTransactionsJobRequestEntity(value) {
    if (!('id' in value) || value['id'] === undefined)
        return false;
    if (!('ownerOrganization' in value) || value['ownerOrganization'] === undefined)
        return false;
    if (!('requesterUserId' in value) || value['requesterUserId'] === undefined)
        return false;
    if (!('operation' in value) || value['operation'] === undefined)
        return false;
    if (!('bankTransactionIds' in value) || value['bankTransactionIds'] === undefined)
        return false;
    if (!('createdAt' in value) || value['createdAt'] === undefined)
        return false;
    if (!('updatedAt' in value) || value['updatedAt'] === undefined)
        return false;
    return true;
}
function BulkBankTransactionsJobRequestEntityFromJSON(json) {
    return BulkBankTransactionsJobRequestEntityFromJSONTyped(json, false);
}
function BulkBankTransactionsJobRequestEntityFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'id': json['id'],
        'ownerOrganization': json['ownerOrganization'],
        'requesterUserId': json['requesterUserId'],
        'operation': json['operation'],
        'bankTransactionIds': json['bankTransactionIds'],
        'createdAt': json['createdAt'],
        'updatedAt': json['updatedAt'],
    };
}
function BulkBankTransactionsJobRequestEntityToJSON(json) {
    return BulkBankTransactionsJobRequestEntityToJSONTyped(json, false);
}
function BulkBankTransactionsJobRequestEntityToJSONTyped(value, ignoreDiscriminator) {
    if (ignoreDiscriminator === void 0) { ignoreDiscriminator = false; }
    if (value == null) {
        return value;
    }
    return {
        'id': value['id'],
        'ownerOrganization': value['ownerOrganization'],
        'requesterUserId': value['requesterUserId'],
        'operation': value['operation'],
        'bankTransactionIds': value['bankTransactionIds'],
        'createdAt': value['createdAt'],
        'updatedAt': value['updatedAt'],
    };
}
