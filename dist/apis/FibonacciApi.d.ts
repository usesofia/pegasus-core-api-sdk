/**
 * Sofia Pegasus core-api
 * Api principal do sistema Pegasus para gerenciamento financeiro de pequenas e médias empresas.
 *
 * The version of the OpenAPI document: 1.9.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import * as runtime from '../runtime';
/**
 * FibonacciApi - interface
 *
 * @export
 * @interface FibonacciApiInterface
 */
export interface FibonacciApiInterface {
    /**
     *
     * @summary Gera a sequência de Fibonacci a partir de um número n recebido.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FibonacciApiInterface
     */
    generateFibonacciSequenceRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>>;
    /**
     * Gera a sequência de Fibonacci a partir de um número n recebido.
     */
    generateFibonacciSequence(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void>;
    /**
     *
     * @summary Inicia a sequência de Fibonacci gerando 20 números a serem processados.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FibonacciApiInterface
     */
    startFibonacciRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>>;
    /**
     * Inicia a sequência de Fibonacci gerando 20 números a serem processados.
     */
    startFibonacci(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void>;
    /**
     *
     * @summary Soma a sequência de Fibonacci gerada.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FibonacciApiInterface
     */
    sumFibonacciSequenceRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>>;
    /**
     * Soma a sequência de Fibonacci gerada.
     */
    sumFibonacciSequence(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void>;
}
/**
 *
 */
export declare class FibonacciApi extends runtime.BaseAPI implements FibonacciApiInterface {
    /**
     * Gera a sequência de Fibonacci a partir de um número n recebido.
     */
    generateFibonacciSequenceRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>>;
    /**
     * Gera a sequência de Fibonacci a partir de um número n recebido.
     */
    generateFibonacciSequence(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void>;
    /**
     * Inicia a sequência de Fibonacci gerando 20 números a serem processados.
     */
    startFibonacciRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>>;
    /**
     * Inicia a sequência de Fibonacci gerando 20 números a serem processados.
     */
    startFibonacci(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void>;
    /**
     * Soma a sequência de Fibonacci gerada.
     */
    sumFibonacciSequenceRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>>;
    /**
     * Soma a sequência de Fibonacci gerada.
     */
    sumFibonacciSequence(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void>;
}
