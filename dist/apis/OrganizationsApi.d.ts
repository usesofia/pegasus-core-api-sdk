/**
 * Sofia Pegasus core-api
 * Api principal do sistema Pegasus para gerenciamento financeiro de pequenas e médias empresas.
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import * as runtime from '../runtime';
import type { CreateOrganizationRequestBodyDto, OrganizationEntity, PartialUpdateOrganizationRequestBodyDto } from '../models/index';
export interface CreateOrganizationRequest {
    createOrganizationRequestBodyDto: CreateOrganizationRequestBodyDto;
    populate?: string;
}
export interface PartialUpdateOrganizationRequest {
    id: string;
    partialUpdateOrganizationRequestBodyDto: PartialUpdateOrganizationRequestBodyDto;
}
/**
 * OrganizationsApi - interface
 *
 * @export
 * @interface OrganizationsApiInterface
 */
export interface OrganizationsApiInterface {
    /**
     *
     * @summary Create a new organization.
     * @param {CreateOrganizationRequestBodyDto} createOrganizationRequestBodyDto
     * @param {string} [populate] Related fields to be populated, separated by commas.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof OrganizationsApiInterface
     */
    createOrganizationRaw(requestParameters: CreateOrganizationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<OrganizationEntity>>;
    /**
     * Create a new organization.
     */
    createOrganization(requestParameters: CreateOrganizationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<OrganizationEntity>;
    /**
     *
     * @summary Find my organization.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof OrganizationsApiInterface
     */
    findMyOrganizationRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<OrganizationEntity>>;
    /**
     * Find my organization.
     */
    findMyOrganization(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<OrganizationEntity>;
    /**
     *
     * @summary Atualiza parcialmente uma organização.
     * @param {string} id Identificador da organização.
     * @param {PartialUpdateOrganizationRequestBodyDto} partialUpdateOrganizationRequestBodyDto
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof OrganizationsApiInterface
     */
    partialUpdateOrganizationRaw(requestParameters: PartialUpdateOrganizationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<OrganizationEntity>>;
    /**
     * Atualiza parcialmente uma organização.
     */
    partialUpdateOrganization(requestParameters: PartialUpdateOrganizationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<OrganizationEntity>;
}
/**
 *
 */
export declare class OrganizationsApi extends runtime.BaseAPI implements OrganizationsApiInterface {
    /**
     * Create a new organization.
     */
    createOrganizationRaw(requestParameters: CreateOrganizationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<OrganizationEntity>>;
    /**
     * Create a new organization.
     */
    createOrganization(requestParameters: CreateOrganizationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<OrganizationEntity>;
    /**
     * Find my organization.
     */
    findMyOrganizationRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<OrganizationEntity>>;
    /**
     * Find my organization.
     */
    findMyOrganization(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<OrganizationEntity>;
    /**
     * Atualiza parcialmente uma organização.
     */
    partialUpdateOrganizationRaw(requestParameters: PartialUpdateOrganizationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<OrganizationEntity>>;
    /**
     * Atualiza parcialmente uma organização.
     */
    partialUpdateOrganization(requestParameters: PartialUpdateOrganizationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<OrganizationEntity>;
}
