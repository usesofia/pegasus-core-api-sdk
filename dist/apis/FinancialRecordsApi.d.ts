/**
 * Sofia Pegasus core-api
 * Api principal do sistema Pegasus para gerenciamento financeiro de pequenas e médias empresas.
 *
 * The version of the OpenAPI document: 1.6.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import * as runtime from '../runtime';
import type { CreateFinancialRecordRequestBodyDto, CreateManyFinancialRecordsRequestBodyDto, FinancialRecordDto, FinancialRecordsPageDto, PartialUpdateFinancialRecordRequestBodyDto, PartialUpdateManyFinancialRecordsRequestBodyDto, RemoveFinancialRecordRequestBodyDto } from '../models/index';
export interface CreateFinancialRecordRequest {
    createFinancialRecordRequestBodyDto: CreateFinancialRecordRequestBodyDto;
    populate?: string;
}
export interface CreateManyFinancialRecordsRequest {
    createManyFinancialRecordsRequestBodyDto: CreateManyFinancialRecordsRequestBodyDto;
}
export interface FindAllFinancialRecordsRequest {
    sortOrder?: string;
    sortBy?: FindAllFinancialRecordsSortByEnum;
    account?: string;
    reconciled?: boolean;
    completed?: boolean;
    tags?: string;
    createdAtTo?: string;
    createdAtFrom?: string;
    cashDateTo?: string;
    cashDateFrom?: string;
    competenceDateTo?: string;
    competenceDateFrom?: string;
    subcategory?: string;
    contact?: string;
    dueDateTo?: string;
    dueDateFrom?: string;
    amountTo?: string;
    amountFrom?: string;
    direction?: string;
    ids?: string;
    populate?: string;
    semanticSearchTermInBase64?: string;
    textSearchTerm?: string;
    pageSize?: number;
    pageIndex?: number;
}
export interface FindByIdFinancialRecordRequest {
    id: string;
    populate?: string;
}
export interface PartialUpdateFinancialRecordRequest {
    id: string;
    partialUpdateFinancialRecordRequestBodyDto: PartialUpdateFinancialRecordRequestBodyDto;
    populate?: string;
}
export interface PartialUpdateManyFinancialRecordsRequest {
    partialUpdateManyFinancialRecordsRequestBodyDto: PartialUpdateManyFinancialRecordsRequestBodyDto;
}
export interface RemoveFinancialRecordRequest {
    id: string;
    removeFinancialRecordRequestBodyDto: RemoveFinancialRecordRequestBodyDto;
}
export interface SystemCreateManyFinancialRecordsRequest {
    organizationId: string;
    createManyFinancialRecordsRequestBodyDto: CreateManyFinancialRecordsRequestBodyDto;
}
export interface SystemFindAllFinancialRecordsRequest {
    ownerOrganizationId: string;
    readPreference?: SystemFindAllFinancialRecordsReadPreferenceEnum;
    sortOrder?: string;
    sortBy?: SystemFindAllFinancialRecordsSortByEnum;
    account?: string;
    reconciled?: boolean;
    completed?: boolean;
    tags?: string;
    createdAtTo?: string;
    createdAtFrom?: string;
    cashDateTo?: string;
    cashDateFrom?: string;
    competenceDateTo?: string;
    competenceDateFrom?: string;
    subcategory?: string;
    contact?: string;
    dueDateTo?: string;
    dueDateFrom?: string;
    amountTo?: string;
    amountFrom?: string;
    direction?: string;
    ids?: string;
    populate?: string;
    semanticSearchTermInBase64?: string;
    textSearchTerm?: string;
    pageSize?: number;
    pageIndex?: number;
}
export interface SystemFindByIdFinancialRecordRequest {
    organizationId: string;
    financialRecordId: string;
    populate?: string;
}
/**
 * FinancialRecordsApi - interface
 *
 * @export
 * @interface FinancialRecordsApiInterface
 */
export interface FinancialRecordsApiInterface {
    /**
     *
     * @summary Cria um novo lançamento financeiro.
     * @param {CreateFinancialRecordRequestBodyDto} createFinancialRecordRequestBodyDto
     * @param {string} [populate] Campos relacionados a serem populados separados por vírgula.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FinancialRecordsApiInterface
     */
    createFinancialRecordRaw(requestParameters: CreateFinancialRecordRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<FinancialRecordDto>>;
    /**
     * Cria um novo lançamento financeiro.
     */
    createFinancialRecord(requestParameters: CreateFinancialRecordRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<FinancialRecordDto>;
    /**
     *
     * @summary Cria múltiplos lançamentos financeiros.
     * @param {CreateManyFinancialRecordsRequestBodyDto} createManyFinancialRecordsRequestBodyDto
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FinancialRecordsApiInterface
     */
    createManyFinancialRecordsRaw(requestParameters: CreateManyFinancialRecordsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<FinancialRecordDto>>>;
    /**
     * Cria múltiplos lançamentos financeiros.
     */
    createManyFinancialRecords(requestParameters: CreateManyFinancialRecordsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<FinancialRecordDto>>;
    /**
     *
     * @summary Busca todos os lançamentos financeiros.
     * @param {string} [sortOrder] Ordem de ordenação dos lançamentos financeiros.
     * @param {'direction' | 'dueDate' | 'contact' | 'description' | 'subcategory' | 'amount' | 'competenceDate' | 'cashDate' | 'createdAt'} [sortBy] Campo para ordenação dos lançamentos financeiros.
     * @param {string} [account] Conta do lançamento financeiro.
     * @param {boolean} [reconciled] Indica se o lançamento financeiro foi reconciliado.
     * @param {boolean} [completed] Indica se o lançamento financeiro foi completado.
     * @param {string} [tags] Tags do lançamento financeiro.
     * @param {string} [createdAtTo] Data de criação final.
     * @param {string} [createdAtFrom] Data de criação inicial.
     * @param {string} [cashDateTo] Data de pagamento final.
     * @param {string} [cashDateFrom] Data de pagamento inicial.
     * @param {string} [competenceDateTo] Data de competência final.
     * @param {string} [competenceDateFrom] Data de competência inicial.
     * @param {string} [subcategory] Subcategoria do lançamento financeiro.
     * @param {string} [contact] Contato do lançamento financeiro.
     * @param {string} [dueDateTo] Data de vencimento final.
     * @param {string} [dueDateFrom] Data de vencimento inicial.
     * @param {string} [amountTo] Valor do lançamento financeiro máximo.
     * @param {string} [amountFrom] Valor do lançamento financeiro mínimo.
     * @param {string} [direction] Direção do lançamento financeiro.
     * @param {string} [ids] Lista de IDs de lançamentos financeiros para filtrar separados por vírgula.
     * @param {string} [populate] Campos relacionados a serem populados separados por vírgula.
     * @param {string} [semanticSearchTermInBase64] Termo para busca semântica.
     * @param {string} [textSearchTerm] Termo para busca textual.
     * @param {number} [pageSize] Quantidade de itens por página.
     * @param {number} [pageIndex] Índice da página.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FinancialRecordsApiInterface
     */
    findAllFinancialRecordsRaw(requestParameters: FindAllFinancialRecordsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<FinancialRecordsPageDto>>;
    /**
     * Busca todos os lançamentos financeiros.
     */
    findAllFinancialRecords(requestParameters: FindAllFinancialRecordsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<FinancialRecordsPageDto>;
    /**
     *
     * @summary Busca um lançamento financeiro pelo identificador.
     * @param {string} id Identificador do lançamento financeiro.
     * @param {string} [populate] Campos relacionados a serem populados separados por vírgula.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FinancialRecordsApiInterface
     */
    findByIdFinancialRecordRaw(requestParameters: FindByIdFinancialRecordRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<FinancialRecordDto>>;
    /**
     * Busca um lançamento financeiro pelo identificador.
     */
    findByIdFinancialRecord(requestParameters: FindByIdFinancialRecordRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<FinancialRecordDto>;
    /**
     *
     * @summary Atualiza parcialmente um lançamento financeiro.
     * @param {string} id Identificador do lançamento financeiro.
     * @param {PartialUpdateFinancialRecordRequestBodyDto} partialUpdateFinancialRecordRequestBodyDto
     * @param {string} [populate] Campos relacionados a serem populados separados por vírgula.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FinancialRecordsApiInterface
     */
    partialUpdateFinancialRecordRaw(requestParameters: PartialUpdateFinancialRecordRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<FinancialRecordDto>>;
    /**
     * Atualiza parcialmente um lançamento financeiro.
     */
    partialUpdateFinancialRecord(requestParameters: PartialUpdateFinancialRecordRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<FinancialRecordDto>;
    /**
     *
     * @summary Atualiza parcialmente múltiplos lançamentos financeiros.
     * @param {PartialUpdateManyFinancialRecordsRequestBodyDto} partialUpdateManyFinancialRecordsRequestBodyDto
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FinancialRecordsApiInterface
     */
    partialUpdateManyFinancialRecordsRaw(requestParameters: PartialUpdateManyFinancialRecordsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<FinancialRecordDto>>>;
    /**
     * Atualiza parcialmente múltiplos lançamentos financeiros.
     */
    partialUpdateManyFinancialRecords(requestParameters: PartialUpdateManyFinancialRecordsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<FinancialRecordDto>>;
    /**
     *
     * @summary Remove um lançamento financeiro.
     * @param {string} id Identificador do lançamento financeiro.
     * @param {RemoveFinancialRecordRequestBodyDto} removeFinancialRecordRequestBodyDto
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FinancialRecordsApiInterface
     */
    removeFinancialRecordRaw(requestParameters: RemoveFinancialRecordRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>>;
    /**
     * Remove um lançamento financeiro.
     */
    removeFinancialRecord(requestParameters: RemoveFinancialRecordRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void>;
    /**
     *
     * @summary Cria múltiplos lançamentos financeiros.
     * @param {string} organizationId Identificador da organização.
     * @param {CreateManyFinancialRecordsRequestBodyDto} createManyFinancialRecordsRequestBodyDto
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FinancialRecordsApiInterface
     */
    systemCreateManyFinancialRecordsRaw(requestParameters: SystemCreateManyFinancialRecordsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<FinancialRecordDto>>>;
    /**
     * Cria múltiplos lançamentos financeiros.
     */
    systemCreateManyFinancialRecords(requestParameters: SystemCreateManyFinancialRecordsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<FinancialRecordDto>>;
    /**
     *
     * @summary Busca todos os lançamentos financeiros pelo sistema.
     * @param {string} ownerOrganizationId Identificador da organização proprietária dos lançamentos financeiros.
     * @param {'primary' | 'primaryPreferred' | 'secondary' | 'secondaryPreferred' | 'nearest'} [readPreference] Preferência de leitura dos lançamentos financeiros.
     * @param {string} [sortOrder] Ordem de ordenação dos lançamentos financeiros.
     * @param {'direction' | 'dueDate' | 'contact' | 'description' | 'subcategory' | 'amount' | 'competenceDate' | 'cashDate' | 'createdAt'} [sortBy] Campo para ordenação dos lançamentos financeiros.
     * @param {string} [account] Conta do lançamento financeiro.
     * @param {boolean} [reconciled] Indica se o lançamento financeiro foi reconciliado.
     * @param {boolean} [completed] Indica se o lançamento financeiro foi completado.
     * @param {string} [tags] Tags do lançamento financeiro.
     * @param {string} [createdAtTo] Data de criação final.
     * @param {string} [createdAtFrom] Data de criação inicial.
     * @param {string} [cashDateTo] Data de pagamento final.
     * @param {string} [cashDateFrom] Data de pagamento inicial.
     * @param {string} [competenceDateTo] Data de competência final.
     * @param {string} [competenceDateFrom] Data de competência inicial.
     * @param {string} [subcategory] Subcategoria do lançamento financeiro.
     * @param {string} [contact] Contato do lançamento financeiro.
     * @param {string} [dueDateTo] Data de vencimento final.
     * @param {string} [dueDateFrom] Data de vencimento inicial.
     * @param {string} [amountTo] Valor do lançamento financeiro máximo.
     * @param {string} [amountFrom] Valor do lançamento financeiro mínimo.
     * @param {string} [direction] Direção do lançamento financeiro.
     * @param {string} [ids] Lista de IDs de lançamentos financeiros para filtrar separados por vírgula.
     * @param {string} [populate] Campos relacionados a serem populados separados por vírgula.
     * @param {string} [semanticSearchTermInBase64] Termo para busca semântica.
     * @param {string} [textSearchTerm] Termo para busca textual.
     * @param {number} [pageSize] Quantidade de itens por página.
     * @param {number} [pageIndex] Índice da página.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FinancialRecordsApiInterface
     */
    systemFindAllFinancialRecordsRaw(requestParameters: SystemFindAllFinancialRecordsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<FinancialRecordsPageDto>>;
    /**
     * Busca todos os lançamentos financeiros pelo sistema.
     */
    systemFindAllFinancialRecords(requestParameters: SystemFindAllFinancialRecordsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<FinancialRecordsPageDto>;
    /**
     *
     * @summary Busca um lançamento financeiro pelo identificador.
     * @param {string} organizationId Identificador da organização.
     * @param {string} financialRecordId Identificador do lançamento financeiro.
     * @param {string} [populate] Campos relacionados a serem populados separados por vírgula.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FinancialRecordsApiInterface
     */
    systemFindByIdFinancialRecordRaw(requestParameters: SystemFindByIdFinancialRecordRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<FinancialRecordDto>>;
    /**
     * Busca um lançamento financeiro pelo identificador.
     */
    systemFindByIdFinancialRecord(requestParameters: SystemFindByIdFinancialRecordRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<FinancialRecordDto>;
}
/**
 *
 */
export declare class FinancialRecordsApi extends runtime.BaseAPI implements FinancialRecordsApiInterface {
    /**
     * Cria um novo lançamento financeiro.
     */
    createFinancialRecordRaw(requestParameters: CreateFinancialRecordRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<FinancialRecordDto>>;
    /**
     * Cria um novo lançamento financeiro.
     */
    createFinancialRecord(requestParameters: CreateFinancialRecordRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<FinancialRecordDto>;
    /**
     * Cria múltiplos lançamentos financeiros.
     */
    createManyFinancialRecordsRaw(requestParameters: CreateManyFinancialRecordsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<FinancialRecordDto>>>;
    /**
     * Cria múltiplos lançamentos financeiros.
     */
    createManyFinancialRecords(requestParameters: CreateManyFinancialRecordsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<FinancialRecordDto>>;
    /**
     * Busca todos os lançamentos financeiros.
     */
    findAllFinancialRecordsRaw(requestParameters: FindAllFinancialRecordsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<FinancialRecordsPageDto>>;
    /**
     * Busca todos os lançamentos financeiros.
     */
    findAllFinancialRecords(requestParameters?: FindAllFinancialRecordsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<FinancialRecordsPageDto>;
    /**
     * Busca um lançamento financeiro pelo identificador.
     */
    findByIdFinancialRecordRaw(requestParameters: FindByIdFinancialRecordRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<FinancialRecordDto>>;
    /**
     * Busca um lançamento financeiro pelo identificador.
     */
    findByIdFinancialRecord(requestParameters: FindByIdFinancialRecordRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<FinancialRecordDto>;
    /**
     * Atualiza parcialmente um lançamento financeiro.
     */
    partialUpdateFinancialRecordRaw(requestParameters: PartialUpdateFinancialRecordRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<FinancialRecordDto>>;
    /**
     * Atualiza parcialmente um lançamento financeiro.
     */
    partialUpdateFinancialRecord(requestParameters: PartialUpdateFinancialRecordRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<FinancialRecordDto>;
    /**
     * Atualiza parcialmente múltiplos lançamentos financeiros.
     */
    partialUpdateManyFinancialRecordsRaw(requestParameters: PartialUpdateManyFinancialRecordsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<FinancialRecordDto>>>;
    /**
     * Atualiza parcialmente múltiplos lançamentos financeiros.
     */
    partialUpdateManyFinancialRecords(requestParameters: PartialUpdateManyFinancialRecordsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<FinancialRecordDto>>;
    /**
     * Remove um lançamento financeiro.
     */
    removeFinancialRecordRaw(requestParameters: RemoveFinancialRecordRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>>;
    /**
     * Remove um lançamento financeiro.
     */
    removeFinancialRecord(requestParameters: RemoveFinancialRecordRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void>;
    /**
     * Cria múltiplos lançamentos financeiros.
     */
    systemCreateManyFinancialRecordsRaw(requestParameters: SystemCreateManyFinancialRecordsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<FinancialRecordDto>>>;
    /**
     * Cria múltiplos lançamentos financeiros.
     */
    systemCreateManyFinancialRecords(requestParameters: SystemCreateManyFinancialRecordsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<FinancialRecordDto>>;
    /**
     * Busca todos os lançamentos financeiros pelo sistema.
     */
    systemFindAllFinancialRecordsRaw(requestParameters: SystemFindAllFinancialRecordsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<FinancialRecordsPageDto>>;
    /**
     * Busca todos os lançamentos financeiros pelo sistema.
     */
    systemFindAllFinancialRecords(requestParameters: SystemFindAllFinancialRecordsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<FinancialRecordsPageDto>;
    /**
     * Busca um lançamento financeiro pelo identificador.
     */
    systemFindByIdFinancialRecordRaw(requestParameters: SystemFindByIdFinancialRecordRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<FinancialRecordDto>>;
    /**
     * Busca um lançamento financeiro pelo identificador.
     */
    systemFindByIdFinancialRecord(requestParameters: SystemFindByIdFinancialRecordRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<FinancialRecordDto>;
}
/**
 * @export
 */
export declare const FindAllFinancialRecordsSortByEnum: {
    readonly Direction: "direction";
    readonly DueDate: "dueDate";
    readonly Contact: "contact";
    readonly Description: "description";
    readonly Subcategory: "subcategory";
    readonly Amount: "amount";
    readonly CompetenceDate: "competenceDate";
    readonly CashDate: "cashDate";
    readonly CreatedAt: "createdAt";
};
export type FindAllFinancialRecordsSortByEnum = typeof FindAllFinancialRecordsSortByEnum[keyof typeof FindAllFinancialRecordsSortByEnum];
/**
 * @export
 */
export declare const SystemFindAllFinancialRecordsReadPreferenceEnum: {
    readonly Primary: "primary";
    readonly PrimaryPreferred: "primaryPreferred";
    readonly Secondary: "secondary";
    readonly SecondaryPreferred: "secondaryPreferred";
    readonly Nearest: "nearest";
};
export type SystemFindAllFinancialRecordsReadPreferenceEnum = typeof SystemFindAllFinancialRecordsReadPreferenceEnum[keyof typeof SystemFindAllFinancialRecordsReadPreferenceEnum];
/**
 * @export
 */
export declare const SystemFindAllFinancialRecordsSortByEnum: {
    readonly Direction: "direction";
    readonly DueDate: "dueDate";
    readonly Contact: "contact";
    readonly Description: "description";
    readonly Subcategory: "subcategory";
    readonly Amount: "amount";
    readonly CompetenceDate: "competenceDate";
    readonly CashDate: "cashDate";
    readonly CreatedAt: "createdAt";
};
export type SystemFindAllFinancialRecordsSortByEnum = typeof SystemFindAllFinancialRecordsSortByEnum[keyof typeof SystemFindAllFinancialRecordsSortByEnum];
