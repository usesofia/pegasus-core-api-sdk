/**
 * Sofia Pegasus core-api
 * Api principal do sistema Pegasus para gerenciamento financeiro de pequenas e médias empresas.
 *
 * The version of the OpenAPI document: 1.0.8
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import * as runtime from '../runtime';
import type { CreateManyRecurringFinancialRecordsRequestBodyDto, CreateRecurringFinancialRecordRequestBodyDto, PartialUpdateRecurringFinancialRecordRequestBodyDto, RecurringFinancialRecordEntity, RecurringFinancialRecordsPageEntity, RemoveRecurringFinancialRecordRequestBodyDto, ScheduleRecurringFinancialRecordsSeedingRequestBodyDto, SeedRecurringFinancialRecordsRequestBodyDto } from '../models/index';
export interface CreateManyRecurringFinancialRecordsRequest {
    createManyRecurringFinancialRecordsRequestBodyDto: CreateManyRecurringFinancialRecordsRequestBodyDto;
}
export interface CreateRecurringFinancialRecordRequest {
    createRecurringFinancialRecordRequestBodyDto: CreateRecurringFinancialRecordRequestBodyDto;
    populate?: string;
}
export interface FindAllRecurringFinancialRecordsRequest {
    populate?: string;
    textSearchTerm?: string;
    pageSize?: number;
    pageIndex?: number;
}
export interface FindByIdRecurringFinancialRecordRequest {
    id: string;
    populate?: string;
}
export interface PartialUpdateRecurringFinancialRecordRequest {
    id: string;
    partialUpdateRecurringFinancialRecordRequestBodyDto: PartialUpdateRecurringFinancialRecordRequestBodyDto;
}
export interface RemoveRecurringFinancialRecordRequest {
    id: string;
    removeRecurringFinancialRecordRequestBodyDto: RemoveRecurringFinancialRecordRequestBodyDto;
}
export interface ScheduleRecurringFinancialRecordsSeedingRequest {
    scheduleRecurringFinancialRecordsSeedingRequestBodyDto: ScheduleRecurringFinancialRecordsSeedingRequestBodyDto;
}
export interface StartRecurringFinancialRecordsSeederRequest {
    seedRecurringFinancialRecordsRequestBodyDto: SeedRecurringFinancialRecordsRequestBodyDto;
}
/**
 * RecurringFinancialRecordsApi - interface
 *
 * @export
 * @interface RecurringFinancialRecordsApiInterface
 */
export interface RecurringFinancialRecordsApiInterface {
    /**
     *
     * @summary Cria múltiplos lançamentos financeiros recorrentes.
     * @param {CreateManyRecurringFinancialRecordsRequestBodyDto} createManyRecurringFinancialRecordsRequestBodyDto
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof RecurringFinancialRecordsApiInterface
     */
    createManyRecurringFinancialRecordsRaw(requestParameters: CreateManyRecurringFinancialRecordsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<RecurringFinancialRecordEntity>>>;
    /**
     * Cria múltiplos lançamentos financeiros recorrentes.
     */
    createManyRecurringFinancialRecords(requestParameters: CreateManyRecurringFinancialRecordsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<RecurringFinancialRecordEntity>>;
    /**
     *
     * @summary Cria um novo lançamento financeiro recorrente.
     * @param {CreateRecurringFinancialRecordRequestBodyDto} createRecurringFinancialRecordRequestBodyDto
     * @param {string} [populate] Campos relacionados a serem populados separados por vírgula.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof RecurringFinancialRecordsApiInterface
     */
    createRecurringFinancialRecordRaw(requestParameters: CreateRecurringFinancialRecordRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<RecurringFinancialRecordEntity>>;
    /**
     * Cria um novo lançamento financeiro recorrente.
     */
    createRecurringFinancialRecord(requestParameters: CreateRecurringFinancialRecordRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<RecurringFinancialRecordEntity>;
    /**
     *
     * @summary Busca todos os lançamentos financeiros recorrentes.
     * @param {string} [populate] Campos relacionados a serem populados separados por vírgula.
     * @param {string} [textSearchTerm] Termo para busca por descrição do lançamento.
     * @param {number} [pageSize] Quantidade de itens por página.
     * @param {number} [pageIndex] Índice da página.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof RecurringFinancialRecordsApiInterface
     */
    findAllRecurringFinancialRecordsRaw(requestParameters: FindAllRecurringFinancialRecordsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<RecurringFinancialRecordsPageEntity>>;
    /**
     * Busca todos os lançamentos financeiros recorrentes.
     */
    findAllRecurringFinancialRecords(requestParameters: FindAllRecurringFinancialRecordsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<RecurringFinancialRecordsPageEntity>;
    /**
     *
     * @summary Busca um lançamento financeiro recorrente pelo identificador.
     * @param {string} id Identificador do lançamento financeiro recorrente.
     * @param {string} [populate] Campos relacionados a serem populados separados por vírgula.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof RecurringFinancialRecordsApiInterface
     */
    findByIdRecurringFinancialRecordRaw(requestParameters: FindByIdRecurringFinancialRecordRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<RecurringFinancialRecordEntity>>;
    /**
     * Busca um lançamento financeiro recorrente pelo identificador.
     */
    findByIdRecurringFinancialRecord(requestParameters: FindByIdRecurringFinancialRecordRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<RecurringFinancialRecordEntity>;
    /**
     *
     * @summary Atualiza parcialmente um lançamento financeiro recorrente.
     * @param {string} id Identificador do lançamento financeiro recorrente.
     * @param {PartialUpdateRecurringFinancialRecordRequestBodyDto} partialUpdateRecurringFinancialRecordRequestBodyDto
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof RecurringFinancialRecordsApiInterface
     */
    partialUpdateRecurringFinancialRecordRaw(requestParameters: PartialUpdateRecurringFinancialRecordRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<RecurringFinancialRecordEntity>>;
    /**
     * Atualiza parcialmente um lançamento financeiro recorrente.
     */
    partialUpdateRecurringFinancialRecord(requestParameters: PartialUpdateRecurringFinancialRecordRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<RecurringFinancialRecordEntity>;
    /**
     *
     * @summary Remove um lançamento financeiro recorrente.
     * @param {string} id Identificador do lançamento financeiro recorrente.
     * @param {RemoveRecurringFinancialRecordRequestBodyDto} removeRecurringFinancialRecordRequestBodyDto
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof RecurringFinancialRecordsApiInterface
     */
    removeRecurringFinancialRecordRaw(requestParameters: RemoveRecurringFinancialRecordRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<RecurringFinancialRecordEntity>>;
    /**
     * Remove um lançamento financeiro recorrente.
     */
    removeRecurringFinancialRecord(requestParameters: RemoveRecurringFinancialRecordRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<RecurringFinancialRecordEntity>;
    /**
     *
     * @summary Agenda o seeder de lançamentos financeiros recorrentes.
     * @param {ScheduleRecurringFinancialRecordsSeedingRequestBodyDto} scheduleRecurringFinancialRecordsSeedingRequestBodyDto
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof RecurringFinancialRecordsApiInterface
     */
    scheduleRecurringFinancialRecordsSeedingRaw(requestParameters: ScheduleRecurringFinancialRecordsSeedingRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>>;
    /**
     * Agenda o seeder de lançamentos financeiros recorrentes.
     */
    scheduleRecurringFinancialRecordsSeeding(requestParameters: ScheduleRecurringFinancialRecordsSeedingRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void>;
    /**
     *
     * @summary Inicia o seeder de lançamentos financeiros recorrentes.
     * @param {SeedRecurringFinancialRecordsRequestBodyDto} seedRecurringFinancialRecordsRequestBodyDto
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof RecurringFinancialRecordsApiInterface
     */
    startRecurringFinancialRecordsSeederRaw(requestParameters: StartRecurringFinancialRecordsSeederRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>>;
    /**
     * Inicia o seeder de lançamentos financeiros recorrentes.
     */
    startRecurringFinancialRecordsSeeder(requestParameters: StartRecurringFinancialRecordsSeederRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void>;
}
/**
 *
 */
export declare class RecurringFinancialRecordsApi extends runtime.BaseAPI implements RecurringFinancialRecordsApiInterface {
    /**
     * Cria múltiplos lançamentos financeiros recorrentes.
     */
    createManyRecurringFinancialRecordsRaw(requestParameters: CreateManyRecurringFinancialRecordsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<RecurringFinancialRecordEntity>>>;
    /**
     * Cria múltiplos lançamentos financeiros recorrentes.
     */
    createManyRecurringFinancialRecords(requestParameters: CreateManyRecurringFinancialRecordsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<RecurringFinancialRecordEntity>>;
    /**
     * Cria um novo lançamento financeiro recorrente.
     */
    createRecurringFinancialRecordRaw(requestParameters: CreateRecurringFinancialRecordRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<RecurringFinancialRecordEntity>>;
    /**
     * Cria um novo lançamento financeiro recorrente.
     */
    createRecurringFinancialRecord(requestParameters: CreateRecurringFinancialRecordRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<RecurringFinancialRecordEntity>;
    /**
     * Busca todos os lançamentos financeiros recorrentes.
     */
    findAllRecurringFinancialRecordsRaw(requestParameters: FindAllRecurringFinancialRecordsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<RecurringFinancialRecordsPageEntity>>;
    /**
     * Busca todos os lançamentos financeiros recorrentes.
     */
    findAllRecurringFinancialRecords(requestParameters?: FindAllRecurringFinancialRecordsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<RecurringFinancialRecordsPageEntity>;
    /**
     * Busca um lançamento financeiro recorrente pelo identificador.
     */
    findByIdRecurringFinancialRecordRaw(requestParameters: FindByIdRecurringFinancialRecordRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<RecurringFinancialRecordEntity>>;
    /**
     * Busca um lançamento financeiro recorrente pelo identificador.
     */
    findByIdRecurringFinancialRecord(requestParameters: FindByIdRecurringFinancialRecordRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<RecurringFinancialRecordEntity>;
    /**
     * Atualiza parcialmente um lançamento financeiro recorrente.
     */
    partialUpdateRecurringFinancialRecordRaw(requestParameters: PartialUpdateRecurringFinancialRecordRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<RecurringFinancialRecordEntity>>;
    /**
     * Atualiza parcialmente um lançamento financeiro recorrente.
     */
    partialUpdateRecurringFinancialRecord(requestParameters: PartialUpdateRecurringFinancialRecordRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<RecurringFinancialRecordEntity>;
    /**
     * Remove um lançamento financeiro recorrente.
     */
    removeRecurringFinancialRecordRaw(requestParameters: RemoveRecurringFinancialRecordRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<RecurringFinancialRecordEntity>>;
    /**
     * Remove um lançamento financeiro recorrente.
     */
    removeRecurringFinancialRecord(requestParameters: RemoveRecurringFinancialRecordRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<RecurringFinancialRecordEntity>;
    /**
     * Agenda o seeder de lançamentos financeiros recorrentes.
     */
    scheduleRecurringFinancialRecordsSeedingRaw(requestParameters: ScheduleRecurringFinancialRecordsSeedingRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>>;
    /**
     * Agenda o seeder de lançamentos financeiros recorrentes.
     */
    scheduleRecurringFinancialRecordsSeeding(requestParameters: ScheduleRecurringFinancialRecordsSeedingRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void>;
    /**
     * Inicia o seeder de lançamentos financeiros recorrentes.
     */
    startRecurringFinancialRecordsSeederRaw(requestParameters: StartRecurringFinancialRecordsSeederRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>>;
    /**
     * Inicia o seeder de lançamentos financeiros recorrentes.
     */
    startRecurringFinancialRecordsSeeder(requestParameters: StartRecurringFinancialRecordsSeederRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void>;
}
