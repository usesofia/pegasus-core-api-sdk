/**
 * Sofia Pegasus core-api
 * Api principal do sistema Pegasus para gerenciamento financeiro de pequenas e médias empresas.
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import * as runtime from '../runtime';
import type { ContactEntity, ContactOriginItemEntity, ContactTypeItemEntity, ContactsPageEntity, CreateContactRequestBodyDto, PartialUpdateContactRequestBodyDto, RemoveContactRequestBodyDto } from '../models/index';
export interface CreateContactRequest {
    createContactRequestBodyDto: CreateContactRequestBodyDto;
    populate?: string;
}
export interface FindAllContactsRequest {
    sortOrder?: string;
    sortBy?: string;
    populate?: string;
    states?: string;
    country?: string;
    birthdayTo?: string;
    birthdayFrom?: string;
    origins?: string;
    types?: string;
    searchTerm?: string;
    pageSize?: number;
    pageIndex?: number;
}
export interface FindByIdContactRequest {
    id: string;
    populate?: string;
}
export interface PartialUpdateContactRequest {
    id: string;
    partialUpdateContactRequestBodyDto: PartialUpdateContactRequestBodyDto;
    populate?: string;
}
export interface RemoveContactRequest {
    id: string;
    removeContactRequestBodyDto: RemoveContactRequestBodyDto;
}
/**
 * ContactsApi - interface
 *
 * @export
 * @interface ContactsApiInterface
 */
export interface ContactsApiInterface {
    /**
     *
     * @summary Cria um novo contato.
     * @param {CreateContactRequestBodyDto} createContactRequestBodyDto
     * @param {string} [populate] Campos relacionados a serem populados separados por vírgula.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ContactsApiInterface
     */
    createContactRaw(requestParameters: CreateContactRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ContactEntity>>;
    /**
     * Cria um novo contato.
     */
    createContact(requestParameters: CreateContactRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ContactEntity>;
    /**
     *
     * @summary Busca todas as origens de contato.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ContactsApiInterface
     */
    findAllContactOriginsRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<ContactOriginItemEntity>>>;
    /**
     * Busca todas as origens de contato.
     */
    findAllContactOrigins(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<ContactOriginItemEntity>>;
    /**
     *
     * @summary Busca todos os tipos de contato.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ContactsApiInterface
     */
    findAllContactTypesRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<ContactTypeItemEntity>>>;
    /**
     * Busca todos os tipos de contato.
     */
    findAllContactTypes(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<ContactTypeItemEntity>>;
    /**
     *
     * @summary Busca todos os contatos.
     * @param {string} [sortOrder] Ordem de ordenação dos contatos.
     * @param {string} [sortBy] Campo para ordenação dos contatos.
     * @param {string} [populate] Campos relacionados a serem populados separados por vírgula.
     * @param {string} [states] Estados a serem buscados.
     * @param {string} [country] País a serem buscados.
     * @param {string} [birthdayTo] Data de nascimento final a serem buscadas.
     * @param {string} [birthdayFrom] Data de nascimento inicial a serem buscadas.
     * @param {string} [origins] Origens de contato a serem buscadas.
     * @param {string} [types] Tipos de contato a serem buscados.
     * @param {string} [searchTerm] Termo para busca por nome do contato.
     * @param {number} [pageSize] Quantidade de itens por página.
     * @param {number} [pageIndex] Índice da página.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ContactsApiInterface
     */
    findAllContactsRaw(requestParameters: FindAllContactsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ContactsPageEntity>>;
    /**
     * Busca todos os contatos.
     */
    findAllContacts(requestParameters: FindAllContactsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ContactsPageEntity>;
    /**
     *
     * @summary Busca um contato pelo identificador.
     * @param {string} id Identificador do contato.
     * @param {string} [populate] Campos relacionados a serem populados separados por vírgula.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ContactsApiInterface
     */
    findByIdContactRaw(requestParameters: FindByIdContactRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ContactEntity>>;
    /**
     * Busca um contato pelo identificador.
     */
    findByIdContact(requestParameters: FindByIdContactRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ContactEntity>;
    /**
     *
     * @summary Atualiza parcialmente um contato.
     * @param {string} id Identificador do contato.
     * @param {PartialUpdateContactRequestBodyDto} partialUpdateContactRequestBodyDto
     * @param {string} [populate] Campos relacionados a serem populados separados por vírgula.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ContactsApiInterface
     */
    partialUpdateContactRaw(requestParameters: PartialUpdateContactRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ContactEntity>>;
    /**
     * Atualiza parcialmente um contato.
     */
    partialUpdateContact(requestParameters: PartialUpdateContactRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ContactEntity>;
    /**
     *
     * @summary Remove um contato.
     * @param {string} id Identificador do contato.
     * @param {RemoveContactRequestBodyDto} removeContactRequestBodyDto
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ContactsApiInterface
     */
    removeContactRaw(requestParameters: RemoveContactRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>>;
    /**
     * Remove um contato.
     */
    removeContact(requestParameters: RemoveContactRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void>;
}
/**
 *
 */
export declare class ContactsApi extends runtime.BaseAPI implements ContactsApiInterface {
    /**
     * Cria um novo contato.
     */
    createContactRaw(requestParameters: CreateContactRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ContactEntity>>;
    /**
     * Cria um novo contato.
     */
    createContact(requestParameters: CreateContactRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ContactEntity>;
    /**
     * Busca todas as origens de contato.
     */
    findAllContactOriginsRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<ContactOriginItemEntity>>>;
    /**
     * Busca todas as origens de contato.
     */
    findAllContactOrigins(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<ContactOriginItemEntity>>;
    /**
     * Busca todos os tipos de contato.
     */
    findAllContactTypesRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<ContactTypeItemEntity>>>;
    /**
     * Busca todos os tipos de contato.
     */
    findAllContactTypes(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<ContactTypeItemEntity>>;
    /**
     * Busca todos os contatos.
     */
    findAllContactsRaw(requestParameters: FindAllContactsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ContactsPageEntity>>;
    /**
     * Busca todos os contatos.
     */
    findAllContacts(requestParameters?: FindAllContactsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ContactsPageEntity>;
    /**
     * Busca um contato pelo identificador.
     */
    findByIdContactRaw(requestParameters: FindByIdContactRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ContactEntity>>;
    /**
     * Busca um contato pelo identificador.
     */
    findByIdContact(requestParameters: FindByIdContactRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ContactEntity>;
    /**
     * Atualiza parcialmente um contato.
     */
    partialUpdateContactRaw(requestParameters: PartialUpdateContactRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ContactEntity>>;
    /**
     * Atualiza parcialmente um contato.
     */
    partialUpdateContact(requestParameters: PartialUpdateContactRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ContactEntity>;
    /**
     * Remove um contato.
     */
    removeContactRaw(requestParameters: RemoveContactRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>>;
    /**
     * Remove um contato.
     */
    removeContact(requestParameters: RemoveContactRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void>;
}
