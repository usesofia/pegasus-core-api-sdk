/**
 * Sofia Pegasus core-api
 * Api principal do sistema Pegasus para gerenciamento financeiro de pequenas e médias empresas.
 *
 * The version of the OpenAPI document: 1.11.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import * as runtime from '../runtime';
import type { ExportRecurringFinancialRecordsDto } from '../models/index';
export interface ExportRecurringFinancialRecordsRequest {
    sortOrder?: ExportRecurringFinancialRecordsSortOrderEnum;
    sortBy?: ExportRecurringFinancialRecordsSortByEnum;
    frequency?: ExportRecurringFinancialRecordsFrequencyEnum;
    isActive?: boolean;
    automaticCompletion?: boolean;
    onlyBusinessDays?: boolean;
    repetitionMonth?: number;
    repetitionDay?: number;
    tags?: Array<any>;
    amountTo?: string;
    amountFrom?: string;
    subcategory?: string;
    contact?: string;
    firstOccurrenceDateTo?: Date;
    firstOccurrenceDateFrom?: Date;
    direction?: ExportRecurringFinancialRecordsDirectionEnum;
    format?: ExportRecurringFinancialRecordsFormatEnum;
}
/**
 * RecurringFinancialRecordsExportApi - interface
 *
 * @export
 * @interface RecurringFinancialRecordsExportApiInterface
 */
export interface RecurringFinancialRecordsExportApiInterface {
    /**
     *
     * @summary Solicita a exportação dos lançamentos recorrentes.
     * @param {'asc' | 'desc'} [sortOrder] Ordem da ordenação.
     * @param {'direction' | 'firstOccurrenceDate' | 'contact' | 'description' | 'subcategory' | 'amount' | 'frequency' | 'isActive' | 'createdAt'} [sortBy] Campo para ordenação.
     * @param {'WEEKLY' | 'MONTHLY' | 'YEARLY'} [frequency] Frequência de repetição do lançamento.
     * @param {boolean} [isActive] Indica se o lançamento recorrente está ativo.
     * @param {boolean} [automaticCompletion] Indica se o lançamento será completado automaticamente.
     * @param {boolean} [onlyBusinessDays] Indica se o lançamento será apenas em dias úteis.
     * @param {number} [repetitionMonth] Mês de repetição do lançamento.
     * @param {number} [repetitionDay] Dia de repetição do lançamento.
     * @param {Array<any>} [tags] Identificadores das tags.
     * @param {string} [amountTo] Valor máximo do lançamento.
     * @param {string} [amountFrom] Valor mínimo do lançamento.
     * @param {string} [subcategory] Identificador da subcategoria.
     * @param {string} [contact] Identificador do contato.
     * @param {Date} [firstOccurrenceDateTo] Data final da primeira ocorrência (formato ISO YYYY-MM-DD).
     * @param {Date} [firstOccurrenceDateFrom] Data inicial da primeira ocorrência (formato ISO YYYY-MM-DD).
     * @param {'IN' | 'OUT'} [direction] Direção do lançamento (entrada/saída).
     * @param {'csv' | 'xlsx'} [format] Formato de exportação dos dados.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof RecurringFinancialRecordsExportApiInterface
     */
    exportRecurringFinancialRecordsRaw(requestParameters: ExportRecurringFinancialRecordsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ExportRecurringFinancialRecordsDto>>;
    /**
     * Solicita a exportação dos lançamentos recorrentes.
     */
    exportRecurringFinancialRecords(requestParameters: ExportRecurringFinancialRecordsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ExportRecurringFinancialRecordsDto>;
}
/**
 *
 */
export declare class RecurringFinancialRecordsExportApi extends runtime.BaseAPI implements RecurringFinancialRecordsExportApiInterface {
    /**
     * Solicita a exportação dos lançamentos recorrentes.
     */
    exportRecurringFinancialRecordsRaw(requestParameters: ExportRecurringFinancialRecordsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ExportRecurringFinancialRecordsDto>>;
    /**
     * Solicita a exportação dos lançamentos recorrentes.
     */
    exportRecurringFinancialRecords(requestParameters?: ExportRecurringFinancialRecordsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ExportRecurringFinancialRecordsDto>;
}
/**
 * @export
 */
export declare const ExportRecurringFinancialRecordsSortOrderEnum: {
    readonly Asc: "asc";
    readonly Desc: "desc";
};
export type ExportRecurringFinancialRecordsSortOrderEnum = typeof ExportRecurringFinancialRecordsSortOrderEnum[keyof typeof ExportRecurringFinancialRecordsSortOrderEnum];
/**
 * @export
 */
export declare const ExportRecurringFinancialRecordsSortByEnum: {
    readonly Direction: "direction";
    readonly FirstOccurrenceDate: "firstOccurrenceDate";
    readonly Contact: "contact";
    readonly Description: "description";
    readonly Subcategory: "subcategory";
    readonly Amount: "amount";
    readonly Frequency: "frequency";
    readonly IsActive: "isActive";
    readonly CreatedAt: "createdAt";
};
export type ExportRecurringFinancialRecordsSortByEnum = typeof ExportRecurringFinancialRecordsSortByEnum[keyof typeof ExportRecurringFinancialRecordsSortByEnum];
/**
 * @export
 */
export declare const ExportRecurringFinancialRecordsFrequencyEnum: {
    readonly Weekly: "WEEKLY";
    readonly Monthly: "MONTHLY";
    readonly Yearly: "YEARLY";
};
export type ExportRecurringFinancialRecordsFrequencyEnum = typeof ExportRecurringFinancialRecordsFrequencyEnum[keyof typeof ExportRecurringFinancialRecordsFrequencyEnum];
/**
 * @export
 */
export declare const ExportRecurringFinancialRecordsDirectionEnum: {
    readonly In: "IN";
    readonly Out: "OUT";
};
export type ExportRecurringFinancialRecordsDirectionEnum = typeof ExportRecurringFinancialRecordsDirectionEnum[keyof typeof ExportRecurringFinancialRecordsDirectionEnum];
/**
 * @export
 */
export declare const ExportRecurringFinancialRecordsFormatEnum: {
    readonly Csv: "csv";
    readonly Xlsx: "xlsx";
};
export type ExportRecurringFinancialRecordsFormatEnum = typeof ExportRecurringFinancialRecordsFormatEnum[keyof typeof ExportRecurringFinancialRecordsFormatEnum];
