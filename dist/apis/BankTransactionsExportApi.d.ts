/**
 * Sofia Pegasus core-api
 * Api principal do sistema Pegasus para gerenciamento financeiro de pequenas e médias empresas.
 *
 * The version of the OpenAPI document: 1.11.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import * as runtime from '../runtime';
import type { ExportBankTransactionsDto } from '../models/index';
export interface ExportBankTransactionsRequest {
    sortOrder?: ExportBankTransactionsSortOrderEnum;
    sortBy?: ExportBankTransactionsSortByEnum;
    ignored?: boolean;
    origin?: ExportBankTransactionsOriginEnum;
    reconciled?: boolean;
    type?: ExportBankTransactionsTypeEnum;
    dateTo?: Date;
    dateFrom?: Date;
    bankAccount?: string;
    format?: ExportBankTransactionsFormatEnum;
}
/**
 * BankTransactionsExportApi - interface
 *
 * @export
 * @interface BankTransactionsExportApiInterface
 */
export interface BankTransactionsExportApiInterface {
    /**
     *
     * @summary Solicita a exportação das transações bancárias.
     * @param {'asc' | 'desc'} [sortOrder] Ordem da ordenação. Valores possíveis: \&#39;asc\&#39;, \&#39;desc\&#39;.
     * @param {'date' | 'amountInBrl' | 'description' | 'createdAt' | 'reconciled'} [sortBy] Campo para ordenação
     * @param {boolean} [ignored] Filtrar por transações ignoradas/arquivadas. (true/false)
     * @param {'AUTOMATIC_INTEGRATION' | 'MANUAL_OFX_IMPORT'} [origin] Filtrar pela origem da transação.
     * @param {boolean} [reconciled] Filtrar por transações reconciliadas. (true/false)
     * @param {'DEBIT' | 'CREDIT'} [type] Tipo da movimentação.
     * @param {Date} [dateTo] Data final para filtrar.
     * @param {Date} [dateFrom] Data inicial para filtrar.
     * @param {string} [bankAccount] ID da conta bancária para filtrar.
     * @param {'csv' | 'xlsx'} [format] Formato de exportação dos dados.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof BankTransactionsExportApiInterface
     */
    exportBankTransactionsRaw(requestParameters: ExportBankTransactionsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ExportBankTransactionsDto>>;
    /**
     * Solicita a exportação das transações bancárias.
     */
    exportBankTransactions(requestParameters: ExportBankTransactionsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ExportBankTransactionsDto>;
}
/**
 *
 */
export declare class BankTransactionsExportApi extends runtime.BaseAPI implements BankTransactionsExportApiInterface {
    /**
     * Solicita a exportação das transações bancárias.
     */
    exportBankTransactionsRaw(requestParameters: ExportBankTransactionsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ExportBankTransactionsDto>>;
    /**
     * Solicita a exportação das transações bancárias.
     */
    exportBankTransactions(requestParameters?: ExportBankTransactionsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ExportBankTransactionsDto>;
}
/**
 * @export
 */
export declare const ExportBankTransactionsSortOrderEnum: {
    readonly Asc: "asc";
    readonly Desc: "desc";
};
export type ExportBankTransactionsSortOrderEnum = typeof ExportBankTransactionsSortOrderEnum[keyof typeof ExportBankTransactionsSortOrderEnum];
/**
 * @export
 */
export declare const ExportBankTransactionsSortByEnum: {
    readonly Date: "date";
    readonly AmountInBrl: "amountInBrl";
    readonly Description: "description";
    readonly CreatedAt: "createdAt";
    readonly Reconciled: "reconciled";
};
export type ExportBankTransactionsSortByEnum = typeof ExportBankTransactionsSortByEnum[keyof typeof ExportBankTransactionsSortByEnum];
/**
 * @export
 */
export declare const ExportBankTransactionsOriginEnum: {
    readonly AutomaticIntegration: "AUTOMATIC_INTEGRATION";
    readonly ManualOfxImport: "MANUAL_OFX_IMPORT";
};
export type ExportBankTransactionsOriginEnum = typeof ExportBankTransactionsOriginEnum[keyof typeof ExportBankTransactionsOriginEnum];
/**
 * @export
 */
export declare const ExportBankTransactionsTypeEnum: {
    readonly Debit: "DEBIT";
    readonly Credit: "CREDIT";
};
export type ExportBankTransactionsTypeEnum = typeof ExportBankTransactionsTypeEnum[keyof typeof ExportBankTransactionsTypeEnum];
/**
 * @export
 */
export declare const ExportBankTransactionsFormatEnum: {
    readonly Csv: "csv";
    readonly Xlsx: "xlsx";
};
export type ExportBankTransactionsFormatEnum = typeof ExportBankTransactionsFormatEnum[keyof typeof ExportBankTransactionsFormatEnum];
