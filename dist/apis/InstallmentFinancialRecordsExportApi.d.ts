/**
 * Sofia Pegasus core-api
 * Api principal do sistema Pegasus para gerenciamento financeiro de pequenas e médias empresas.
 *
 * The version of the OpenAPI document: 1.11.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import * as runtime from '../runtime';
import type { ExportInstallmentFinancialRecordsDto } from '../models/index';
export interface ExportInstallmentFinancialRecordsRequest {
    sortOrder?: ExportInstallmentFinancialRecordsSortOrderEnum;
    sortBy?: ExportInstallmentFinancialRecordsSortByEnum;
    completed?: boolean;
    frequency?: ExportInstallmentFinancialRecordsFrequencyEnum;
    competenceDateTo?: Date;
    competenceDateFrom?: Date;
    tags?: Array<any>;
    subcategory?: string;
    contact?: string;
    firstInstallmentDateTo?: Date;
    firstInstallmentDateFrom?: Date;
    direction?: ExportInstallmentFinancialRecordsDirectionEnum;
    format?: ExportInstallmentFinancialRecordsFormatEnum;
}
/**
 * InstallmentFinancialRecordsExportApi - interface
 *
 * @export
 * @interface InstallmentFinancialRecordsExportApiInterface
 */
export interface InstallmentFinancialRecordsExportApiInterface {
    /**
     *
     * @summary Solicita a exportação dos lançamentos financeiros parcelados.
     * @param {'asc' | 'desc'} [sortOrder] Ordem da ordenação.
     * @param {'direction' | 'firstInstallmentDate' | 'contact' | 'description' | 'subcategory' | 'amount' | 'tags' | 'competenceDate' | 'frequency' | 'createdAt'} [sortBy] Campo para ordenação.
     * @param {boolean} [completed] Indica se o lançamento parcelado está completo (todas as parcelas pagas/recebidas).
     * @param {'MONTHLY' | 'WEEKLY' | 'YEARLY'} [frequency] Frequência do lançamento parcelado.
     * @param {Date} [competenceDateTo] Data de competência final (formato ISO YYYY-MM-DD).
     * @param {Date} [competenceDateFrom] Data de competência inicial (formato ISO YYYY-MM-DD).
     * @param {Array<any>} [tags] Identificadores das tags.
     * @param {string} [subcategory] Identificador da subcategoria.
     * @param {string} [contact] Identificador do contato.
     * @param {Date} [firstInstallmentDateTo] Data final da primeira parcela (formato ISO YYYY-MM-DD).
     * @param {Date} [firstInstallmentDateFrom] Data inicial da primeira parcela (formato ISO YYYY-MM-DD).
     * @param {'IN' | 'OUT'} [direction] Direção do lançamento (entrada/saída).
     * @param {'csv' | 'xlsx'} [format] Formato de exportação dos dados (CSV padrão).
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof InstallmentFinancialRecordsExportApiInterface
     */
    exportInstallmentFinancialRecordsRaw(requestParameters: ExportInstallmentFinancialRecordsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ExportInstallmentFinancialRecordsDto>>;
    /**
     * Solicita a exportação dos lançamentos financeiros parcelados.
     */
    exportInstallmentFinancialRecords(requestParameters: ExportInstallmentFinancialRecordsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ExportInstallmentFinancialRecordsDto>;
}
/**
 *
 */
export declare class InstallmentFinancialRecordsExportApi extends runtime.BaseAPI implements InstallmentFinancialRecordsExportApiInterface {
    /**
     * Solicita a exportação dos lançamentos financeiros parcelados.
     */
    exportInstallmentFinancialRecordsRaw(requestParameters: ExportInstallmentFinancialRecordsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ExportInstallmentFinancialRecordsDto>>;
    /**
     * Solicita a exportação dos lançamentos financeiros parcelados.
     */
    exportInstallmentFinancialRecords(requestParameters?: ExportInstallmentFinancialRecordsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ExportInstallmentFinancialRecordsDto>;
}
/**
 * @export
 */
export declare const ExportInstallmentFinancialRecordsSortOrderEnum: {
    readonly Asc: "asc";
    readonly Desc: "desc";
};
export type ExportInstallmentFinancialRecordsSortOrderEnum = typeof ExportInstallmentFinancialRecordsSortOrderEnum[keyof typeof ExportInstallmentFinancialRecordsSortOrderEnum];
/**
 * @export
 */
export declare const ExportInstallmentFinancialRecordsSortByEnum: {
    readonly Direction: "direction";
    readonly FirstInstallmentDate: "firstInstallmentDate";
    readonly Contact: "contact";
    readonly Description: "description";
    readonly Subcategory: "subcategory";
    readonly Amount: "amount";
    readonly Tags: "tags";
    readonly CompetenceDate: "competenceDate";
    readonly Frequency: "frequency";
    readonly CreatedAt: "createdAt";
};
export type ExportInstallmentFinancialRecordsSortByEnum = typeof ExportInstallmentFinancialRecordsSortByEnum[keyof typeof ExportInstallmentFinancialRecordsSortByEnum];
/**
 * @export
 */
export declare const ExportInstallmentFinancialRecordsFrequencyEnum: {
    readonly Monthly: "MONTHLY";
    readonly Weekly: "WEEKLY";
    readonly Yearly: "YEARLY";
};
export type ExportInstallmentFinancialRecordsFrequencyEnum = typeof ExportInstallmentFinancialRecordsFrequencyEnum[keyof typeof ExportInstallmentFinancialRecordsFrequencyEnum];
/**
 * @export
 */
export declare const ExportInstallmentFinancialRecordsDirectionEnum: {
    readonly In: "IN";
    readonly Out: "OUT";
};
export type ExportInstallmentFinancialRecordsDirectionEnum = typeof ExportInstallmentFinancialRecordsDirectionEnum[keyof typeof ExportInstallmentFinancialRecordsDirectionEnum];
/**
 * @export
 */
export declare const ExportInstallmentFinancialRecordsFormatEnum: {
    readonly Csv: "csv";
    readonly Xlsx: "xlsx";
};
export type ExportInstallmentFinancialRecordsFormatEnum = typeof ExportInstallmentFinancialRecordsFormatEnum[keyof typeof ExportInstallmentFinancialRecordsFormatEnum];
