"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * Sofia Pegasus core-api
 * Api principal do sistema Pegasus para gerenciamento financeiro de pequenas e mÃ©dias empresas.
 *
 * The version of the OpenAPI document: 1.12.14
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g = Object.create((typeof Iterator === "function" ? Iterator : Object).prototype);
    return g.next = verb(0), g["throw"] = verb(1), g["return"] = verb(2), typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (g && (g = 0, op[0] && (_ = 0)), _) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.SystemFindAllContactsReadPreferenceEnum = exports.ContactsApi = void 0;
var runtime = require("../runtime");
var index_1 = require("../models/index");
/**
 *
 */
var ContactsApi = /** @class */ (function (_super) {
    __extends(ContactsApi, _super);
    function ContactsApi() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    /**
     * Cria um novo contato.
     */
    ContactsApi.prototype.createContactRaw = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var queryParameters, headerParameters, urlPath, response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (requestParameters['createContactRequestBodyDto'] == null) {
                            throw new runtime.RequiredError('createContactRequestBodyDto', 'Required parameter "createContactRequestBodyDto" was null or undefined when calling createContact().');
                        }
                        queryParameters = {};
                        if (requestParameters['populate'] != null) {
                            queryParameters['populate'] = requestParameters['populate'];
                        }
                        headerParameters = {};
                        headerParameters['Content-Type'] = 'application/json';
                        urlPath = "/external/contacts";
                        return [4 /*yield*/, this.request({
                                path: urlPath,
                                method: 'POST',
                                headers: headerParameters,
                                query: queryParameters,
                                body: (0, index_1.CreateContactRequestBodyDtoToJSON)(requestParameters['createContactRequestBodyDto']),
                            }, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [2 /*return*/, new runtime.JSONApiResponse(response, function (jsonValue) { return (0, index_1.ContactDtoFromJSON)(jsonValue); })];
                }
            });
        });
    };
    /**
     * Cria um novo contato.
     */
    ContactsApi.prototype.createContact = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.createContactRaw(requestParameters, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [4 /*yield*/, response.value()];
                    case 2: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    /**
     * Busca todas as origens de contato.
     */
    ContactsApi.prototype.findAllContactOriginsRaw = function (initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var queryParameters, headerParameters, urlPath, response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        queryParameters = {};
                        headerParameters = {};
                        urlPath = "/external/contacts/origins";
                        return [4 /*yield*/, this.request({
                                path: urlPath,
                                method: 'GET',
                                headers: headerParameters,
                                query: queryParameters,
                            }, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [2 /*return*/, new runtime.JSONApiResponse(response, function (jsonValue) { return jsonValue.map(index_1.ContactOriginItemEntityFromJSON); })];
                }
            });
        });
    };
    /**
     * Busca todas as origens de contato.
     */
    ContactsApi.prototype.findAllContactOrigins = function (initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.findAllContactOriginsRaw(initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [4 /*yield*/, response.value()];
                    case 2: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    /**
     * Busca todos os tipos de contato.
     */
    ContactsApi.prototype.findAllContactTypesRaw = function (initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var queryParameters, headerParameters, urlPath, response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        queryParameters = {};
                        headerParameters = {};
                        urlPath = "/external/contacts/types";
                        return [4 /*yield*/, this.request({
                                path: urlPath,
                                method: 'GET',
                                headers: headerParameters,
                                query: queryParameters,
                            }, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [2 /*return*/, new runtime.JSONApiResponse(response, function (jsonValue) { return jsonValue.map(index_1.ContactTypeItemEntityFromJSON); })];
                }
            });
        });
    };
    /**
     * Busca todos os tipos de contato.
     */
    ContactsApi.prototype.findAllContactTypes = function (initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.findAllContactTypesRaw(initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [4 /*yield*/, response.value()];
                    case 2: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    /**
     * Busca todos os contatos.
     */
    ContactsApi.prototype.findAllContactsRaw = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var queryParameters, headerParameters, urlPath, response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        queryParameters = {};
                        if (requestParameters['sortOrder'] != null) {
                            queryParameters['sortOrder'] = requestParameters['sortOrder'];
                        }
                        if (requestParameters['sortBy'] != null) {
                            queryParameters['sortBy'] = requestParameters['sortBy'];
                        }
                        if (requestParameters['populate'] != null) {
                            queryParameters['populate'] = requestParameters['populate'];
                        }
                        if (requestParameters['considerNotIdentified'] != null) {
                            queryParameters['considerNotIdentified'] = requestParameters['considerNotIdentified'];
                        }
                        if (requestParameters['states'] != null) {
                            queryParameters['states'] = requestParameters['states'];
                        }
                        if (requestParameters['country'] != null) {
                            queryParameters['country'] = requestParameters['country'];
                        }
                        if (requestParameters['birthdayTo'] != null) {
                            queryParameters['birthdayTo'] = requestParameters['birthdayTo'];
                        }
                        if (requestParameters['birthdayFrom'] != null) {
                            queryParameters['birthdayFrom'] = requestParameters['birthdayFrom'];
                        }
                        if (requestParameters['origins'] != null) {
                            queryParameters['origins'] = requestParameters['origins'];
                        }
                        if (requestParameters['types'] != null) {
                            queryParameters['types'] = requestParameters['types'];
                        }
                        if (requestParameters['semanticSearchTermInBase64'] != null) {
                            queryParameters['semanticSearchTermInBase64'] = requestParameters['semanticSearchTermInBase64'];
                        }
                        if (requestParameters['textSearchTerm'] != null) {
                            queryParameters['textSearchTerm'] = requestParameters['textSearchTerm'];
                        }
                        if (requestParameters['pageSize'] != null) {
                            queryParameters['pageSize'] = requestParameters['pageSize'];
                        }
                        if (requestParameters['pageIndex'] != null) {
                            queryParameters['pageIndex'] = requestParameters['pageIndex'];
                        }
                        headerParameters = {};
                        urlPath = "/external/contacts";
                        return [4 /*yield*/, this.request({
                                path: urlPath,
                                method: 'GET',
                                headers: headerParameters,
                                query: queryParameters,
                            }, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [2 /*return*/, new runtime.JSONApiResponse(response, function (jsonValue) { return (0, index_1.ContactsPageDtoFromJSON)(jsonValue); })];
                }
            });
        });
    };
    /**
     * Busca todos os contatos.
     */
    ContactsApi.prototype.findAllContacts = function () {
        return __awaiter(this, arguments, void 0, function (requestParameters, initOverrides) {
            var response;
            if (requestParameters === void 0) { requestParameters = {}; }
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.findAllContactsRaw(requestParameters, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [4 /*yield*/, response.value()];
                    case 2: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    /**
     * Busca um contato pelo identificador.
     */
    ContactsApi.prototype.findByIdContactRaw = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var queryParameters, headerParameters, urlPath, response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (requestParameters['id'] == null) {
                            throw new runtime.RequiredError('id', 'Required parameter "id" was null or undefined when calling findByIdContact().');
                        }
                        queryParameters = {};
                        if (requestParameters['populate'] != null) {
                            queryParameters['populate'] = requestParameters['populate'];
                        }
                        headerParameters = {};
                        urlPath = "/external/contacts/{id}";
                        urlPath = urlPath.replace("{".concat("id", "}"), encodeURIComponent(String(requestParameters['id'])));
                        return [4 /*yield*/, this.request({
                                path: urlPath,
                                method: 'GET',
                                headers: headerParameters,
                                query: queryParameters,
                            }, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [2 /*return*/, new runtime.JSONApiResponse(response, function (jsonValue) { return (0, index_1.ContactDtoFromJSON)(jsonValue); })];
                }
            });
        });
    };
    /**
     * Busca um contato pelo identificador.
     */
    ContactsApi.prototype.findByIdContact = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.findByIdContactRaw(requestParameters, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [4 /*yield*/, response.value()];
                    case 2: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    /**
     * Busca o contato nÃ£o identificado.
     */
    ContactsApi.prototype.findNotIdentifiedContactRaw = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var queryParameters, headerParameters, urlPath, response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (requestParameters['organizationId'] == null) {
                            throw new runtime.RequiredError('organizationId', 'Required parameter "organizationId" was null or undefined when calling findNotIdentifiedContact().');
                        }
                        queryParameters = {};
                        headerParameters = {};
                        urlPath = "/internal/organizations/{organizationId}/contacts/not-identified";
                        urlPath = urlPath.replace("{".concat("organizationId", "}"), encodeURIComponent(String(requestParameters['organizationId'])));
                        return [4 /*yield*/, this.request({
                                path: urlPath,
                                method: 'GET',
                                headers: headerParameters,
                                query: queryParameters,
                            }, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [2 /*return*/, new runtime.JSONApiResponse(response, function (jsonValue) { return (0, index_1.ContactDtoFromJSON)(jsonValue); })];
                }
            });
        });
    };
    /**
     * Busca o contato nÃ£o identificado.
     */
    ContactsApi.prototype.findNotIdentifiedContact = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.findNotIdentifiedContactRaw(requestParameters, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [4 /*yield*/, response.value()];
                    case 2: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    /**
     * Atualiza parcialmente um contato.
     */
    ContactsApi.prototype.partialUpdateContactRaw = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var queryParameters, headerParameters, urlPath, response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (requestParameters['id'] == null) {
                            throw new runtime.RequiredError('id', 'Required parameter "id" was null or undefined when calling partialUpdateContact().');
                        }
                        if (requestParameters['partialUpdateContactRequestBodyDto'] == null) {
                            throw new runtime.RequiredError('partialUpdateContactRequestBodyDto', 'Required parameter "partialUpdateContactRequestBodyDto" was null or undefined when calling partialUpdateContact().');
                        }
                        queryParameters = {};
                        if (requestParameters['populate'] != null) {
                            queryParameters['populate'] = requestParameters['populate'];
                        }
                        headerParameters = {};
                        headerParameters['Content-Type'] = 'application/json';
                        urlPath = "/external/contacts/{id}";
                        urlPath = urlPath.replace("{".concat("id", "}"), encodeURIComponent(String(requestParameters['id'])));
                        return [4 /*yield*/, this.request({
                                path: urlPath,
                                method: 'PATCH',
                                headers: headerParameters,
                                query: queryParameters,
                                body: (0, index_1.PartialUpdateContactRequestBodyDtoToJSON)(requestParameters['partialUpdateContactRequestBodyDto']),
                            }, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [2 /*return*/, new runtime.JSONApiResponse(response, function (jsonValue) { return (0, index_1.ContactDtoFromJSON)(jsonValue); })];
                }
            });
        });
    };
    /**
     * Atualiza parcialmente um contato.
     */
    ContactsApi.prototype.partialUpdateContact = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.partialUpdateContactRaw(requestParameters, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [4 /*yield*/, response.value()];
                    case 2: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    /**
     * Remove um contato.
     */
    ContactsApi.prototype.removeContactRaw = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var queryParameters, headerParameters, urlPath, response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (requestParameters['id'] == null) {
                            throw new runtime.RequiredError('id', 'Required parameter "id" was null or undefined when calling removeContact().');
                        }
                        if (requestParameters['removeContactRequestBodyDto'] == null) {
                            throw new runtime.RequiredError('removeContactRequestBodyDto', 'Required parameter "removeContactRequestBodyDto" was null or undefined when calling removeContact().');
                        }
                        queryParameters = {};
                        headerParameters = {};
                        headerParameters['Content-Type'] = 'application/json';
                        urlPath = "/external/contacts/{id}";
                        urlPath = urlPath.replace("{".concat("id", "}"), encodeURIComponent(String(requestParameters['id'])));
                        return [4 /*yield*/, this.request({
                                path: urlPath,
                                method: 'DELETE',
                                headers: headerParameters,
                                query: queryParameters,
                                body: (0, index_1.RemoveContactRequestBodyDtoToJSON)(requestParameters['removeContactRequestBodyDto']),
                            }, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [2 /*return*/, new runtime.VoidApiResponse(response)];
                }
            });
        });
    };
    /**
     * Remove um contato.
     */
    ContactsApi.prototype.removeContact = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.removeContactRaw(requestParameters, initOverrides)];
                    case 1:
                        _a.sent();
                        return [2 /*return*/];
                }
            });
        });
    };
    /**
     * Busca todos os contatos pelo sistema.
     */
    ContactsApi.prototype.systemFindAllContactsRaw = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var queryParameters, headerParameters, urlPath, response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (requestParameters['ownerOrganizationId'] == null) {
                            throw new runtime.RequiredError('ownerOrganizationId', 'Required parameter "ownerOrganizationId" was null or undefined when calling systemFindAllContacts().');
                        }
                        queryParameters = {};
                        if (requestParameters['readPreference'] != null) {
                            queryParameters['readPreference'] = requestParameters['readPreference'];
                        }
                        if (requestParameters['ownerOrganizationId'] != null) {
                            queryParameters['ownerOrganizationId'] = requestParameters['ownerOrganizationId'];
                        }
                        if (requestParameters['sortOrder'] != null) {
                            queryParameters['sortOrder'] = requestParameters['sortOrder'];
                        }
                        if (requestParameters['sortBy'] != null) {
                            queryParameters['sortBy'] = requestParameters['sortBy'];
                        }
                        if (requestParameters['populate'] != null) {
                            queryParameters['populate'] = requestParameters['populate'];
                        }
                        if (requestParameters['considerNotIdentified'] != null) {
                            queryParameters['considerNotIdentified'] = requestParameters['considerNotIdentified'];
                        }
                        if (requestParameters['states'] != null) {
                            queryParameters['states'] = requestParameters['states'];
                        }
                        if (requestParameters['country'] != null) {
                            queryParameters['country'] = requestParameters['country'];
                        }
                        if (requestParameters['birthdayTo'] != null) {
                            queryParameters['birthdayTo'] = requestParameters['birthdayTo'];
                        }
                        if (requestParameters['birthdayFrom'] != null) {
                            queryParameters['birthdayFrom'] = requestParameters['birthdayFrom'];
                        }
                        if (requestParameters['origins'] != null) {
                            queryParameters['origins'] = requestParameters['origins'];
                        }
                        if (requestParameters['types'] != null) {
                            queryParameters['types'] = requestParameters['types'];
                        }
                        if (requestParameters['semanticSearchTermInBase64'] != null) {
                            queryParameters['semanticSearchTermInBase64'] = requestParameters['semanticSearchTermInBase64'];
                        }
                        if (requestParameters['textSearchTerm'] != null) {
                            queryParameters['textSearchTerm'] = requestParameters['textSearchTerm'];
                        }
                        if (requestParameters['pageSize'] != null) {
                            queryParameters['pageSize'] = requestParameters['pageSize'];
                        }
                        if (requestParameters['pageIndex'] != null) {
                            queryParameters['pageIndex'] = requestParameters['pageIndex'];
                        }
                        headerParameters = {};
                        urlPath = "/internal/contacts";
                        return [4 /*yield*/, this.request({
                                path: urlPath,
                                method: 'GET',
                                headers: headerParameters,
                                query: queryParameters,
                            }, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [2 /*return*/, new runtime.JSONApiResponse(response, function (jsonValue) { return (0, index_1.ContactsPageDtoFromJSON)(jsonValue); })];
                }
            });
        });
    };
    /**
     * Busca todos os contatos pelo sistema.
     */
    ContactsApi.prototype.systemFindAllContacts = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.systemFindAllContactsRaw(requestParameters, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [4 /*yield*/, response.value()];
                    case 2: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    /**
     * Busca um contato pelo identificador.
     */
    ContactsApi.prototype.systemFindByIdContactRaw = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var queryParameters, headerParameters, urlPath, response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (requestParameters['organizationId'] == null) {
                            throw new runtime.RequiredError('organizationId', 'Required parameter "organizationId" was null or undefined when calling systemFindByIdContact().');
                        }
                        if (requestParameters['contactId'] == null) {
                            throw new runtime.RequiredError('contactId', 'Required parameter "contactId" was null or undefined when calling systemFindByIdContact().');
                        }
                        queryParameters = {};
                        if (requestParameters['populate'] != null) {
                            queryParameters['populate'] = requestParameters['populate'];
                        }
                        headerParameters = {};
                        urlPath = "/internal/organizations/{organizationId}/contacts/{contactId}";
                        urlPath = urlPath.replace("{".concat("organizationId", "}"), encodeURIComponent(String(requestParameters['organizationId'])));
                        urlPath = urlPath.replace("{".concat("contactId", "}"), encodeURIComponent(String(requestParameters['contactId'])));
                        return [4 /*yield*/, this.request({
                                path: urlPath,
                                method: 'GET',
                                headers: headerParameters,
                                query: queryParameters,
                            }, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [2 /*return*/, new runtime.JSONApiResponse(response, function (jsonValue) { return (0, index_1.ContactDtoFromJSON)(jsonValue); })];
                }
            });
        });
    };
    /**
     * Busca um contato pelo identificador.
     */
    ContactsApi.prototype.systemFindByIdContact = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.systemFindByIdContactRaw(requestParameters, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [4 /*yield*/, response.value()];
                    case 2: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    return ContactsApi;
}(runtime.BaseAPI));
exports.ContactsApi = ContactsApi;
/**
 * @export
 */
exports.SystemFindAllContactsReadPreferenceEnum = {
    Primary: 'primary',
    PrimaryPreferred: 'primaryPreferred',
    Secondary: 'secondary',
    SecondaryPreferred: 'secondaryPreferred',
    Nearest: 'nearest'
};
