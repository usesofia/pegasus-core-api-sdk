"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * Sofia Pegasus core-api
 * Api principal do sistema Pegasus para gerenciamento financeiro de pequenas e médias empresas.
 *
 * The version of the OpenAPI document: 1.12.17
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g = Object.create((typeof Iterator === "function" ? Iterator : Object).prototype);
    return g.next = verb(0), g["throw"] = verb(1), g["return"] = verb(2), typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (g && (g = 0, op[0] && (_ = 0)), _) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.SystemFindAllFinancialRecordsSortByEnum = exports.SystemFindAllFinancialRecordsReadPreferenceEnum = exports.FindAllFinancialRecordsSortByEnum = exports.FinancialRecordsApi = void 0;
var runtime = require("../runtime");
var index_1 = require("../models/index");
/**
 *
 */
var FinancialRecordsApi = /** @class */ (function (_super) {
    __extends(FinancialRecordsApi, _super);
    function FinancialRecordsApi() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    /**
     * Cria um novo lançamento financeiro.
     */
    FinancialRecordsApi.prototype.createFinancialRecordRaw = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var queryParameters, headerParameters, urlPath, response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (requestParameters['createFinancialRecordRequestBodyDto'] == null) {
                            throw new runtime.RequiredError('createFinancialRecordRequestBodyDto', 'Required parameter "createFinancialRecordRequestBodyDto" was null or undefined when calling createFinancialRecord().');
                        }
                        queryParameters = {};
                        if (requestParameters['populate'] != null) {
                            queryParameters['populate'] = requestParameters['populate'];
                        }
                        headerParameters = {};
                        headerParameters['Content-Type'] = 'application/json';
                        urlPath = "/external/financial-records";
                        return [4 /*yield*/, this.request({
                                path: urlPath,
                                method: 'POST',
                                headers: headerParameters,
                                query: queryParameters,
                                body: (0, index_1.CreateFinancialRecordRequestBodyDtoToJSON)(requestParameters['createFinancialRecordRequestBodyDto']),
                            }, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [2 /*return*/, new runtime.JSONApiResponse(response, function (jsonValue) { return (0, index_1.FinancialRecordDtoFromJSON)(jsonValue); })];
                }
            });
        });
    };
    /**
     * Cria um novo lançamento financeiro.
     */
    FinancialRecordsApi.prototype.createFinancialRecord = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.createFinancialRecordRaw(requestParameters, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [4 /*yield*/, response.value()];
                    case 2: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    /**
     * Cria múltiplos lançamentos financeiros.
     */
    FinancialRecordsApi.prototype.createManyFinancialRecordsRaw = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var queryParameters, headerParameters, urlPath, response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (requestParameters['createManyFinancialRecordsRequestBodyDto'] == null) {
                            throw new runtime.RequiredError('createManyFinancialRecordsRequestBodyDto', 'Required parameter "createManyFinancialRecordsRequestBodyDto" was null or undefined when calling createManyFinancialRecords().');
                        }
                        queryParameters = {};
                        headerParameters = {};
                        headerParameters['Content-Type'] = 'application/json';
                        urlPath = "/external/financial-records/many";
                        return [4 /*yield*/, this.request({
                                path: urlPath,
                                method: 'POST',
                                headers: headerParameters,
                                query: queryParameters,
                                body: (0, index_1.CreateManyFinancialRecordsRequestBodyDtoToJSON)(requestParameters['createManyFinancialRecordsRequestBodyDto']),
                            }, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [2 /*return*/, new runtime.JSONApiResponse(response, function (jsonValue) { return jsonValue.map(index_1.FinancialRecordDtoFromJSON); })];
                }
            });
        });
    };
    /**
     * Cria múltiplos lançamentos financeiros.
     */
    FinancialRecordsApi.prototype.createManyFinancialRecords = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.createManyFinancialRecordsRaw(requestParameters, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [4 /*yield*/, response.value()];
                    case 2: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    /**
     * Busca todos os lançamentos financeiros.
     */
    FinancialRecordsApi.prototype.findAllFinancialRecordsRaw = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var queryParameters, headerParameters, urlPath, response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        queryParameters = {};
                        if (requestParameters['sortOrder'] != null) {
                            queryParameters['sortOrder'] = requestParameters['sortOrder'];
                        }
                        if (requestParameters['sortBy'] != null) {
                            queryParameters['sortBy'] = requestParameters['sortBy'];
                        }
                        if (requestParameters['recurringFinancialRecord'] != null) {
                            queryParameters['recurringFinancialRecord'] = requestParameters['recurringFinancialRecord'];
                        }
                        if (requestParameters['installmentFinancialRecord'] != null) {
                            queryParameters['installmentFinancialRecord'] = requestParameters['installmentFinancialRecord'];
                        }
                        if (requestParameters['account'] != null) {
                            queryParameters['account'] = requestParameters['account'];
                        }
                        if (requestParameters['reconciled'] != null) {
                            queryParameters['reconciled'] = requestParameters['reconciled'];
                        }
                        if (requestParameters['completed'] != null) {
                            queryParameters['completed'] = requestParameters['completed'];
                        }
                        if (requestParameters['tags'] != null) {
                            queryParameters['tags'] = requestParameters['tags'];
                        }
                        if (requestParameters['createdAtTo'] != null) {
                            queryParameters['createdAtTo'] = requestParameters['createdAtTo'];
                        }
                        if (requestParameters['createdAtFrom'] != null) {
                            queryParameters['createdAtFrom'] = requestParameters['createdAtFrom'];
                        }
                        if (requestParameters['cashDateTo'] != null) {
                            queryParameters['cashDateTo'] = requestParameters['cashDateTo'];
                        }
                        if (requestParameters['cashDateFrom'] != null) {
                            queryParameters['cashDateFrom'] = requestParameters['cashDateFrom'];
                        }
                        if (requestParameters['competenceDateTo'] != null) {
                            queryParameters['competenceDateTo'] = requestParameters['competenceDateTo'];
                        }
                        if (requestParameters['competenceDateFrom'] != null) {
                            queryParameters['competenceDateFrom'] = requestParameters['competenceDateFrom'];
                        }
                        if (requestParameters['subcategory'] != null) {
                            queryParameters['subcategory'] = requestParameters['subcategory'];
                        }
                        if (requestParameters['contact'] != null) {
                            queryParameters['contact'] = requestParameters['contact'];
                        }
                        if (requestParameters['dueDateTo'] != null) {
                            queryParameters['dueDateTo'] = requestParameters['dueDateTo'];
                        }
                        if (requestParameters['dueDateFrom'] != null) {
                            queryParameters['dueDateFrom'] = requestParameters['dueDateFrom'];
                        }
                        if (requestParameters['amountTo'] != null) {
                            queryParameters['amountTo'] = requestParameters['amountTo'];
                        }
                        if (requestParameters['amountFrom'] != null) {
                            queryParameters['amountFrom'] = requestParameters['amountFrom'];
                        }
                        if (requestParameters['direction'] != null) {
                            queryParameters['direction'] = requestParameters['direction'];
                        }
                        if (requestParameters['ids'] != null) {
                            queryParameters['ids'] = requestParameters['ids'];
                        }
                        if (requestParameters['populate'] != null) {
                            queryParameters['populate'] = requestParameters['populate'];
                        }
                        if (requestParameters['semanticSearchTermInBase64'] != null) {
                            queryParameters['semanticSearchTermInBase64'] = requestParameters['semanticSearchTermInBase64'];
                        }
                        if (requestParameters['textSearchTerm'] != null) {
                            queryParameters['textSearchTerm'] = requestParameters['textSearchTerm'];
                        }
                        if (requestParameters['pageSize'] != null) {
                            queryParameters['pageSize'] = requestParameters['pageSize'];
                        }
                        if (requestParameters['pageIndex'] != null) {
                            queryParameters['pageIndex'] = requestParameters['pageIndex'];
                        }
                        headerParameters = {};
                        urlPath = "/external/financial-records";
                        return [4 /*yield*/, this.request({
                                path: urlPath,
                                method: 'GET',
                                headers: headerParameters,
                                query: queryParameters,
                            }, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [2 /*return*/, new runtime.JSONApiResponse(response, function (jsonValue) { return (0, index_1.FinancialRecordsPageDtoFromJSON)(jsonValue); })];
                }
            });
        });
    };
    /**
     * Busca todos os lançamentos financeiros.
     */
    FinancialRecordsApi.prototype.findAllFinancialRecords = function () {
        return __awaiter(this, arguments, void 0, function (requestParameters, initOverrides) {
            var response;
            if (requestParameters === void 0) { requestParameters = {}; }
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.findAllFinancialRecordsRaw(requestParameters, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [4 /*yield*/, response.value()];
                    case 2: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    /**
     * Busca um lançamento financeiro pelo identificador.
     */
    FinancialRecordsApi.prototype.findByIdFinancialRecordRaw = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var queryParameters, headerParameters, urlPath, response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (requestParameters['id'] == null) {
                            throw new runtime.RequiredError('id', 'Required parameter "id" was null or undefined when calling findByIdFinancialRecord().');
                        }
                        queryParameters = {};
                        if (requestParameters['populate'] != null) {
                            queryParameters['populate'] = requestParameters['populate'];
                        }
                        headerParameters = {};
                        urlPath = "/external/financial-records/{id}";
                        urlPath = urlPath.replace("{".concat("id", "}"), encodeURIComponent(String(requestParameters['id'])));
                        return [4 /*yield*/, this.request({
                                path: urlPath,
                                method: 'GET',
                                headers: headerParameters,
                                query: queryParameters,
                            }, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [2 /*return*/, new runtime.JSONApiResponse(response, function (jsonValue) { return (0, index_1.FinancialRecordDtoFromJSON)(jsonValue); })];
                }
            });
        });
    };
    /**
     * Busca um lançamento financeiro pelo identificador.
     */
    FinancialRecordsApi.prototype.findByIdFinancialRecord = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.findByIdFinancialRecordRaw(requestParameters, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [4 /*yield*/, response.value()];
                    case 2: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    /**
     * Atualiza parcialmente um lançamento financeiro.
     */
    FinancialRecordsApi.prototype.partialUpdateFinancialRecordRaw = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var queryParameters, headerParameters, urlPath, response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (requestParameters['id'] == null) {
                            throw new runtime.RequiredError('id', 'Required parameter "id" was null or undefined when calling partialUpdateFinancialRecord().');
                        }
                        if (requestParameters['partialUpdateFinancialRecordRequestBodyDto'] == null) {
                            throw new runtime.RequiredError('partialUpdateFinancialRecordRequestBodyDto', 'Required parameter "partialUpdateFinancialRecordRequestBodyDto" was null or undefined when calling partialUpdateFinancialRecord().');
                        }
                        queryParameters = {};
                        if (requestParameters['populate'] != null) {
                            queryParameters['populate'] = requestParameters['populate'];
                        }
                        headerParameters = {};
                        headerParameters['Content-Type'] = 'application/json';
                        urlPath = "/external/financial-records/{id}";
                        urlPath = urlPath.replace("{".concat("id", "}"), encodeURIComponent(String(requestParameters['id'])));
                        return [4 /*yield*/, this.request({
                                path: urlPath,
                                method: 'PATCH',
                                headers: headerParameters,
                                query: queryParameters,
                                body: (0, index_1.PartialUpdateFinancialRecordRequestBodyDtoToJSON)(requestParameters['partialUpdateFinancialRecordRequestBodyDto']),
                            }, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [2 /*return*/, new runtime.JSONApiResponse(response, function (jsonValue) { return (0, index_1.FinancialRecordDtoFromJSON)(jsonValue); })];
                }
            });
        });
    };
    /**
     * Atualiza parcialmente um lançamento financeiro.
     */
    FinancialRecordsApi.prototype.partialUpdateFinancialRecord = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.partialUpdateFinancialRecordRaw(requestParameters, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [4 /*yield*/, response.value()];
                    case 2: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    /**
     * Atualiza parcialmente múltiplos lançamentos financeiros.
     */
    FinancialRecordsApi.prototype.partialUpdateManyFinancialRecordsRaw = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var queryParameters, headerParameters, urlPath, response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (requestParameters['partialUpdateManyFinancialRecordsRequestBodyDto'] == null) {
                            throw new runtime.RequiredError('partialUpdateManyFinancialRecordsRequestBodyDto', 'Required parameter "partialUpdateManyFinancialRecordsRequestBodyDto" was null or undefined when calling partialUpdateManyFinancialRecords().');
                        }
                        queryParameters = {};
                        headerParameters = {};
                        headerParameters['Content-Type'] = 'application/json';
                        urlPath = "/external/financial-records/many";
                        return [4 /*yield*/, this.request({
                                path: urlPath,
                                method: 'PATCH',
                                headers: headerParameters,
                                query: queryParameters,
                                body: (0, index_1.PartialUpdateManyFinancialRecordsRequestBodyDtoToJSON)(requestParameters['partialUpdateManyFinancialRecordsRequestBodyDto']),
                            }, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [2 /*return*/, new runtime.JSONApiResponse(response, function (jsonValue) { return jsonValue.map(index_1.FinancialRecordDtoFromJSON); })];
                }
            });
        });
    };
    /**
     * Atualiza parcialmente múltiplos lançamentos financeiros.
     */
    FinancialRecordsApi.prototype.partialUpdateManyFinancialRecords = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.partialUpdateManyFinancialRecordsRaw(requestParameters, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [4 /*yield*/, response.value()];
                    case 2: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    /**
     * Remove um lançamento financeiro.
     */
    FinancialRecordsApi.prototype.removeFinancialRecordRaw = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var queryParameters, headerParameters, urlPath, response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (requestParameters['id'] == null) {
                            throw new runtime.RequiredError('id', 'Required parameter "id" was null or undefined when calling removeFinancialRecord().');
                        }
                        if (requestParameters['removeFinancialRecordRequestBodyDto'] == null) {
                            throw new runtime.RequiredError('removeFinancialRecordRequestBodyDto', 'Required parameter "removeFinancialRecordRequestBodyDto" was null or undefined when calling removeFinancialRecord().');
                        }
                        queryParameters = {};
                        headerParameters = {};
                        headerParameters['Content-Type'] = 'application/json';
                        urlPath = "/external/financial-records/{id}";
                        urlPath = urlPath.replace("{".concat("id", "}"), encodeURIComponent(String(requestParameters['id'])));
                        return [4 /*yield*/, this.request({
                                path: urlPath,
                                method: 'DELETE',
                                headers: headerParameters,
                                query: queryParameters,
                                body: (0, index_1.RemoveFinancialRecordRequestBodyDtoToJSON)(requestParameters['removeFinancialRecordRequestBodyDto']),
                            }, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [2 /*return*/, new runtime.VoidApiResponse(response)];
                }
            });
        });
    };
    /**
     * Remove um lançamento financeiro.
     */
    FinancialRecordsApi.prototype.removeFinancialRecord = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.removeFinancialRecordRaw(requestParameters, initOverrides)];
                    case 1:
                        _a.sent();
                        return [2 /*return*/];
                }
            });
        });
    };
    /**
     * Cria múltiplos lançamentos financeiros.
     */
    FinancialRecordsApi.prototype.systemCreateManyFinancialRecordsRaw = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var queryParameters, headerParameters, urlPath, response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (requestParameters['organizationId'] == null) {
                            throw new runtime.RequiredError('organizationId', 'Required parameter "organizationId" was null or undefined when calling systemCreateManyFinancialRecords().');
                        }
                        if (requestParameters['createManyFinancialRecordsRequestBodyDto'] == null) {
                            throw new runtime.RequiredError('createManyFinancialRecordsRequestBodyDto', 'Required parameter "createManyFinancialRecordsRequestBodyDto" was null or undefined when calling systemCreateManyFinancialRecords().');
                        }
                        queryParameters = {};
                        headerParameters = {};
                        headerParameters['Content-Type'] = 'application/json';
                        urlPath = "/internal/organizations/{organizationId}/financial-records/many";
                        urlPath = urlPath.replace("{".concat("organizationId", "}"), encodeURIComponent(String(requestParameters['organizationId'])));
                        return [4 /*yield*/, this.request({
                                path: urlPath,
                                method: 'POST',
                                headers: headerParameters,
                                query: queryParameters,
                                body: (0, index_1.CreateManyFinancialRecordsRequestBodyDtoToJSON)(requestParameters['createManyFinancialRecordsRequestBodyDto']),
                            }, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [2 /*return*/, new runtime.JSONApiResponse(response, function (jsonValue) { return jsonValue.map(index_1.FinancialRecordDtoFromJSON); })];
                }
            });
        });
    };
    /**
     * Cria múltiplos lançamentos financeiros.
     */
    FinancialRecordsApi.prototype.systemCreateManyFinancialRecords = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.systemCreateManyFinancialRecordsRaw(requestParameters, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [4 /*yield*/, response.value()];
                    case 2: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    /**
     * Busca todos os lançamentos financeiros pelo sistema.
     */
    FinancialRecordsApi.prototype.systemFindAllFinancialRecordsRaw = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var queryParameters, headerParameters, urlPath, response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (requestParameters['ownerOrganizationId'] == null) {
                            throw new runtime.RequiredError('ownerOrganizationId', 'Required parameter "ownerOrganizationId" was null or undefined when calling systemFindAllFinancialRecords().');
                        }
                        queryParameters = {};
                        if (requestParameters['readPreference'] != null) {
                            queryParameters['readPreference'] = requestParameters['readPreference'];
                        }
                        if (requestParameters['sortOrder'] != null) {
                            queryParameters['sortOrder'] = requestParameters['sortOrder'];
                        }
                        if (requestParameters['sortBy'] != null) {
                            queryParameters['sortBy'] = requestParameters['sortBy'];
                        }
                        if (requestParameters['ownerOrganizationId'] != null) {
                            queryParameters['ownerOrganizationId'] = requestParameters['ownerOrganizationId'];
                        }
                        if (requestParameters['account'] != null) {
                            queryParameters['account'] = requestParameters['account'];
                        }
                        if (requestParameters['reconciled'] != null) {
                            queryParameters['reconciled'] = requestParameters['reconciled'];
                        }
                        if (requestParameters['completed'] != null) {
                            queryParameters['completed'] = requestParameters['completed'];
                        }
                        if (requestParameters['tags'] != null) {
                            queryParameters['tags'] = requestParameters['tags'];
                        }
                        if (requestParameters['createdAtTo'] != null) {
                            queryParameters['createdAtTo'] = requestParameters['createdAtTo'];
                        }
                        if (requestParameters['createdAtFrom'] != null) {
                            queryParameters['createdAtFrom'] = requestParameters['createdAtFrom'];
                        }
                        if (requestParameters['cashDateTo'] != null) {
                            queryParameters['cashDateTo'] = requestParameters['cashDateTo'];
                        }
                        if (requestParameters['cashDateFrom'] != null) {
                            queryParameters['cashDateFrom'] = requestParameters['cashDateFrom'];
                        }
                        if (requestParameters['competenceDateTo'] != null) {
                            queryParameters['competenceDateTo'] = requestParameters['competenceDateTo'];
                        }
                        if (requestParameters['competenceDateFrom'] != null) {
                            queryParameters['competenceDateFrom'] = requestParameters['competenceDateFrom'];
                        }
                        if (requestParameters['subcategory'] != null) {
                            queryParameters['subcategory'] = requestParameters['subcategory'];
                        }
                        if (requestParameters['contact'] != null) {
                            queryParameters['contact'] = requestParameters['contact'];
                        }
                        if (requestParameters['dueDateTo'] != null) {
                            queryParameters['dueDateTo'] = requestParameters['dueDateTo'];
                        }
                        if (requestParameters['dueDateFrom'] != null) {
                            queryParameters['dueDateFrom'] = requestParameters['dueDateFrom'];
                        }
                        if (requestParameters['amountTo'] != null) {
                            queryParameters['amountTo'] = requestParameters['amountTo'];
                        }
                        if (requestParameters['amountFrom'] != null) {
                            queryParameters['amountFrom'] = requestParameters['amountFrom'];
                        }
                        if (requestParameters['direction'] != null) {
                            queryParameters['direction'] = requestParameters['direction'];
                        }
                        if (requestParameters['ids'] != null) {
                            queryParameters['ids'] = requestParameters['ids'];
                        }
                        if (requestParameters['populate'] != null) {
                            queryParameters['populate'] = requestParameters['populate'];
                        }
                        if (requestParameters['semanticSearchTermInBase64'] != null) {
                            queryParameters['semanticSearchTermInBase64'] = requestParameters['semanticSearchTermInBase64'];
                        }
                        if (requestParameters['textSearchTerm'] != null) {
                            queryParameters['textSearchTerm'] = requestParameters['textSearchTerm'];
                        }
                        if (requestParameters['pageSize'] != null) {
                            queryParameters['pageSize'] = requestParameters['pageSize'];
                        }
                        if (requestParameters['pageIndex'] != null) {
                            queryParameters['pageIndex'] = requestParameters['pageIndex'];
                        }
                        headerParameters = {};
                        urlPath = "/internal/financial-records";
                        return [4 /*yield*/, this.request({
                                path: urlPath,
                                method: 'GET',
                                headers: headerParameters,
                                query: queryParameters,
                            }, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [2 /*return*/, new runtime.JSONApiResponse(response, function (jsonValue) { return (0, index_1.FinancialRecordsPageDtoFromJSON)(jsonValue); })];
                }
            });
        });
    };
    /**
     * Busca todos os lançamentos financeiros pelo sistema.
     */
    FinancialRecordsApi.prototype.systemFindAllFinancialRecords = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.systemFindAllFinancialRecordsRaw(requestParameters, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [4 /*yield*/, response.value()];
                    case 2: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    /**
     * Busca um lançamento financeiro pelo identificador.
     */
    FinancialRecordsApi.prototype.systemFindByIdFinancialRecordRaw = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var queryParameters, headerParameters, urlPath, response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (requestParameters['organizationId'] == null) {
                            throw new runtime.RequiredError('organizationId', 'Required parameter "organizationId" was null or undefined when calling systemFindByIdFinancialRecord().');
                        }
                        if (requestParameters['financialRecordId'] == null) {
                            throw new runtime.RequiredError('financialRecordId', 'Required parameter "financialRecordId" was null or undefined when calling systemFindByIdFinancialRecord().');
                        }
                        queryParameters = {};
                        if (requestParameters['populate'] != null) {
                            queryParameters['populate'] = requestParameters['populate'];
                        }
                        headerParameters = {};
                        urlPath = "/internal/organizations/{organizationId}/financial-records/{financialRecordId}";
                        urlPath = urlPath.replace("{".concat("organizationId", "}"), encodeURIComponent(String(requestParameters['organizationId'])));
                        urlPath = urlPath.replace("{".concat("financialRecordId", "}"), encodeURIComponent(String(requestParameters['financialRecordId'])));
                        return [4 /*yield*/, this.request({
                                path: urlPath,
                                method: 'GET',
                                headers: headerParameters,
                                query: queryParameters,
                            }, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [2 /*return*/, new runtime.JSONApiResponse(response, function (jsonValue) { return (0, index_1.FinancialRecordDtoFromJSON)(jsonValue); })];
                }
            });
        });
    };
    /**
     * Busca um lançamento financeiro pelo identificador.
     */
    FinancialRecordsApi.prototype.systemFindByIdFinancialRecord = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.systemFindByIdFinancialRecordRaw(requestParameters, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [4 /*yield*/, response.value()];
                    case 2: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    /**
     * Gera relatório dos contatos mais comuns para lançamentos financeiros similares.
     */
    FinancialRecordsApi.prototype.systemGenerateMostCommonContactsForSimilarFinancialRecordReportRaw = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var queryParameters, headerParameters, urlPath, response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (requestParameters['nContacts'] == null) {
                            throw new runtime.RequiredError('nContacts', 'Required parameter "nContacts" was null or undefined when calling systemGenerateMostCommonContactsForSimilarFinancialRecordReport().');
                        }
                        if (requestParameters['ownerOrganizationId'] == null) {
                            throw new runtime.RequiredError('ownerOrganizationId', 'Required parameter "ownerOrganizationId" was null or undefined when calling systemGenerateMostCommonContactsForSimilarFinancialRecordReport().');
                        }
                        if (requestParameters['systemGenerateMostCommonContactsForSimilarFinancialRecordReportRequestBodyDto'] == null) {
                            throw new runtime.RequiredError('systemGenerateMostCommonContactsForSimilarFinancialRecordReportRequestBodyDto', 'Required parameter "systemGenerateMostCommonContactsForSimilarFinancialRecordReportRequestBodyDto" was null or undefined when calling systemGenerateMostCommonContactsForSimilarFinancialRecordReport().');
                        }
                        queryParameters = {};
                        if (requestParameters['nContacts'] != null) {
                            queryParameters['nContacts'] = requestParameters['nContacts'];
                        }
                        if (requestParameters['ownerOrganizationId'] != null) {
                            queryParameters['ownerOrganizationId'] = requestParameters['ownerOrganizationId'];
                        }
                        headerParameters = {};
                        headerParameters['Content-Type'] = 'application/json';
                        urlPath = "/internal/financial-records/system-generate-most-common-contacts-for-similar-financial-record-report";
                        return [4 /*yield*/, this.request({
                                path: urlPath,
                                method: 'POST',
                                headers: headerParameters,
                                query: queryParameters,
                                body: (0, index_1.SystemGenerateMostCommonContactsForSimilarFinancialRecordReportRequestBodyDtoToJSON)(requestParameters['systemGenerateMostCommonContactsForSimilarFinancialRecordReportRequestBodyDto']),
                            }, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [2 /*return*/, new runtime.JSONApiResponse(response, function (jsonValue) { return (0, index_1.SystemGenerateMostCommonContactsForSimilarFinancialRecordReportResponseDtoFromJSON)(jsonValue); })];
                }
            });
        });
    };
    /**
     * Gera relatório dos contatos mais comuns para lançamentos financeiros similares.
     */
    FinancialRecordsApi.prototype.systemGenerateMostCommonContactsForSimilarFinancialRecordReport = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.systemGenerateMostCommonContactsForSimilarFinancialRecordReportRaw(requestParameters, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [4 /*yield*/, response.value()];
                    case 2: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    return FinancialRecordsApi;
}(runtime.BaseAPI));
exports.FinancialRecordsApi = FinancialRecordsApi;
/**
 * @export
 */
exports.FindAllFinancialRecordsSortByEnum = {
    Direction: 'direction',
    DueDate: 'dueDate',
    Contact: 'contact',
    Description: 'description',
    Subcategory: 'subcategory',
    Amount: 'amount',
    CompetenceDate: 'competenceDate',
    CashDate: 'cashDate',
    CreatedAt: 'createdAt'
};
/**
 * @export
 */
exports.SystemFindAllFinancialRecordsReadPreferenceEnum = {
    Primary: 'primary',
    PrimaryPreferred: 'primaryPreferred',
    Secondary: 'secondary',
    SecondaryPreferred: 'secondaryPreferred',
    Nearest: 'nearest'
};
/**
 * @export
 */
exports.SystemFindAllFinancialRecordsSortByEnum = {
    Direction: 'direction',
    DueDate: 'dueDate',
    Contact: 'contact',
    Description: 'description',
    Subcategory: 'subcategory',
    Amount: 'amount',
    CompetenceDate: 'competenceDate',
    CashDate: 'cashDate',
    CreatedAt: 'createdAt'
};
