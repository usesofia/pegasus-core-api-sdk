/* tslint:disable */
/* eslint-disable */
/**
 * Sofia Pegasus core-api
 * Api principal do sistema Pegasus para gerenciamento financeiro de pequenas e médias empresas.
 *
 * The version of the OpenAPI document: 1.7.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * Configurações do grupo.
 * @export
 * @interface CreateOrganizationRequestBodyDtoGroupSettings
 */
export interface CreateOrganizationRequestBodyDtoGroupSettings {
    /**
     * Compartilhamento de contatos.
     * @type {boolean}
     * @memberof CreateOrganizationRequestBodyDtoGroupSettings
     */
    sharedContacts: boolean;
    /**
     * Compartilhamento de tags.
     * @type {boolean}
     * @memberof CreateOrganizationRequestBodyDtoGroupSettings
     */
    sharedTags: boolean;
    /**
     * Compartilhamento de subcategorias.
     * @type {boolean}
     * @memberof CreateOrganizationRequestBodyDtoGroupSettings
     */
    sharedSubcategories: boolean;
}

/**
 * Check if a given object implements the CreateOrganizationRequestBodyDtoGroupSettings interface.
 */
export function instanceOfCreateOrganizationRequestBodyDtoGroupSettings(value: object): value is CreateOrganizationRequestBodyDtoGroupSettings {
    if (!('sharedContacts' in value) || value['sharedContacts'] === undefined) return false;
    if (!('sharedTags' in value) || value['sharedTags'] === undefined) return false;
    if (!('sharedSubcategories' in value) || value['sharedSubcategories'] === undefined) return false;
    return true;
}

export function CreateOrganizationRequestBodyDtoGroupSettingsFromJSON(json: any): CreateOrganizationRequestBodyDtoGroupSettings {
    return CreateOrganizationRequestBodyDtoGroupSettingsFromJSONTyped(json, false);
}

export function CreateOrganizationRequestBodyDtoGroupSettingsFromJSONTyped(json: any, ignoreDiscriminator: boolean): CreateOrganizationRequestBodyDtoGroupSettings {
    if (json == null) {
        return json;
    }
    return {
        
        'sharedContacts': json['sharedContacts'],
        'sharedTags': json['sharedTags'],
        'sharedSubcategories': json['sharedSubcategories'],
    };
}

export function CreateOrganizationRequestBodyDtoGroupSettingsToJSON(json: any): CreateOrganizationRequestBodyDtoGroupSettings {
    return CreateOrganizationRequestBodyDtoGroupSettingsToJSONTyped(json, false);
}

export function CreateOrganizationRequestBodyDtoGroupSettingsToJSONTyped(value?: CreateOrganizationRequestBodyDtoGroupSettings | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'sharedContacts': value['sharedContacts'],
        'sharedTags': value['sharedTags'],
        'sharedSubcategories': value['sharedSubcategories'],
    };
}

