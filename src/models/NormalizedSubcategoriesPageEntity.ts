/* tslint:disable */
/* eslint-disable */
/**
 * Sofia Pegasus core-api
 * Api principal do sistema Pegasus para gerenciamento financeiro de pequenas e m√©dias empresas.
 *
 * The version of the OpenAPI document: 1.1.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ContactsPageDtoPageInfo } from './ContactsPageDtoPageInfo';
import {
    ContactsPageDtoPageInfoFromJSON,
    ContactsPageDtoPageInfoFromJSONTyped,
    ContactsPageDtoPageInfoToJSON,
    ContactsPageDtoPageInfoToJSONTyped,
} from './ContactsPageDtoPageInfo';
import type { NormalizedSubcategoriesPageEntityItemsInner } from './NormalizedSubcategoriesPageEntityItemsInner';
import {
    NormalizedSubcategoriesPageEntityItemsInnerFromJSON,
    NormalizedSubcategoriesPageEntityItemsInnerFromJSONTyped,
    NormalizedSubcategoriesPageEntityItemsInnerToJSON,
    NormalizedSubcategoriesPageEntityItemsInnerToJSONTyped,
} from './NormalizedSubcategoriesPageEntityItemsInner';

/**
 * 
 * @export
 * @interface NormalizedSubcategoriesPageEntity
 */
export interface NormalizedSubcategoriesPageEntity {
    /**
     * 
     * @type {Array<NormalizedSubcategoriesPageEntityItemsInner>}
     * @memberof NormalizedSubcategoriesPageEntity
     */
    items: Array<NormalizedSubcategoriesPageEntityItemsInner>;
    /**
     * 
     * @type {ContactsPageDtoPageInfo}
     * @memberof NormalizedSubcategoriesPageEntity
     */
    pageInfo: ContactsPageDtoPageInfo;
}

/**
 * Check if a given object implements the NormalizedSubcategoriesPageEntity interface.
 */
export function instanceOfNormalizedSubcategoriesPageEntity(value: object): value is NormalizedSubcategoriesPageEntity {
    if (!('items' in value) || value['items'] === undefined) return false;
    if (!('pageInfo' in value) || value['pageInfo'] === undefined) return false;
    return true;
}

export function NormalizedSubcategoriesPageEntityFromJSON(json: any): NormalizedSubcategoriesPageEntity {
    return NormalizedSubcategoriesPageEntityFromJSONTyped(json, false);
}

export function NormalizedSubcategoriesPageEntityFromJSONTyped(json: any, ignoreDiscriminator: boolean): NormalizedSubcategoriesPageEntity {
    if (json == null) {
        return json;
    }
    return {
        
        'items': ((json['items'] as Array<any>).map(NormalizedSubcategoriesPageEntityItemsInnerFromJSON)),
        'pageInfo': ContactsPageDtoPageInfoFromJSON(json['pageInfo']),
    };
}

export function NormalizedSubcategoriesPageEntityToJSON(json: any): NormalizedSubcategoriesPageEntity {
    return NormalizedSubcategoriesPageEntityToJSONTyped(json, false);
}

export function NormalizedSubcategoriesPageEntityToJSONTyped(value?: NormalizedSubcategoriesPageEntity | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'items': ((value['items'] as Array<any>).map(NormalizedSubcategoriesPageEntityItemsInnerToJSON)),
        'pageInfo': ContactsPageDtoPageInfoToJSON(value['pageInfo']),
    };
}

