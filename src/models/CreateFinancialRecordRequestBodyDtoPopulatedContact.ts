/* tslint:disable */
/* eslint-disable */
/**
 * Sofia Pegasus core-api
 * Api principal do sistema Pegasus para gerenciamento financeiro de pequenas e médias empresas.
 *
 * The version of the OpenAPI document: 1.0.8
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { CreateContactRequestBodyDtoAddress } from './CreateContactRequestBodyDtoAddress';
import {
    CreateContactRequestBodyDtoAddressFromJSON,
    CreateContactRequestBodyDtoAddressFromJSONTyped,
    CreateContactRequestBodyDtoAddressToJSON,
    CreateContactRequestBodyDtoAddressToJSONTyped,
} from './CreateContactRequestBodyDtoAddress';

/**
 * Contato relacionado.
 * @export
 * @interface CreateFinancialRecordRequestBodyDtoPopulatedContact
 */
export interface CreateFinancialRecordRequestBodyDtoPopulatedContact {
    /**
     * Identificador do contato.
     * @type {string}
     * @memberof CreateFinancialRecordRequestBodyDtoPopulatedContact
     */
    id: string;
    /**
     * Identificador da organização dona do contato.
     * @type {string}
     * @memberof CreateFinancialRecordRequestBodyDtoPopulatedContact
     */
    ownerOrganization: string;
    /**
     * Nome do contato.
     * @type {string}
     * @memberof CreateFinancialRecordRequestBodyDtoPopulatedContact
     */
    name: string;
    /**
     * Tipos do contato.
     * @type {Array<string>}
     * @memberof CreateFinancialRecordRequestBodyDtoPopulatedContact
     */
    types: Array<CreateFinancialRecordRequestBodyDtoPopulatedContactTypesEnum>;
    /**
     * Tipo do documento do contato.
     * @type {string}
     * @memberof CreateFinancialRecordRequestBodyDtoPopulatedContact
     */
    documentType?: CreateFinancialRecordRequestBodyDtoPopulatedContactDocumentTypeEnum | null;
    /**
     * Documento do contato.
     * @type {string}
     * @memberof CreateFinancialRecordRequestBodyDtoPopulatedContact
     */
    document: string | null;
    /**
     * Email do contato.
     * @type {string}
     * @memberof CreateFinancialRecordRequestBodyDtoPopulatedContact
     */
    email: string | null;
    /**
     * Telefone do contato.
     * @type {string}
     * @memberof CreateFinancialRecordRequestBodyDtoPopulatedContact
     */
    phone: string | null;
    /**
     * Chaves pix do contato.
     * @type {Array<string>}
     * @memberof CreateFinancialRecordRequestBodyDtoPopulatedContact
     */
    pixKeys: Array<string>;
    /**
     * Data de nascimento do contato.
     * @type {any}
     * @memberof CreateFinancialRecordRequestBodyDtoPopulatedContact
     */
    birthDate?: any | null;
    /**
     * Origem do contato.
     * @type {string}
     * @memberof CreateFinancialRecordRequestBodyDtoPopulatedContact
     */
    origin?: CreateFinancialRecordRequestBodyDtoPopulatedContactOriginEnum | null;
    /**
     * 
     * @type {CreateContactRequestBodyDtoAddress}
     * @memberof CreateFinancialRecordRequestBodyDtoPopulatedContact
     */
    address?: CreateContactRequestBodyDtoAddress | null;
    /**
     * Indica se o contato é o contato não identificado.
     * @type {boolean}
     * @memberof CreateFinancialRecordRequestBodyDtoPopulatedContact
     */
    isNotIdentified: boolean;
    /**
     * Pontuação de busca do contato.
     * @type {number}
     * @memberof CreateFinancialRecordRequestBodyDtoPopulatedContact
     */
    searchScore?: number | null;
    /**
     * Data de criação do contato.
     * @type {any}
     * @memberof CreateFinancialRecordRequestBodyDtoPopulatedContact
     */
    createdAt: any | null;
    /**
     * Data de atualização do contato.
     * @type {any}
     * @memberof CreateFinancialRecordRequestBodyDtoPopulatedContact
     */
    updatedAt: any | null;
}


/**
 * @export
 */
export const CreateFinancialRecordRequestBodyDtoPopulatedContactTypesEnum = {
    Customer: 'CUSTOMER',
    Employee: 'EMPLOYEE',
    Supplier: 'SUPPLIER',
    Partner: 'PARTNER'
} as const;
export type CreateFinancialRecordRequestBodyDtoPopulatedContactTypesEnum = typeof CreateFinancialRecordRequestBodyDtoPopulatedContactTypesEnum[keyof typeof CreateFinancialRecordRequestBodyDtoPopulatedContactTypesEnum];

/**
 * @export
 */
export const CreateFinancialRecordRequestBodyDtoPopulatedContactDocumentTypeEnum = {
    Cnpj: 'CNPJ',
    Cpf: 'CPF'
} as const;
export type CreateFinancialRecordRequestBodyDtoPopulatedContactDocumentTypeEnum = typeof CreateFinancialRecordRequestBodyDtoPopulatedContactDocumentTypeEnum[keyof typeof CreateFinancialRecordRequestBodyDtoPopulatedContactDocumentTypeEnum];

/**
 * @export
 */
export const CreateFinancialRecordRequestBodyDtoPopulatedContactOriginEnum = {
    Indication: 'INDICATION',
    Ads: 'ADS',
    OrganicSearch: 'ORGANIC_SEARCH',
    SocialMedia: 'SOCIAL_MEDIA',
    Events: 'EVENTS',
    Partnerships: 'PARTNERSHIPS',
    PhysicalStore: 'PHYSICAL_STORE',
    Other: 'OTHER'
} as const;
export type CreateFinancialRecordRequestBodyDtoPopulatedContactOriginEnum = typeof CreateFinancialRecordRequestBodyDtoPopulatedContactOriginEnum[keyof typeof CreateFinancialRecordRequestBodyDtoPopulatedContactOriginEnum];


/**
 * Check if a given object implements the CreateFinancialRecordRequestBodyDtoPopulatedContact interface.
 */
export function instanceOfCreateFinancialRecordRequestBodyDtoPopulatedContact(value: object): value is CreateFinancialRecordRequestBodyDtoPopulatedContact {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('ownerOrganization' in value) || value['ownerOrganization'] === undefined) return false;
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('types' in value) || value['types'] === undefined) return false;
    if (!('document' in value) || value['document'] === undefined) return false;
    if (!('email' in value) || value['email'] === undefined) return false;
    if (!('phone' in value) || value['phone'] === undefined) return false;
    if (!('pixKeys' in value) || value['pixKeys'] === undefined) return false;
    if (!('isNotIdentified' in value) || value['isNotIdentified'] === undefined) return false;
    if (!('createdAt' in value) || value['createdAt'] === undefined) return false;
    if (!('updatedAt' in value) || value['updatedAt'] === undefined) return false;
    return true;
}

export function CreateFinancialRecordRequestBodyDtoPopulatedContactFromJSON(json: any): CreateFinancialRecordRequestBodyDtoPopulatedContact {
    return CreateFinancialRecordRequestBodyDtoPopulatedContactFromJSONTyped(json, false);
}

export function CreateFinancialRecordRequestBodyDtoPopulatedContactFromJSONTyped(json: any, ignoreDiscriminator: boolean): CreateFinancialRecordRequestBodyDtoPopulatedContact {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'ownerOrganization': json['ownerOrganization'],
        'name': json['name'],
        'types': json['types'],
        'documentType': json['documentType'] == null ? undefined : json['documentType'],
        'document': json['document'],
        'email': json['email'],
        'phone': json['phone'],
        'pixKeys': json['pixKeys'],
        'birthDate': json['birthDate'] == null ? undefined : json['birthDate'],
        'origin': json['origin'] == null ? undefined : json['origin'],
        'address': json['address'] == null ? undefined : CreateContactRequestBodyDtoAddressFromJSON(json['address']),
        'isNotIdentified': json['isNotIdentified'],
        'searchScore': json['searchScore'] == null ? undefined : json['searchScore'],
        'createdAt': json['createdAt'],
        'updatedAt': json['updatedAt'],
    };
}

export function CreateFinancialRecordRequestBodyDtoPopulatedContactToJSON(json: any): CreateFinancialRecordRequestBodyDtoPopulatedContact {
    return CreateFinancialRecordRequestBodyDtoPopulatedContactToJSONTyped(json, false);
}

export function CreateFinancialRecordRequestBodyDtoPopulatedContactToJSONTyped(value?: CreateFinancialRecordRequestBodyDtoPopulatedContact | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'ownerOrganization': value['ownerOrganization'],
        'name': value['name'],
        'types': value['types'],
        'documentType': value['documentType'],
        'document': value['document'],
        'email': value['email'],
        'phone': value['phone'],
        'pixKeys': value['pixKeys'],
        'birthDate': value['birthDate'],
        'origin': value['origin'],
        'address': CreateContactRequestBodyDtoAddressToJSON(value['address']),
        'isNotIdentified': value['isNotIdentified'],
        'searchScore': value['searchScore'],
        'createdAt': value['createdAt'],
        'updatedAt': value['updatedAt'],
    };
}

