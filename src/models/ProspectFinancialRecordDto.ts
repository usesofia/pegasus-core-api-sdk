/* tslint:disable */
/* eslint-disable */
/**
 * Sofia Pegasus core-api
 * Api principal do sistema Pegasus para gerenciamento financeiro de pequenas e médias empresas.
 *
 * The version of the OpenAPI document: 1.0.8
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { CreateFinancialRecordRequestBodyDtoPopulatedFilesInner } from './CreateFinancialRecordRequestBodyDtoPopulatedFilesInner';
import {
    CreateFinancialRecordRequestBodyDtoPopulatedFilesInnerFromJSON,
    CreateFinancialRecordRequestBodyDtoPopulatedFilesInnerFromJSONTyped,
    CreateFinancialRecordRequestBodyDtoPopulatedFilesInnerToJSON,
    CreateFinancialRecordRequestBodyDtoPopulatedFilesInnerToJSONTyped,
} from './CreateFinancialRecordRequestBodyDtoPopulatedFilesInner';
import type { CreateFinancialRecordRequestBodyDtoPopulatedAccount } from './CreateFinancialRecordRequestBodyDtoPopulatedAccount';
import {
    CreateFinancialRecordRequestBodyDtoPopulatedAccountFromJSON,
    CreateFinancialRecordRequestBodyDtoPopulatedAccountFromJSONTyped,
    CreateFinancialRecordRequestBodyDtoPopulatedAccountToJSON,
    CreateFinancialRecordRequestBodyDtoPopulatedAccountToJSONTyped,
} from './CreateFinancialRecordRequestBodyDtoPopulatedAccount';
import type { CreateFinancialRecordRequestBodyDtoPopulatedTagsInner } from './CreateFinancialRecordRequestBodyDtoPopulatedTagsInner';
import {
    CreateFinancialRecordRequestBodyDtoPopulatedTagsInnerFromJSON,
    CreateFinancialRecordRequestBodyDtoPopulatedTagsInnerFromJSONTyped,
    CreateFinancialRecordRequestBodyDtoPopulatedTagsInnerToJSON,
    CreateFinancialRecordRequestBodyDtoPopulatedTagsInnerToJSONTyped,
} from './CreateFinancialRecordRequestBodyDtoPopulatedTagsInner';
import type { CreateFinancialRecordRequestBodyDtoPopulatedSubcategory } from './CreateFinancialRecordRequestBodyDtoPopulatedSubcategory';
import {
    CreateFinancialRecordRequestBodyDtoPopulatedSubcategoryFromJSON,
    CreateFinancialRecordRequestBodyDtoPopulatedSubcategoryFromJSONTyped,
    CreateFinancialRecordRequestBodyDtoPopulatedSubcategoryToJSON,
    CreateFinancialRecordRequestBodyDtoPopulatedSubcategoryToJSONTyped,
} from './CreateFinancialRecordRequestBodyDtoPopulatedSubcategory';
import type { CreateFinancialRecordRequestBodyDtoPopulatedContact } from './CreateFinancialRecordRequestBodyDtoPopulatedContact';
import {
    CreateFinancialRecordRequestBodyDtoPopulatedContactFromJSON,
    CreateFinancialRecordRequestBodyDtoPopulatedContactFromJSONTyped,
    CreateFinancialRecordRequestBodyDtoPopulatedContactToJSON,
    CreateFinancialRecordRequestBodyDtoPopulatedContactToJSONTyped,
} from './CreateFinancialRecordRequestBodyDtoPopulatedContact';

/**
 * 
 * @export
 * @interface ProspectFinancialRecordDto
 */
export interface ProspectFinancialRecordDto {
    /**
     * Direção do lançamento (entrada/saída).
     * @type {string}
     * @memberof ProspectFinancialRecordDto
     */
    direction: ProspectFinancialRecordDtoDirectionEnum;
    /**
     * Data de vencimento.
     * @type {any}
     * @memberof ProspectFinancialRecordDto
     */
    dueDate: any | null;
    /**
     * Identificador do contato relacionado.
     * @type {string}
     * @memberof ProspectFinancialRecordDto
     */
    contact?: string;
    /**
     * Descrição do lançamento.
     * @type {string}
     * @memberof ProspectFinancialRecordDto
     */
    description: string;
    /**
     * Identificador da subcategoria.
     * @type {string}
     * @memberof ProspectFinancialRecordDto
     */
    subcategory: string;
    /**
     * 
     * @type {string}
     * @memberof ProspectFinancialRecordDto
     */
    amount?: string | null;
    /**
     * Tags relacionadas.
     * @type {Array<string>}
     * @memberof ProspectFinancialRecordDto
     */
    tags?: Array<string>;
    /**
     * Data de competência.
     * @type {any}
     * @memberof ProspectFinancialRecordDto
     */
    competenceDate?: any | null;
    /**
     * Arquivos anexados.
     * @type {Array<string>}
     * @memberof ProspectFinancialRecordDto
     */
    files?: Array<string>;
    /**
     * Caixas de entrada relacionadas.
     * @type {Array<string>}
     * @memberof ProspectFinancialRecordDto
     */
    inbox?: Array<string>;
    /**
     * Chave PIX.
     * @type {string}
     * @memberof ProspectFinancialRecordDto
     */
    pixKey?: string;
    /**
     * Código do boleto.
     * @type {string}
     * @memberof ProspectFinancialRecordDto
     */
    boletoCode?: string;
    /**
     * Número da nota fiscal.
     * @type {string}
     * @memberof ProspectFinancialRecordDto
     */
    invoiceNumber?: string;
    /**
     * Indica se o lançamento foi concluído.
     * @type {boolean}
     * @memberof ProspectFinancialRecordDto
     */
    completed?: boolean;
    /**
     * Data de pagamento.
     * @type {any}
     * @memberof ProspectFinancialRecordDto
     */
    cashDate?: any | null;
    /**
     * Identificador da conta.
     * @type {string}
     * @memberof ProspectFinancialRecordDto
     */
    account?: string;
    /**
     * 
     * @type {string}
     * @memberof ProspectFinancialRecordDto
     */
    discount?: string | null;
    /**
     * 
     * @type {string}
     * @memberof ProspectFinancialRecordDto
     */
    finesAndInterest?: string | null;
    /**
     * 
     * @type {string}
     * @memberof ProspectFinancialRecordDto
     */
    finalAmount?: string | null;
    /**
     * Indica se foi reconciliado.
     * @type {boolean}
     * @memberof ProspectFinancialRecordDto
     */
    reconciled?: boolean;
    /**
     * Identificador do extrato bancário.
     * @type {string}
     * @memberof ProspectFinancialRecordDto
     */
    bankStatement?: string;
    /**
     * Identificador do lançamento financeiro parcelado.
     * @type {string}
     * @memberof ProspectFinancialRecordDto
     */
    installmentFinancialRecord?: string;
    /**
     * Identificador do lançamento financeiro recorrente.
     * @type {string}
     * @memberof ProspectFinancialRecordDto
     */
    recurringFinancialRecord?: string;
    /**
     * Arquivos anexados.
     * @type {Array<CreateFinancialRecordRequestBodyDtoPopulatedFilesInner>}
     * @memberof ProspectFinancialRecordDto
     */
    populatedFiles?: Array<CreateFinancialRecordRequestBodyDtoPopulatedFilesInner>;
    /**
     * 
     * @type {CreateFinancialRecordRequestBodyDtoPopulatedSubcategory}
     * @memberof ProspectFinancialRecordDto
     */
    populatedSubcategory?: CreateFinancialRecordRequestBodyDtoPopulatedSubcategory | null;
    /**
     * 
     * @type {CreateFinancialRecordRequestBodyDtoPopulatedContact}
     * @memberof ProspectFinancialRecordDto
     */
    populatedContact?: CreateFinancialRecordRequestBodyDtoPopulatedContact | null;
    /**
     * Tags relacionadas.
     * @type {Array<CreateFinancialRecordRequestBodyDtoPopulatedTagsInner>}
     * @memberof ProspectFinancialRecordDto
     */
    populatedTags?: Array<CreateFinancialRecordRequestBodyDtoPopulatedTagsInner>;
    /**
     * 
     * @type {CreateFinancialRecordRequestBodyDtoPopulatedAccount}
     * @memberof ProspectFinancialRecordDto
     */
    populatedAccount?: CreateFinancialRecordRequestBodyDtoPopulatedAccount | null;
}


/**
 * @export
 */
export const ProspectFinancialRecordDtoDirectionEnum = {
    Income: 'INCOME',
    Outcome: 'OUTCOME'
} as const;
export type ProspectFinancialRecordDtoDirectionEnum = typeof ProspectFinancialRecordDtoDirectionEnum[keyof typeof ProspectFinancialRecordDtoDirectionEnum];


/**
 * Check if a given object implements the ProspectFinancialRecordDto interface.
 */
export function instanceOfProspectFinancialRecordDto(value: object): value is ProspectFinancialRecordDto {
    if (!('direction' in value) || value['direction'] === undefined) return false;
    if (!('dueDate' in value) || value['dueDate'] === undefined) return false;
    if (!('description' in value) || value['description'] === undefined) return false;
    if (!('subcategory' in value) || value['subcategory'] === undefined) return false;
    return true;
}

export function ProspectFinancialRecordDtoFromJSON(json: any): ProspectFinancialRecordDto {
    return ProspectFinancialRecordDtoFromJSONTyped(json, false);
}

export function ProspectFinancialRecordDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): ProspectFinancialRecordDto {
    if (json == null) {
        return json;
    }
    return {
        
        'direction': json['direction'],
        'dueDate': json['dueDate'],
        'contact': json['contact'] == null ? undefined : json['contact'],
        'description': json['description'],
        'subcategory': json['subcategory'],
        'amount': json['amount'] == null ? undefined : json['amount'],
        'tags': json['tags'] == null ? undefined : json['tags'],
        'competenceDate': json['competenceDate'] == null ? undefined : json['competenceDate'],
        'files': json['files'] == null ? undefined : json['files'],
        'inbox': json['inbox'] == null ? undefined : json['inbox'],
        'pixKey': json['pixKey'] == null ? undefined : json['pixKey'],
        'boletoCode': json['boletoCode'] == null ? undefined : json['boletoCode'],
        'invoiceNumber': json['invoiceNumber'] == null ? undefined : json['invoiceNumber'],
        'completed': json['completed'] == null ? undefined : json['completed'],
        'cashDate': json['cashDate'] == null ? undefined : json['cashDate'],
        'account': json['account'] == null ? undefined : json['account'],
        'discount': json['discount'] == null ? undefined : json['discount'],
        'finesAndInterest': json['finesAndInterest'] == null ? undefined : json['finesAndInterest'],
        'finalAmount': json['finalAmount'] == null ? undefined : json['finalAmount'],
        'reconciled': json['reconciled'] == null ? undefined : json['reconciled'],
        'bankStatement': json['bankStatement'] == null ? undefined : json['bankStatement'],
        'installmentFinancialRecord': json['installmentFinancialRecord'] == null ? undefined : json['installmentFinancialRecord'],
        'recurringFinancialRecord': json['recurringFinancialRecord'] == null ? undefined : json['recurringFinancialRecord'],
        'populatedFiles': json['populatedFiles'] == null ? undefined : ((json['populatedFiles'] as Array<any>).map(CreateFinancialRecordRequestBodyDtoPopulatedFilesInnerFromJSON)),
        'populatedSubcategory': json['populatedSubcategory'] == null ? undefined : CreateFinancialRecordRequestBodyDtoPopulatedSubcategoryFromJSON(json['populatedSubcategory']),
        'populatedContact': json['populatedContact'] == null ? undefined : CreateFinancialRecordRequestBodyDtoPopulatedContactFromJSON(json['populatedContact']),
        'populatedTags': json['populatedTags'] == null ? undefined : ((json['populatedTags'] as Array<any>).map(CreateFinancialRecordRequestBodyDtoPopulatedTagsInnerFromJSON)),
        'populatedAccount': json['populatedAccount'] == null ? undefined : CreateFinancialRecordRequestBodyDtoPopulatedAccountFromJSON(json['populatedAccount']),
    };
}

export function ProspectFinancialRecordDtoToJSON(json: any): ProspectFinancialRecordDto {
    return ProspectFinancialRecordDtoToJSONTyped(json, false);
}

export function ProspectFinancialRecordDtoToJSONTyped(value?: ProspectFinancialRecordDto | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'direction': value['direction'],
        'dueDate': value['dueDate'],
        'contact': value['contact'],
        'description': value['description'],
        'subcategory': value['subcategory'],
        'amount': value['amount'],
        'tags': value['tags'],
        'competenceDate': value['competenceDate'],
        'files': value['files'],
        'inbox': value['inbox'],
        'pixKey': value['pixKey'],
        'boletoCode': value['boletoCode'],
        'invoiceNumber': value['invoiceNumber'],
        'completed': value['completed'],
        'cashDate': value['cashDate'],
        'account': value['account'],
        'discount': value['discount'],
        'finesAndInterest': value['finesAndInterest'],
        'finalAmount': value['finalAmount'],
        'reconciled': value['reconciled'],
        'bankStatement': value['bankStatement'],
        'installmentFinancialRecord': value['installmentFinancialRecord'],
        'recurringFinancialRecord': value['recurringFinancialRecord'],
        'populatedFiles': value['populatedFiles'] == null ? undefined : ((value['populatedFiles'] as Array<any>).map(CreateFinancialRecordRequestBodyDtoPopulatedFilesInnerToJSON)),
        'populatedSubcategory': CreateFinancialRecordRequestBodyDtoPopulatedSubcategoryToJSON(value['populatedSubcategory']),
        'populatedContact': CreateFinancialRecordRequestBodyDtoPopulatedContactToJSON(value['populatedContact']),
        'populatedTags': value['populatedTags'] == null ? undefined : ((value['populatedTags'] as Array<any>).map(CreateFinancialRecordRequestBodyDtoPopulatedTagsInnerToJSON)),
        'populatedAccount': CreateFinancialRecordRequestBodyDtoPopulatedAccountToJSON(value['populatedAccount']),
    };
}

