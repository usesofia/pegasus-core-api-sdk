/* tslint:disable */
/* eslint-disable */
/**
 * Sofia Pegasus core-api
 * Api principal do sistema Pegasus para gerenciamento financeiro de pequenas e m√©dias empresas.
 *
 * The version of the OpenAPI document: 1.9.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface InviteEntity
 */
export interface InviteEntity {
    /**
     * 
     * @type {string}
     * @memberof InviteEntity
     */
    id: string;
    /**
     * 
     * @type {string}
     * @memberof InviteEntity
     */
    email: string;
    /**
     * 
     * @type {string}
     * @memberof InviteEntity
     */
    role: InviteEntityRoleEnum;
    /**
     * 
     * @type {string}
     * @memberof InviteEntity
     */
    status: InviteEntityStatusEnum;
    /**
     * 
     * @type {string}
     * @memberof InviteEntity
     */
    createdAt: string;
    /**
     * 
     * @type {string}
     * @memberof InviteEntity
     */
    updatedAt: string;
}


/**
 * @export
 */
export const InviteEntityRoleEnum = {
    OrgAdmin: 'org:admin',
    OrgMember: 'org:member'
} as const;
export type InviteEntityRoleEnum = typeof InviteEntityRoleEnum[keyof typeof InviteEntityRoleEnum];

/**
 * @export
 */
export const InviteEntityStatusEnum = {
    Pending: 'pending',
    Accepted: 'accepted',
    Revoked: 'revoked'
} as const;
export type InviteEntityStatusEnum = typeof InviteEntityStatusEnum[keyof typeof InviteEntityStatusEnum];


/**
 * Check if a given object implements the InviteEntity interface.
 */
export function instanceOfInviteEntity(value: object): value is InviteEntity {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('email' in value) || value['email'] === undefined) return false;
    if (!('role' in value) || value['role'] === undefined) return false;
    if (!('status' in value) || value['status'] === undefined) return false;
    if (!('createdAt' in value) || value['createdAt'] === undefined) return false;
    if (!('updatedAt' in value) || value['updatedAt'] === undefined) return false;
    return true;
}

export function InviteEntityFromJSON(json: any): InviteEntity {
    return InviteEntityFromJSONTyped(json, false);
}

export function InviteEntityFromJSONTyped(json: any, ignoreDiscriminator: boolean): InviteEntity {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'email': json['email'],
        'role': json['role'],
        'status': json['status'],
        'createdAt': json['createdAt'],
        'updatedAt': json['updatedAt'],
    };
}

export function InviteEntityToJSON(json: any): InviteEntity {
    return InviteEntityToJSONTyped(json, false);
}

export function InviteEntityToJSONTyped(value?: InviteEntity | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'email': value['email'],
        'role': value['role'],
        'status': value['status'],
        'createdAt': value['createdAt'],
        'updatedAt': value['updatedAt'],
    };
}

