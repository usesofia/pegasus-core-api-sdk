/* tslint:disable */
/* eslint-disable */
/**
 * Sofia Pegasus core-api
 * Api principal do sistema Pegasus para gerenciamento financeiro de pequenas e médias empresas.
 *
 * The version of the OpenAPI document: 1.11.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface BulkRemoveJobRequestEntity
 */
export interface BulkRemoveJobRequestEntity {
    /**
     * Identificador da solicitação de remoção.
     * @type {string}
     * @memberof BulkRemoveJobRequestEntity
     */
    id: string;
    /**
     * Recurso a ser removido.
     * @type {string}
     * @memberof BulkRemoveJobRequestEntity
     */
    resource: BulkRemoveJobRequestEntityResourceEnum;
    /**
     * Identificadores dos recursos a serem removidos.
     * @type {Array<string>}
     * @memberof BulkRemoveJobRequestEntity
     */
    ids: Array<string>;
    /**
     * Identificador do usuário que solicitou a remoção.
     * @type {string}
     * @memberof BulkRemoveJobRequestEntity
     */
    requesterUserId: string;
    /**
     * Data de criação da solicitação de remoção.
     * @type {any}
     * @memberof BulkRemoveJobRequestEntity
     */
    createdAt: any | null;
    /**
     * Data de atualização da solicitação de remoção.
     * @type {any}
     * @memberof BulkRemoveJobRequestEntity
     */
    updatedAt: any | null;
    /**
     * Data de exclusão da solicitação de remoção.
     * @type {any}
     * @memberof BulkRemoveJobRequestEntity
     */
    deletedAt: any | null;
}


/**
 * @export
 */
export const BulkRemoveJobRequestEntityResourceEnum = {
    FinancialRecords: 'FinancialRecords',
    Contacts: 'Contacts',
    BankAccounts: 'BankAccounts',
    BankTransactions: 'BankTransactions',
    InstallmentFinancialRecords: 'InstallmentFinancialRecords',
    RecurringFinancialRecords: 'RecurringFinancialRecords',
    Tags: 'Tags',
    Subcategories: 'Subcategories'
} as const;
export type BulkRemoveJobRequestEntityResourceEnum = typeof BulkRemoveJobRequestEntityResourceEnum[keyof typeof BulkRemoveJobRequestEntityResourceEnum];


/**
 * Check if a given object implements the BulkRemoveJobRequestEntity interface.
 */
export function instanceOfBulkRemoveJobRequestEntity(value: object): value is BulkRemoveJobRequestEntity {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('resource' in value) || value['resource'] === undefined) return false;
    if (!('ids' in value) || value['ids'] === undefined) return false;
    if (!('requesterUserId' in value) || value['requesterUserId'] === undefined) return false;
    if (!('createdAt' in value) || value['createdAt'] === undefined) return false;
    if (!('updatedAt' in value) || value['updatedAt'] === undefined) return false;
    if (!('deletedAt' in value) || value['deletedAt'] === undefined) return false;
    return true;
}

export function BulkRemoveJobRequestEntityFromJSON(json: any): BulkRemoveJobRequestEntity {
    return BulkRemoveJobRequestEntityFromJSONTyped(json, false);
}

export function BulkRemoveJobRequestEntityFromJSONTyped(json: any, ignoreDiscriminator: boolean): BulkRemoveJobRequestEntity {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'resource': json['resource'],
        'ids': json['ids'],
        'requesterUserId': json['requesterUserId'],
        'createdAt': json['createdAt'],
        'updatedAt': json['updatedAt'],
        'deletedAt': json['deletedAt'],
    };
}

export function BulkRemoveJobRequestEntityToJSON(json: any): BulkRemoveJobRequestEntity {
    return BulkRemoveJobRequestEntityToJSONTyped(json, false);
}

export function BulkRemoveJobRequestEntityToJSONTyped(value?: BulkRemoveJobRequestEntity | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'resource': value['resource'],
        'ids': value['ids'],
        'requesterUserId': value['requesterUserId'],
        'createdAt': value['createdAt'],
        'updatedAt': value['updatedAt'],
        'deletedAt': value['deletedAt'],
    };
}

