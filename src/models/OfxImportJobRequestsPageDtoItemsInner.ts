/* tslint:disable */
/* eslint-disable */
/**
 * Sofia Pegasus core-api
 * Api principal do sistema Pegasus para gerenciamento financeiro de pequenas e médias empresas.
 *
 * The version of the OpenAPI document: 1.12.11
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { OfxImportJobRequestsPageDtoItemsInnerPopulatedBankAccount } from './OfxImportJobRequestsPageDtoItemsInnerPopulatedBankAccount';
import {
    OfxImportJobRequestsPageDtoItemsInnerPopulatedBankAccountFromJSON,
    OfxImportJobRequestsPageDtoItemsInnerPopulatedBankAccountFromJSONTyped,
    OfxImportJobRequestsPageDtoItemsInnerPopulatedBankAccountToJSON,
    OfxImportJobRequestsPageDtoItemsInnerPopulatedBankAccountToJSONTyped,
} from './OfxImportJobRequestsPageDtoItemsInnerPopulatedBankAccount';
import type { OfxImportJobRequestsPageDtoItemsInnerExecutionsInner } from './OfxImportJobRequestsPageDtoItemsInnerExecutionsInner';
import {
    OfxImportJobRequestsPageDtoItemsInnerExecutionsInnerFromJSON,
    OfxImportJobRequestsPageDtoItemsInnerExecutionsInnerFromJSONTyped,
    OfxImportJobRequestsPageDtoItemsInnerExecutionsInnerToJSON,
    OfxImportJobRequestsPageDtoItemsInnerExecutionsInnerToJSONTyped,
} from './OfxImportJobRequestsPageDtoItemsInnerExecutionsInner';
import type { OfxImportJobRequestsPageDtoItemsInnerUser } from './OfxImportJobRequestsPageDtoItemsInnerUser';
import {
    OfxImportJobRequestsPageDtoItemsInnerUserFromJSON,
    OfxImportJobRequestsPageDtoItemsInnerUserFromJSONTyped,
    OfxImportJobRequestsPageDtoItemsInnerUserToJSON,
    OfxImportJobRequestsPageDtoItemsInnerUserToJSONTyped,
} from './OfxImportJobRequestsPageDtoItemsInnerUser';

/**
 * 
 * @export
 * @interface OfxImportJobRequestsPageDtoItemsInner
 */
export interface OfxImportJobRequestsPageDtoItemsInner {
    /**
     * Identificador da solicitação de importação OFX.
     * @type {string}
     * @memberof OfxImportJobRequestsPageDtoItemsInner
     */
    id: string;
    /**
     * Identificador da conta bancária.
     * @type {string}
     * @memberof OfxImportJobRequestsPageDtoItemsInner
     */
    bankAccountId: string;
    /**
     * Nome da conta bancária.
     * @type {string}
     * @memberof OfxImportJobRequestsPageDtoItemsInner
     */
    bankAccountName: string;
    /**
     * Nome do arquivo OFX.
     * @type {string}
     * @memberof OfxImportJobRequestsPageDtoItemsInner
     */
    fileName: string;
    /**
     * Identificador do usuário que solicitou a importação.
     * @type {string}
     * @memberof OfxImportJobRequestsPageDtoItemsInner
     */
    requesterUserId: string;
    /**
     * Número total de transações no arquivo OFX.
     * @type {number}
     * @memberof OfxImportJobRequestsPageDtoItemsInner
     */
    totalTransactions?: number | null;
    /**
     * Data da transação mais antiga no arquivo OFX.
     * @type {any}
     * @memberof OfxImportJobRequestsPageDtoItemsInner
     */
    periodStartDate?: any | null;
    /**
     * Data da transação mais recente no arquivo OFX.
     * @type {any}
     * @memberof OfxImportJobRequestsPageDtoItemsInner
     */
    periodEndDate?: any | null;
    /**
     * Data de criação da solicitação de importação.
     * @type {any}
     * @memberof OfxImportJobRequestsPageDtoItemsInner
     */
    createdAt: any | null;
    /**
     * Data de atualização da solicitação de importação.
     * @type {any}
     * @memberof OfxImportJobRequestsPageDtoItemsInner
     */
    updatedAt: any | null;
    /**
     * Lista de execuções para esta solicitação de importação.
     * @type {Array<OfxImportJobRequestsPageDtoItemsInnerExecutionsInner>}
     * @memberof OfxImportJobRequestsPageDtoItemsInner
     */
    executions: Array<OfxImportJobRequestsPageDtoItemsInnerExecutionsInner>;
    /**
     * Número máximo de transações importadas com sucesso em uma única execução.
     * @type {number}
     * @memberof OfxImportJobRequestsPageDtoItemsInner
     */
    nSuccessImportedTransactions?: number | null;
    /**
     * 
     * @type {OfxImportJobRequestsPageDtoItemsInnerUser}
     * @memberof OfxImportJobRequestsPageDtoItemsInner
     */
    user: OfxImportJobRequestsPageDtoItemsInnerUser;
    /**
     * Status da solicitação de importação OFX.
     * @type {string}
     * @memberof OfxImportJobRequestsPageDtoItemsInner
     */
    status: OfxImportJobRequestsPageDtoItemsInnerStatusEnum;
    /**
     * 
     * @type {OfxImportJobRequestsPageDtoItemsInnerPopulatedBankAccount}
     * @memberof OfxImportJobRequestsPageDtoItemsInner
     */
    populatedBankAccount: OfxImportJobRequestsPageDtoItemsInnerPopulatedBankAccount;
}


/**
 * @export
 */
export const OfxImportJobRequestsPageDtoItemsInnerStatusEnum = {
    Pending: 'PENDING',
    Processing: 'PROCESSING',
    Finished: 'FINISHED'
} as const;
export type OfxImportJobRequestsPageDtoItemsInnerStatusEnum = typeof OfxImportJobRequestsPageDtoItemsInnerStatusEnum[keyof typeof OfxImportJobRequestsPageDtoItemsInnerStatusEnum];


/**
 * Check if a given object implements the OfxImportJobRequestsPageDtoItemsInner interface.
 */
export function instanceOfOfxImportJobRequestsPageDtoItemsInner(value: object): value is OfxImportJobRequestsPageDtoItemsInner {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('bankAccountId' in value) || value['bankAccountId'] === undefined) return false;
    if (!('bankAccountName' in value) || value['bankAccountName'] === undefined) return false;
    if (!('fileName' in value) || value['fileName'] === undefined) return false;
    if (!('requesterUserId' in value) || value['requesterUserId'] === undefined) return false;
    if (!('createdAt' in value) || value['createdAt'] === undefined) return false;
    if (!('updatedAt' in value) || value['updatedAt'] === undefined) return false;
    if (!('executions' in value) || value['executions'] === undefined) return false;
    if (!('user' in value) || value['user'] === undefined) return false;
    if (!('status' in value) || value['status'] === undefined) return false;
    if (!('populatedBankAccount' in value) || value['populatedBankAccount'] === undefined) return false;
    return true;
}

export function OfxImportJobRequestsPageDtoItemsInnerFromJSON(json: any): OfxImportJobRequestsPageDtoItemsInner {
    return OfxImportJobRequestsPageDtoItemsInnerFromJSONTyped(json, false);
}

export function OfxImportJobRequestsPageDtoItemsInnerFromJSONTyped(json: any, ignoreDiscriminator: boolean): OfxImportJobRequestsPageDtoItemsInner {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'bankAccountId': json['bankAccountId'],
        'bankAccountName': json['bankAccountName'],
        'fileName': json['fileName'],
        'requesterUserId': json['requesterUserId'],
        'totalTransactions': json['totalTransactions'] == null ? undefined : json['totalTransactions'],
        'periodStartDate': json['periodStartDate'] == null ? undefined : json['periodStartDate'],
        'periodEndDate': json['periodEndDate'] == null ? undefined : json['periodEndDate'],
        'createdAt': json['createdAt'],
        'updatedAt': json['updatedAt'],
        'executions': ((json['executions'] as Array<any>).map(OfxImportJobRequestsPageDtoItemsInnerExecutionsInnerFromJSON)),
        'nSuccessImportedTransactions': json['nSuccessImportedTransactions'] == null ? undefined : json['nSuccessImportedTransactions'],
        'user': OfxImportJobRequestsPageDtoItemsInnerUserFromJSON(json['user']),
        'status': json['status'],
        'populatedBankAccount': OfxImportJobRequestsPageDtoItemsInnerPopulatedBankAccountFromJSON(json['populatedBankAccount']),
    };
}

export function OfxImportJobRequestsPageDtoItemsInnerToJSON(json: any): OfxImportJobRequestsPageDtoItemsInner {
    return OfxImportJobRequestsPageDtoItemsInnerToJSONTyped(json, false);
}

export function OfxImportJobRequestsPageDtoItemsInnerToJSONTyped(value?: OfxImportJobRequestsPageDtoItemsInner | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'bankAccountId': value['bankAccountId'],
        'bankAccountName': value['bankAccountName'],
        'fileName': value['fileName'],
        'requesterUserId': value['requesterUserId'],
        'totalTransactions': value['totalTransactions'],
        'periodStartDate': value['periodStartDate'],
        'periodEndDate': value['periodEndDate'],
        'createdAt': value['createdAt'],
        'updatedAt': value['updatedAt'],
        'executions': ((value['executions'] as Array<any>).map(OfxImportJobRequestsPageDtoItemsInnerExecutionsInnerToJSON)),
        'nSuccessImportedTransactions': value['nSuccessImportedTransactions'],
        'user': OfxImportJobRequestsPageDtoItemsInnerUserToJSON(value['user']),
        'status': value['status'],
        'populatedBankAccount': OfxImportJobRequestsPageDtoItemsInnerPopulatedBankAccountToJSON(value['populatedBankAccount']),
    };
}

