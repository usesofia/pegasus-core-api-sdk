/* tslint:disable */
/* eslint-disable */
/**
 * Sofia Pegasus core-api
 * Api principal do sistema Pegasus para gerenciamento financeiro de pequenas e médias empresas.
 *
 * The version of the OpenAPI document: 1.12.11
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { CreateContactRequestBodyDtoAddress } from './CreateContactRequestBodyDtoAddress';
import {
    CreateContactRequestBodyDtoAddressFromJSON,
    CreateContactRequestBodyDtoAddressFromJSONTyped,
    CreateContactRequestBodyDtoAddressToJSON,
    CreateContactRequestBodyDtoAddressToJSONTyped,
} from './CreateContactRequestBodyDtoAddress';

/**
 * 
 * @export
 * @interface CreateContactRequestBodyDto
 */
export interface CreateContactRequestBodyDto {
    /**
     * Nome do contato.
     * @type {string}
     * @memberof CreateContactRequestBodyDto
     */
    name: string;
    /**
     * Tipos do contato.
     * @type {Array<string>}
     * @memberof CreateContactRequestBodyDto
     */
    types: Array<CreateContactRequestBodyDtoTypesEnum>;
    /**
     * Tipo do documento do contato.
     * @type {string}
     * @memberof CreateContactRequestBodyDto
     */
    documentType?: CreateContactRequestBodyDtoDocumentTypeEnum | null;
    /**
     * Documento do contato.
     * @type {string}
     * @memberof CreateContactRequestBodyDto
     */
    document: string | null;
    /**
     * Email do contato.
     * @type {string}
     * @memberof CreateContactRequestBodyDto
     */
    email: string | null;
    /**
     * Telefone do contato.
     * @type {string}
     * @memberof CreateContactRequestBodyDto
     */
    phone: string | null;
    /**
     * Chaves pix do contato.
     * @type {Array<string>}
     * @memberof CreateContactRequestBodyDto
     */
    pixKeys: Array<string>;
    /**
     * Data de nascimento do contato.
     * @type {string}
     * @memberof CreateContactRequestBodyDto
     */
    birthDate?: string | null;
    /**
     * Origem do contato.
     * @type {string}
     * @memberof CreateContactRequestBodyDto
     */
    origin?: CreateContactRequestBodyDtoOriginEnum | null;
    /**
     * 
     * @type {CreateContactRequestBodyDtoAddress}
     * @memberof CreateContactRequestBodyDto
     */
    address?: CreateContactRequestBodyDtoAddress | null;
    /**
     * Pontuação de busca do contato.
     * @type {number}
     * @memberof CreateContactRequestBodyDto
     */
    searchScore?: number | null;
    /**
     * Canal de origem da operação
     * @type {string}
     * @memberof CreateContactRequestBodyDto
     */
    channel: CreateContactRequestBodyDtoChannelEnum;
}


/**
 * @export
 */
export const CreateContactRequestBodyDtoTypesEnum = {
    Customer: 'CUSTOMER',
    Employee: 'EMPLOYEE',
    Supplier: 'SUPPLIER',
    Partner: 'PARTNER'
} as const;
export type CreateContactRequestBodyDtoTypesEnum = typeof CreateContactRequestBodyDtoTypesEnum[keyof typeof CreateContactRequestBodyDtoTypesEnum];

/**
 * @export
 */
export const CreateContactRequestBodyDtoDocumentTypeEnum = {
    Cnpj: 'CNPJ',
    Cpf: 'CPF'
} as const;
export type CreateContactRequestBodyDtoDocumentTypeEnum = typeof CreateContactRequestBodyDtoDocumentTypeEnum[keyof typeof CreateContactRequestBodyDtoDocumentTypeEnum];

/**
 * @export
 */
export const CreateContactRequestBodyDtoOriginEnum = {
    Indication: 'INDICATION',
    Ads: 'ADS',
    OrganicSearch: 'ORGANIC_SEARCH',
    SocialMedia: 'SOCIAL_MEDIA',
    Events: 'EVENTS',
    Partnerships: 'PARTNERSHIPS',
    PhysicalStore: 'PHYSICAL_STORE',
    Other: 'OTHER'
} as const;
export type CreateContactRequestBodyDtoOriginEnum = typeof CreateContactRequestBodyDtoOriginEnum[keyof typeof CreateContactRequestBodyDtoOriginEnum];

/**
 * @export
 */
export const CreateContactRequestBodyDtoChannelEnum = {
    WebApp: 'WEB_APP',
    Whatsapp: 'WHATSAPP',
    System: 'SYSTEM',
    Email: 'EMAIL'
} as const;
export type CreateContactRequestBodyDtoChannelEnum = typeof CreateContactRequestBodyDtoChannelEnum[keyof typeof CreateContactRequestBodyDtoChannelEnum];


/**
 * Check if a given object implements the CreateContactRequestBodyDto interface.
 */
export function instanceOfCreateContactRequestBodyDto(value: object): value is CreateContactRequestBodyDto {
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('types' in value) || value['types'] === undefined) return false;
    if (!('document' in value) || value['document'] === undefined) return false;
    if (!('email' in value) || value['email'] === undefined) return false;
    if (!('phone' in value) || value['phone'] === undefined) return false;
    if (!('pixKeys' in value) || value['pixKeys'] === undefined) return false;
    if (!('channel' in value) || value['channel'] === undefined) return false;
    return true;
}

export function CreateContactRequestBodyDtoFromJSON(json: any): CreateContactRequestBodyDto {
    return CreateContactRequestBodyDtoFromJSONTyped(json, false);
}

export function CreateContactRequestBodyDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): CreateContactRequestBodyDto {
    if (json == null) {
        return json;
    }
    return {
        
        'name': json['name'],
        'types': json['types'],
        'documentType': json['documentType'] == null ? undefined : json['documentType'],
        'document': json['document'],
        'email': json['email'],
        'phone': json['phone'],
        'pixKeys': json['pixKeys'],
        'birthDate': json['birthDate'] == null ? undefined : json['birthDate'],
        'origin': json['origin'] == null ? undefined : json['origin'],
        'address': json['address'] == null ? undefined : CreateContactRequestBodyDtoAddressFromJSON(json['address']),
        'searchScore': json['searchScore'] == null ? undefined : json['searchScore'],
        'channel': json['channel'],
    };
}

export function CreateContactRequestBodyDtoToJSON(json: any): CreateContactRequestBodyDto {
    return CreateContactRequestBodyDtoToJSONTyped(json, false);
}

export function CreateContactRequestBodyDtoToJSONTyped(value?: CreateContactRequestBodyDto | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'name': value['name'],
        'types': value['types'],
        'documentType': value['documentType'],
        'document': value['document'],
        'email': value['email'],
        'phone': value['phone'],
        'pixKeys': value['pixKeys'],
        'birthDate': value['birthDate'],
        'origin': value['origin'],
        'address': CreateContactRequestBodyDtoAddressToJSON(value['address']),
        'searchScore': value['searchScore'],
        'channel': value['channel'],
    };
}

