/* tslint:disable */
/* eslint-disable */
/**
 * Sofia Pegasus core-api
 * Api principal do sistema Pegasus para gerenciamento financeiro de pequenas e médias empresas.
 *
 * The version of the OpenAPI document: 1.12.11
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { CreateOrUpdateBankTransactionRequestBodyDtoCreditCardMetadata } from './CreateOrUpdateBankTransactionRequestBodyDtoCreditCardMetadata';
import {
    CreateOrUpdateBankTransactionRequestBodyDtoCreditCardMetadataFromJSON,
    CreateOrUpdateBankTransactionRequestBodyDtoCreditCardMetadataFromJSONTyped,
    CreateOrUpdateBankTransactionRequestBodyDtoCreditCardMetadataToJSON,
    CreateOrUpdateBankTransactionRequestBodyDtoCreditCardMetadataToJSONTyped,
} from './CreateOrUpdateBankTransactionRequestBodyDtoCreditCardMetadata';
import type { CreateOrUpdateBankTransactionRequestBodyDtoAiSuggestion } from './CreateOrUpdateBankTransactionRequestBodyDtoAiSuggestion';
import {
    CreateOrUpdateBankTransactionRequestBodyDtoAiSuggestionFromJSON,
    CreateOrUpdateBankTransactionRequestBodyDtoAiSuggestionFromJSONTyped,
    CreateOrUpdateBankTransactionRequestBodyDtoAiSuggestionToJSON,
    CreateOrUpdateBankTransactionRequestBodyDtoAiSuggestionToJSONTyped,
} from './CreateOrUpdateBankTransactionRequestBodyDtoAiSuggestion';
import type { CreateOrUpdateBankTransactionRequestBodyDtoMerchant } from './CreateOrUpdateBankTransactionRequestBodyDtoMerchant';
import {
    CreateOrUpdateBankTransactionRequestBodyDtoMerchantFromJSON,
    CreateOrUpdateBankTransactionRequestBodyDtoMerchantFromJSONTyped,
    CreateOrUpdateBankTransactionRequestBodyDtoMerchantToJSON,
    CreateOrUpdateBankTransactionRequestBodyDtoMerchantToJSONTyped,
} from './CreateOrUpdateBankTransactionRequestBodyDtoMerchant';
import type { ProcessExportResourceJobRequestBodyDtoRequester } from './ProcessExportResourceJobRequestBodyDtoRequester';
import {
    ProcessExportResourceJobRequestBodyDtoRequesterFromJSON,
    ProcessExportResourceJobRequestBodyDtoRequesterFromJSONTyped,
    ProcessExportResourceJobRequestBodyDtoRequesterToJSON,
    ProcessExportResourceJobRequestBodyDtoRequesterToJSONTyped,
} from './ProcessExportResourceJobRequestBodyDtoRequester';
import type { CreateOrUpdateBankTransactionRequestBodyDtoPaymentData } from './CreateOrUpdateBankTransactionRequestBodyDtoPaymentData';
import {
    CreateOrUpdateBankTransactionRequestBodyDtoPaymentDataFromJSON,
    CreateOrUpdateBankTransactionRequestBodyDtoPaymentDataFromJSONTyped,
    CreateOrUpdateBankTransactionRequestBodyDtoPaymentDataToJSON,
    CreateOrUpdateBankTransactionRequestBodyDtoPaymentDataToJSONTyped,
} from './CreateOrUpdateBankTransactionRequestBodyDtoPaymentData';

/**
 * 
 * @export
 * @interface CreateOrUpdateBankTransactionRequestBodyDto
 */
export interface CreateOrUpdateBankTransactionRequestBodyDto {
    /**
     * Identificador da conta bancária da movimentação financeira.
     * @type {string}
     * @memberof CreateOrUpdateBankTransactionRequestBodyDto
     */
    bankAccount: string;
    /**
     * Provedor da movimentação financeira.
     * @type {string}
     * @memberof CreateOrUpdateBankTransactionRequestBodyDto
     */
    provider: CreateOrUpdateBankTransactionRequestBodyDtoProviderEnum;
    /**
     * Identificador da movimentação financeira no provedor.
     * @type {string}
     * @memberof CreateOrUpdateBankTransactionRequestBodyDto
     */
    providerTransactionId: string;
    /**
     * Valor da movimentação financeira em centavos.
     * @type {string}
     * @memberof CreateOrUpdateBankTransactionRequestBodyDto
     */
    amountInBrl: string;
    /**
     * Data da movimentação financeira.
     * @type {any}
     * @memberof CreateOrUpdateBankTransactionRequestBodyDto
     */
    date: any | null;
    /**
     * Tipo da movimentação financeira (entrada ou saída).
     * @type {string}
     * @memberof CreateOrUpdateBankTransactionRequestBodyDto
     */
    type: CreateOrUpdateBankTransactionRequestBodyDtoTypeEnum;
    /**
     * Descrição da movimentação financeira.
     * @type {string}
     * @memberof CreateOrUpdateBankTransactionRequestBodyDto
     */
    description?: string | null;
    /**
     * Status da movimentação financeira.
     * @type {string}
     * @memberof CreateOrUpdateBankTransactionRequestBodyDto
     */
    status: CreateOrUpdateBankTransactionRequestBodyDtoStatusEnum;
    /**
     * 
     * @type {CreateOrUpdateBankTransactionRequestBodyDtoAiSuggestion}
     * @memberof CreateOrUpdateBankTransactionRequestBodyDto
     */
    aiSuggestion?: CreateOrUpdateBankTransactionRequestBodyDtoAiSuggestion | null;
    /**
     * Identificador da solicitação de importação OFX relacionada.
     * @type {string}
     * @memberof CreateOrUpdateBankTransactionRequestBodyDto
     */
    ofxJobRequestId?: string | null;
    /**
     * Identificador da execução de importação OFX relacionada.
     * @type {string}
     * @memberof CreateOrUpdateBankTransactionRequestBodyDto
     */
    ofxJobExecutionId?: string | null;
    /**
     * Identificador da solicitação de importação Pluggy relacionada.
     * @type {string}
     * @memberof CreateOrUpdateBankTransactionRequestBodyDto
     */
    pluggyJobRequestId?: string | null;
    /**
     * Identificador da execução de importação Pluggy relacionada.
     * @type {string}
     * @memberof CreateOrUpdateBankTransactionRequestBodyDto
     */
    pluggyJobExecutionId?: string | null;
    /**
     * Identificador externo da movimentação financeira.
     * @type {string}
     * @memberof CreateOrUpdateBankTransactionRequestBodyDto
     */
    externalId?: string | null;
    /**
     * Valor da movimentação financeira.
     * @type {number}
     * @memberof CreateOrUpdateBankTransactionRequestBodyDto
     */
    amount?: number | null;
    /**
     * Valor da movimentação financeira na moeda da conta.
     * @type {number}
     * @memberof CreateOrUpdateBankTransactionRequestBodyDto
     */
    amountInAccountCurrency?: number | null;
    /**
     * Saldo após a movimentação financeira.
     * @type {number}
     * @memberof CreateOrUpdateBankTransactionRequestBodyDto
     */
    balance?: number | null;
    /**
     * Código da moeda da movimentação financeira.
     * @type {string}
     * @memberof CreateOrUpdateBankTransactionRequestBodyDto
     */
    currencyCode?: string | null;
    /**
     * Categoria da movimentação financeira.
     * @type {string}
     * @memberof CreateOrUpdateBankTransactionRequestBodyDto
     */
    category?: string | null;
    /**
     * Código do provedor da movimentação financeira.
     * @type {string}
     * @memberof CreateOrUpdateBankTransactionRequestBodyDto
     */
    providerCode?: string | null;
    /**
     * 
     * @type {CreateOrUpdateBankTransactionRequestBodyDtoPaymentData}
     * @memberof CreateOrUpdateBankTransactionRequestBodyDto
     */
    paymentData?: CreateOrUpdateBankTransactionRequestBodyDtoPaymentData | null;
    /**
     * 
     * @type {CreateOrUpdateBankTransactionRequestBodyDtoCreditCardMetadata}
     * @memberof CreateOrUpdateBankTransactionRequestBodyDto
     */
    creditCardMetadata?: CreateOrUpdateBankTransactionRequestBodyDtoCreditCardMetadata | null;
    /**
     * 
     * @type {CreateOrUpdateBankTransactionRequestBodyDtoMerchant}
     * @memberof CreateOrUpdateBankTransactionRequestBodyDto
     */
    merchant?: CreateOrUpdateBankTransactionRequestBodyDtoMerchant | null;
    /**
     * Identificador da categoria da movimentação financeira.
     * @type {string}
     * @memberof CreateOrUpdateBankTransactionRequestBodyDto
     */
    categoryId?: string | null;
    /**
     * Tipo de operação da movimentação financeira.
     * @type {string}
     * @memberof CreateOrUpdateBankTransactionRequestBodyDto
     */
    operationType?: string | null;
    /**
     * Pontuação de busca da movimentação financeira.
     * @type {number}
     * @memberof CreateOrUpdateBankTransactionRequestBodyDto
     */
    searchScore?: number | null;
    /**
     * 
     * @type {ProcessExportResourceJobRequestBodyDtoRequester}
     * @memberof CreateOrUpdateBankTransactionRequestBodyDto
     */
    requester: ProcessExportResourceJobRequestBodyDtoRequester;
}


/**
 * @export
 */
export const CreateOrUpdateBankTransactionRequestBodyDtoProviderEnum = {
    Pluggy: 'PLUGGY',
    Ofx: 'OFX',
    Other: 'OTHER'
} as const;
export type CreateOrUpdateBankTransactionRequestBodyDtoProviderEnum = typeof CreateOrUpdateBankTransactionRequestBodyDtoProviderEnum[keyof typeof CreateOrUpdateBankTransactionRequestBodyDtoProviderEnum];

/**
 * @export
 */
export const CreateOrUpdateBankTransactionRequestBodyDtoTypeEnum = {
    Debit: 'DEBIT',
    Credit: 'CREDIT'
} as const;
export type CreateOrUpdateBankTransactionRequestBodyDtoTypeEnum = typeof CreateOrUpdateBankTransactionRequestBodyDtoTypeEnum[keyof typeof CreateOrUpdateBankTransactionRequestBodyDtoTypeEnum];

/**
 * @export
 */
export const CreateOrUpdateBankTransactionRequestBodyDtoStatusEnum = {
    Pending: 'PENDING',
    Posted: 'POSTED'
} as const;
export type CreateOrUpdateBankTransactionRequestBodyDtoStatusEnum = typeof CreateOrUpdateBankTransactionRequestBodyDtoStatusEnum[keyof typeof CreateOrUpdateBankTransactionRequestBodyDtoStatusEnum];


/**
 * Check if a given object implements the CreateOrUpdateBankTransactionRequestBodyDto interface.
 */
export function instanceOfCreateOrUpdateBankTransactionRequestBodyDto(value: object): value is CreateOrUpdateBankTransactionRequestBodyDto {
    if (!('bankAccount' in value) || value['bankAccount'] === undefined) return false;
    if (!('provider' in value) || value['provider'] === undefined) return false;
    if (!('providerTransactionId' in value) || value['providerTransactionId'] === undefined) return false;
    if (!('amountInBrl' in value) || value['amountInBrl'] === undefined) return false;
    if (!('date' in value) || value['date'] === undefined) return false;
    if (!('type' in value) || value['type'] === undefined) return false;
    if (!('status' in value) || value['status'] === undefined) return false;
    if (!('requester' in value) || value['requester'] === undefined) return false;
    return true;
}

export function CreateOrUpdateBankTransactionRequestBodyDtoFromJSON(json: any): CreateOrUpdateBankTransactionRequestBodyDto {
    return CreateOrUpdateBankTransactionRequestBodyDtoFromJSONTyped(json, false);
}

export function CreateOrUpdateBankTransactionRequestBodyDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): CreateOrUpdateBankTransactionRequestBodyDto {
    if (json == null) {
        return json;
    }
    return {
        
        'bankAccount': json['bankAccount'],
        'provider': json['provider'],
        'providerTransactionId': json['providerTransactionId'],
        'amountInBrl': json['amountInBrl'],
        'date': json['date'],
        'type': json['type'],
        'description': json['description'] == null ? undefined : json['description'],
        'status': json['status'],
        'aiSuggestion': json['aiSuggestion'] == null ? undefined : CreateOrUpdateBankTransactionRequestBodyDtoAiSuggestionFromJSON(json['aiSuggestion']),
        'ofxJobRequestId': json['ofxJobRequestId'] == null ? undefined : json['ofxJobRequestId'],
        'ofxJobExecutionId': json['ofxJobExecutionId'] == null ? undefined : json['ofxJobExecutionId'],
        'pluggyJobRequestId': json['pluggyJobRequestId'] == null ? undefined : json['pluggyJobRequestId'],
        'pluggyJobExecutionId': json['pluggyJobExecutionId'] == null ? undefined : json['pluggyJobExecutionId'],
        'externalId': json['externalId'] == null ? undefined : json['externalId'],
        'amount': json['amount'] == null ? undefined : json['amount'],
        'amountInAccountCurrency': json['amountInAccountCurrency'] == null ? undefined : json['amountInAccountCurrency'],
        'balance': json['balance'] == null ? undefined : json['balance'],
        'currencyCode': json['currencyCode'] == null ? undefined : json['currencyCode'],
        'category': json['category'] == null ? undefined : json['category'],
        'providerCode': json['providerCode'] == null ? undefined : json['providerCode'],
        'paymentData': json['paymentData'] == null ? undefined : CreateOrUpdateBankTransactionRequestBodyDtoPaymentDataFromJSON(json['paymentData']),
        'creditCardMetadata': json['creditCardMetadata'] == null ? undefined : CreateOrUpdateBankTransactionRequestBodyDtoCreditCardMetadataFromJSON(json['creditCardMetadata']),
        'merchant': json['merchant'] == null ? undefined : CreateOrUpdateBankTransactionRequestBodyDtoMerchantFromJSON(json['merchant']),
        'categoryId': json['categoryId'] == null ? undefined : json['categoryId'],
        'operationType': json['operationType'] == null ? undefined : json['operationType'],
        'searchScore': json['searchScore'] == null ? undefined : json['searchScore'],
        'requester': ProcessExportResourceJobRequestBodyDtoRequesterFromJSON(json['requester']),
    };
}

export function CreateOrUpdateBankTransactionRequestBodyDtoToJSON(json: any): CreateOrUpdateBankTransactionRequestBodyDto {
    return CreateOrUpdateBankTransactionRequestBodyDtoToJSONTyped(json, false);
}

export function CreateOrUpdateBankTransactionRequestBodyDtoToJSONTyped(value?: CreateOrUpdateBankTransactionRequestBodyDto | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'bankAccount': value['bankAccount'],
        'provider': value['provider'],
        'providerTransactionId': value['providerTransactionId'],
        'amountInBrl': value['amountInBrl'],
        'date': value['date'],
        'type': value['type'],
        'description': value['description'],
        'status': value['status'],
        'aiSuggestion': CreateOrUpdateBankTransactionRequestBodyDtoAiSuggestionToJSON(value['aiSuggestion']),
        'ofxJobRequestId': value['ofxJobRequestId'],
        'ofxJobExecutionId': value['ofxJobExecutionId'],
        'pluggyJobRequestId': value['pluggyJobRequestId'],
        'pluggyJobExecutionId': value['pluggyJobExecutionId'],
        'externalId': value['externalId'],
        'amount': value['amount'],
        'amountInAccountCurrency': value['amountInAccountCurrency'],
        'balance': value['balance'],
        'currencyCode': value['currencyCode'],
        'category': value['category'],
        'providerCode': value['providerCode'],
        'paymentData': CreateOrUpdateBankTransactionRequestBodyDtoPaymentDataToJSON(value['paymentData']),
        'creditCardMetadata': CreateOrUpdateBankTransactionRequestBodyDtoCreditCardMetadataToJSON(value['creditCardMetadata']),
        'merchant': CreateOrUpdateBankTransactionRequestBodyDtoMerchantToJSON(value['merchant']),
        'categoryId': value['categoryId'],
        'operationType': value['operationType'],
        'searchScore': value['searchScore'],
        'requester': ProcessExportResourceJobRequestBodyDtoRequesterToJSON(value['requester']),
    };
}

