/* tslint:disable */
/* eslint-disable */
/**
 * Sofia Pegasus core-api
 * Api principal do sistema Pegasus para gerenciamento financeiro de pequenas e médias empresas.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface CreateOrganizationRequestBodyDtoChildrenInnerOneOf
 */
export interface CreateOrganizationRequestBodyDtoChildrenInnerOneOf {
    /**
     * Identificador da organização.
     * @type {string}
     * @memberof CreateOrganizationRequestBodyDtoChildrenInnerOneOf
     */
    id: string;
    /**
     * Nome da organização.
     * @type {string}
     * @memberof CreateOrganizationRequestBodyDtoChildrenInnerOneOf
     */
    name: string;
    /**
     * Slug da organização.
     * @type {string}
     * @memberof CreateOrganizationRequestBodyDtoChildrenInnerOneOf
     */
    slug: string;
    /**
     * Tipo da organização.
     * @type {string}
     * @memberof CreateOrganizationRequestBodyDtoChildrenInnerOneOf
     */
    type: CreateOrganizationRequestBodyDtoChildrenInnerOneOfTypeEnum;
    /**
     * Documento da organização. Geralmente CNPJ.
     * @type {string}
     * @memberof CreateOrganizationRequestBodyDtoChildrenInnerOneOf
     */
    document?: string;
    /**
     * URL da imagem do logo da organização.
     * @type {string}
     * @memberof CreateOrganizationRequestBodyDtoChildrenInnerOneOf
     */
    imageUrl?: string;
    /**
     * Data de criação da organização.
     * @type {Date}
     * @memberof CreateOrganizationRequestBodyDtoChildrenInnerOneOf
     */
    createdAt: Date;
    /**
     * Data de atualização da organização.
     * @type {Date}
     * @memberof CreateOrganizationRequestBodyDtoChildrenInnerOneOf
     */
    updatedAt: Date;
}


/**
 * @export
 */
export const CreateOrganizationRequestBodyDtoChildrenInnerOneOfTypeEnum = {
    Leaf: 'LEAF',
    Group: 'GROUP'
} as const;
export type CreateOrganizationRequestBodyDtoChildrenInnerOneOfTypeEnum = typeof CreateOrganizationRequestBodyDtoChildrenInnerOneOfTypeEnum[keyof typeof CreateOrganizationRequestBodyDtoChildrenInnerOneOfTypeEnum];


/**
 * Check if a given object implements the CreateOrganizationRequestBodyDtoChildrenInnerOneOf interface.
 */
export function instanceOfCreateOrganizationRequestBodyDtoChildrenInnerOneOf(value: object): value is CreateOrganizationRequestBodyDtoChildrenInnerOneOf {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('slug' in value) || value['slug'] === undefined) return false;
    if (!('type' in value) || value['type'] === undefined) return false;
    if (!('createdAt' in value) || value['createdAt'] === undefined) return false;
    if (!('updatedAt' in value) || value['updatedAt'] === undefined) return false;
    return true;
}

export function CreateOrganizationRequestBodyDtoChildrenInnerOneOfFromJSON(json: any): CreateOrganizationRequestBodyDtoChildrenInnerOneOf {
    return CreateOrganizationRequestBodyDtoChildrenInnerOneOfFromJSONTyped(json, false);
}

export function CreateOrganizationRequestBodyDtoChildrenInnerOneOfFromJSONTyped(json: any, ignoreDiscriminator: boolean): CreateOrganizationRequestBodyDtoChildrenInnerOneOf {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'name': json['name'],
        'slug': json['slug'],
        'type': json['type'],
        'document': json['document'] == null ? undefined : json['document'],
        'imageUrl': json['imageUrl'] == null ? undefined : json['imageUrl'],
        'createdAt': (new Date(json['createdAt'])),
        'updatedAt': (new Date(json['updatedAt'])),
    };
}

export function CreateOrganizationRequestBodyDtoChildrenInnerOneOfToJSON(json: any): CreateOrganizationRequestBodyDtoChildrenInnerOneOf {
    return CreateOrganizationRequestBodyDtoChildrenInnerOneOfToJSONTyped(json, false);
}

export function CreateOrganizationRequestBodyDtoChildrenInnerOneOfToJSONTyped(value?: CreateOrganizationRequestBodyDtoChildrenInnerOneOf | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'name': value['name'],
        'slug': value['slug'],
        'type': value['type'],
        'document': value['document'],
        'imageUrl': value['imageUrl'],
        'createdAt': ((value['createdAt']).toISOString()),
        'updatedAt': ((value['updatedAt']).toISOString()),
    };
}

