/* tslint:disable */
/* eslint-disable */
/**
 * Sofia Pegasus core-api
 * Api principal do sistema Pegasus para gerenciamento financeiro de pequenas e m√©dias empresas.
 *
 * The version of the OpenAPI document: 1.1.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ContactsPageDtoPageInfo } from './ContactsPageDtoPageInfo';
import {
    ContactsPageDtoPageInfoFromJSON,
    ContactsPageDtoPageInfoFromJSONTyped,
    ContactsPageDtoPageInfoToJSON,
    ContactsPageDtoPageInfoToJSONTyped,
} from './ContactsPageDtoPageInfo';
import type { CategoriesPageEntityItemsInner } from './CategoriesPageEntityItemsInner';
import {
    CategoriesPageEntityItemsInnerFromJSON,
    CategoriesPageEntityItemsInnerFromJSONTyped,
    CategoriesPageEntityItemsInnerToJSON,
    CategoriesPageEntityItemsInnerToJSONTyped,
} from './CategoriesPageEntityItemsInner';

/**
 * 
 * @export
 * @interface CategoriesPageEntity
 */
export interface CategoriesPageEntity {
    /**
     * 
     * @type {Array<CategoriesPageEntityItemsInner>}
     * @memberof CategoriesPageEntity
     */
    items: Array<CategoriesPageEntityItemsInner>;
    /**
     * 
     * @type {ContactsPageDtoPageInfo}
     * @memberof CategoriesPageEntity
     */
    pageInfo: ContactsPageDtoPageInfo;
}

/**
 * Check if a given object implements the CategoriesPageEntity interface.
 */
export function instanceOfCategoriesPageEntity(value: object): value is CategoriesPageEntity {
    if (!('items' in value) || value['items'] === undefined) return false;
    if (!('pageInfo' in value) || value['pageInfo'] === undefined) return false;
    return true;
}

export function CategoriesPageEntityFromJSON(json: any): CategoriesPageEntity {
    return CategoriesPageEntityFromJSONTyped(json, false);
}

export function CategoriesPageEntityFromJSONTyped(json: any, ignoreDiscriminator: boolean): CategoriesPageEntity {
    if (json == null) {
        return json;
    }
    return {
        
        'items': ((json['items'] as Array<any>).map(CategoriesPageEntityItemsInnerFromJSON)),
        'pageInfo': ContactsPageDtoPageInfoFromJSON(json['pageInfo']),
    };
}

export function CategoriesPageEntityToJSON(json: any): CategoriesPageEntity {
    return CategoriesPageEntityToJSONTyped(json, false);
}

export function CategoriesPageEntityToJSONTyped(value?: CategoriesPageEntity | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'items': ((value['items'] as Array<any>).map(CategoriesPageEntityItemsInnerToJSON)),
        'pageInfo': ContactsPageDtoPageInfoToJSON(value['pageInfo']),
    };
}

