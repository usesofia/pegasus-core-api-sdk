/* tslint:disable */
/* eslint-disable */
/**
 * Sofia Pegasus core-api
 * Api principal do sistema Pegasus para gerenciamento financeiro de pequenas e médias empresas.
 *
 * The version of the OpenAPI document: 1.0.8
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  CategoriesPageEntity,
  ExceptionResponseEntity,
} from '../models/index';
import {
    CategoriesPageEntityFromJSON,
    CategoriesPageEntityToJSON,
    ExceptionResponseEntityFromJSON,
    ExceptionResponseEntityToJSON,
} from '../models/index';

export interface FindAllCategoriesRequest {
    populate?: string;
    searchTerm?: string;
    pageSize?: number;
    pageIndex?: number;
}

/**
 * CategoriesApi - interface
 * 
 * @export
 * @interface CategoriesApiInterface
 */
export interface CategoriesApiInterface {
    /**
     * 
     * @summary Busca todas as categorias.
     * @param {string} [populate] Campos relacionados a serem populados separados por vírgula.
     * @param {string} [searchTerm] Termo para busca por nome da categoria.
     * @param {number} [pageSize] Quantidade de itens por página.
     * @param {number} [pageIndex] Índice da página.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CategoriesApiInterface
     */
    findAllCategoriesRaw(requestParameters: FindAllCategoriesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<CategoriesPageEntity>>;

    /**
     * Busca todas as categorias.
     */
    findAllCategories(requestParameters: FindAllCategoriesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<CategoriesPageEntity>;

}

/**
 * 
 */
export class CategoriesApi extends runtime.BaseAPI implements CategoriesApiInterface {

    /**
     * Busca todas as categorias.
     */
    async findAllCategoriesRaw(requestParameters: FindAllCategoriesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<CategoriesPageEntity>> {
        const queryParameters: any = {};

        if (requestParameters['populate'] != null) {
            queryParameters['populate'] = requestParameters['populate'];
        }

        if (requestParameters['searchTerm'] != null) {
            queryParameters['searchTerm'] = requestParameters['searchTerm'];
        }

        if (requestParameters['pageSize'] != null) {
            queryParameters['pageSize'] = requestParameters['pageSize'];
        }

        if (requestParameters['pageIndex'] != null) {
            queryParameters['pageIndex'] = requestParameters['pageIndex'];
        }

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/external/categories`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => CategoriesPageEntityFromJSON(jsonValue));
    }

    /**
     * Busca todas as categorias.
     */
    async findAllCategories(requestParameters: FindAllCategoriesRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<CategoriesPageEntity> {
        const response = await this.findAllCategoriesRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
