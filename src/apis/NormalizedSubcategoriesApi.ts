/* tslint:disable */
/* eslint-disable */
/**
 * Sofia Pegasus core-api
 * Api principal do sistema Pegasus para gerenciamento financeiro de pequenas e médias empresas.
 *
 * The version of the OpenAPI document: 1.4.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  ExceptionResponseEntity,
  NormalizedSubcategoriesPageEntity,
} from '../models/index';
import {
    ExceptionResponseEntityFromJSON,
    ExceptionResponseEntityToJSON,
    NormalizedSubcategoriesPageEntityFromJSON,
    NormalizedSubcategoriesPageEntityToJSON,
} from '../models/index';

export interface FindAllNormalizedSubcategoriesRequest {
    populate?: string;
    categoryId?: string;
    pageSize?: number;
    pageIndex?: number;
}

/**
 * NormalizedSubcategoriesApi - interface
 * 
 * @export
 * @interface NormalizedSubcategoriesApiInterface
 */
export interface NormalizedSubcategoriesApiInterface {
    /**
     * 
     * @summary Busca todas as subcategorias normalizadas.
     * @param {string} [populate] Campos relacionados a serem populados separados por vírgula.
     * @param {string} [categoryId] ID da categoria para filtrar subcategorias.
     * @param {number} [pageSize] Quantidade de itens por página.
     * @param {number} [pageIndex] Índice da página.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof NormalizedSubcategoriesApiInterface
     */
    findAllNormalizedSubcategoriesRaw(requestParameters: FindAllNormalizedSubcategoriesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<NormalizedSubcategoriesPageEntity>>;

    /**
     * Busca todas as subcategorias normalizadas.
     */
    findAllNormalizedSubcategories(requestParameters: FindAllNormalizedSubcategoriesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<NormalizedSubcategoriesPageEntity>;

}

/**
 * 
 */
export class NormalizedSubcategoriesApi extends runtime.BaseAPI implements NormalizedSubcategoriesApiInterface {

    /**
     * Busca todas as subcategorias normalizadas.
     */
    async findAllNormalizedSubcategoriesRaw(requestParameters: FindAllNormalizedSubcategoriesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<NormalizedSubcategoriesPageEntity>> {
        const queryParameters: any = {};

        if (requestParameters['populate'] != null) {
            queryParameters['populate'] = requestParameters['populate'];
        }

        if (requestParameters['categoryId'] != null) {
            queryParameters['categoryId'] = requestParameters['categoryId'];
        }

        if (requestParameters['pageSize'] != null) {
            queryParameters['pageSize'] = requestParameters['pageSize'];
        }

        if (requestParameters['pageIndex'] != null) {
            queryParameters['pageIndex'] = requestParameters['pageIndex'];
        }

        const headerParameters: runtime.HTTPHeaders = {};


        let urlPath = `/external/normalized-subcategories`;

        const response = await this.request({
            path: urlPath,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => NormalizedSubcategoriesPageEntityFromJSON(jsonValue));
    }

    /**
     * Busca todas as subcategorias normalizadas.
     */
    async findAllNormalizedSubcategories(requestParameters: FindAllNormalizedSubcategoriesRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<NormalizedSubcategoriesPageEntity> {
        const response = await this.findAllNormalizedSubcategoriesRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
