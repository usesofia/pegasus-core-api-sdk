/* tslint:disable */
/* eslint-disable */
/**
 * Sofia Pegasus core-api
 * Api principal do sistema Pegasus para gerenciamento financeiro de pequenas e médias empresas.
 *
 * The version of the OpenAPI document: 1.0.8
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  CreateInboxRecordRequestBodyDto,
  ExceptionResponseEntity,
  InboxRecordEntity,
  LinkFinancialRecordsRequestBodyDto,
} from '../models/index';
import {
    CreateInboxRecordRequestBodyDtoFromJSON,
    CreateInboxRecordRequestBodyDtoToJSON,
    ExceptionResponseEntityFromJSON,
    ExceptionResponseEntityToJSON,
    InboxRecordEntityFromJSON,
    InboxRecordEntityToJSON,
    LinkFinancialRecordsRequestBodyDtoFromJSON,
    LinkFinancialRecordsRequestBodyDtoToJSON,
} from '../models/index';

export interface CreateInboxRecordRequest {
    createInboxRecordRequestBodyDto: CreateInboxRecordRequestBodyDto;
}

export interface LinkFinancialRecordsToInboxRecordRequest {
    inboxRecordId: string;
    linkFinancialRecordsRequestBodyDto: LinkFinancialRecordsRequestBodyDto;
}

/**
 * InboxRecordsApi - interface
 * 
 * @export
 * @interface InboxRecordsApiInterface
 */
export interface InboxRecordsApiInterface {
    /**
     * 
     * @summary Cria um novo registro de inbox
     * @param {CreateInboxRecordRequestBodyDto} createInboxRecordRequestBodyDto 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof InboxRecordsApiInterface
     */
    createInboxRecordRaw(requestParameters: CreateInboxRecordRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<InboxRecordEntity>>;

    /**
     * Cria um novo registro de inbox
     */
    createInboxRecord(requestParameters: CreateInboxRecordRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<InboxRecordEntity>;

    /**
     * Adiciona vínculos entre um registro de inbox e múltiplos registros financeiros, atualizando ambos os lados da relação.
     * @summary Vincula registros financeiros a um registro de inbox
     * @param {string} inboxRecordId Identificador do registro de inbox
     * @param {LinkFinancialRecordsRequestBodyDto} linkFinancialRecordsRequestBodyDto 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof InboxRecordsApiInterface
     */
    linkFinancialRecordsToInboxRecordRaw(requestParameters: LinkFinancialRecordsToInboxRecordRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<InboxRecordEntity>>;

    /**
     * Adiciona vínculos entre um registro de inbox e múltiplos registros financeiros, atualizando ambos os lados da relação.
     * Vincula registros financeiros a um registro de inbox
     */
    linkFinancialRecordsToInboxRecord(requestParameters: LinkFinancialRecordsToInboxRecordRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<InboxRecordEntity>;

}

/**
 * 
 */
export class InboxRecordsApi extends runtime.BaseAPI implements InboxRecordsApiInterface {

    /**
     * Cria um novo registro de inbox
     */
    async createInboxRecordRaw(requestParameters: CreateInboxRecordRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<InboxRecordEntity>> {
        if (requestParameters['createInboxRecordRequestBodyDto'] == null) {
            throw new runtime.RequiredError(
                'createInboxRecordRequestBodyDto',
                'Required parameter "createInboxRecordRequestBodyDto" was null or undefined when calling createInboxRecord().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/external/inbox/records`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: CreateInboxRecordRequestBodyDtoToJSON(requestParameters['createInboxRecordRequestBodyDto']),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => InboxRecordEntityFromJSON(jsonValue));
    }

    /**
     * Cria um novo registro de inbox
     */
    async createInboxRecord(requestParameters: CreateInboxRecordRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<InboxRecordEntity> {
        const response = await this.createInboxRecordRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Adiciona vínculos entre um registro de inbox e múltiplos registros financeiros, atualizando ambos os lados da relação.
     * Vincula registros financeiros a um registro de inbox
     */
    async linkFinancialRecordsToInboxRecordRaw(requestParameters: LinkFinancialRecordsToInboxRecordRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<InboxRecordEntity>> {
        if (requestParameters['inboxRecordId'] == null) {
            throw new runtime.RequiredError(
                'inboxRecordId',
                'Required parameter "inboxRecordId" was null or undefined when calling linkFinancialRecordsToInboxRecord().'
            );
        }

        if (requestParameters['linkFinancialRecordsRequestBodyDto'] == null) {
            throw new runtime.RequiredError(
                'linkFinancialRecordsRequestBodyDto',
                'Required parameter "linkFinancialRecordsRequestBodyDto" was null or undefined when calling linkFinancialRecordsToInboxRecord().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/external/inbox/records/{inboxRecordId}/links/financial-records`.replace(`{${"inboxRecordId"}}`, encodeURIComponent(String(requestParameters['inboxRecordId']))),
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: LinkFinancialRecordsRequestBodyDtoToJSON(requestParameters['linkFinancialRecordsRequestBodyDto']),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => InboxRecordEntityFromJSON(jsonValue));
    }

    /**
     * Adiciona vínculos entre um registro de inbox e múltiplos registros financeiros, atualizando ambos os lados da relação.
     * Vincula registros financeiros a um registro de inbox
     */
    async linkFinancialRecordsToInboxRecord(requestParameters: LinkFinancialRecordsToInboxRecordRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<InboxRecordEntity> {
        const response = await this.linkFinancialRecordsToInboxRecordRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
