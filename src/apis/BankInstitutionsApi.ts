/* tslint:disable */
/* eslint-disable */
/**
 * Sofia Pegasus core-api
 * Api principal do sistema Pegasus para gerenciamento financeiro de pequenas e m√©dias empresas.
 *
 * The version of the OpenAPI document: 1.1.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  BankInstitutionEntity,
} from '../models/index';
import {
    BankInstitutionEntityFromJSON,
    BankInstitutionEntityToJSON,
} from '../models/index';

/**
 * BankInstitutionsApi - interface
 * 
 * @export
 * @interface BankInstitutionsApiInterface
 */
export interface BankInstitutionsApiInterface {
    /**
     * 
     * @summary Get all bank institutions
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof BankInstitutionsApiInterface
     */
    findAllBankInstitutionsRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<BankInstitutionEntity>>>;

    /**
     * Get all bank institutions
     */
    findAllBankInstitutions(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<BankInstitutionEntity>>;

}

/**
 * 
 */
export class BankInstitutionsApi extends runtime.BaseAPI implements BankInstitutionsApiInterface {

    /**
     * Get all bank institutions
     */
    async findAllBankInstitutionsRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<BankInstitutionEntity>>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};


        let urlPath = `/external/bank-institutions`;

        const response = await this.request({
            path: urlPath,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => jsonValue.map(BankInstitutionEntityFromJSON));
    }

    /**
     * Get all bank institutions
     */
    async findAllBankInstitutions(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<BankInstitutionEntity>> {
        const response = await this.findAllBankInstitutionsRaw(initOverrides);
        return await response.value();
    }

}
