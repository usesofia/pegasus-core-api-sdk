/* tslint:disable */
/* eslint-disable */
/**
 * Sofia Pegasus core-api
 * Api principal do sistema Pegasus para gerenciamento financeiro de pequenas e médias empresas.
 *
 * The version of the OpenAPI document: 1.7.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  ExceptionResponseEntity,
  ExportContactsDto,
} from '../models/index';
import {
    ExceptionResponseEntityFromJSON,
    ExceptionResponseEntityToJSON,
    ExportContactsDtoFromJSON,
    ExportContactsDtoToJSON,
} from '../models/index';

export interface ExportContactsRequest {
    format?: ExportContactsFormatEnum;
}

/**
 * ContactsExportApi - interface
 * 
 * @export
 * @interface ContactsExportApiInterface
 */
export interface ContactsExportApiInterface {
    /**
     * 
     * @summary Solicita a exportação dos contatos.
     * @param {'csv' | 'xlsx'} [format] Formato de exportação dos dados.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ContactsExportApiInterface
     */
    exportContactsRaw(requestParameters: ExportContactsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ExportContactsDto>>;

    /**
     * Solicita a exportação dos contatos.
     */
    exportContacts(requestParameters: ExportContactsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ExportContactsDto>;

}

/**
 * 
 */
export class ContactsExportApi extends runtime.BaseAPI implements ContactsExportApiInterface {

    /**
     * Solicita a exportação dos contatos.
     */
    async exportContactsRaw(requestParameters: ExportContactsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ExportContactsDto>> {
        const queryParameters: any = {};

        if (requestParameters['format'] != null) {
            queryParameters['format'] = requestParameters['format'];
        }

        const headerParameters: runtime.HTTPHeaders = {};


        let urlPath = `/external/contacts/export`;

        const response = await this.request({
            path: urlPath,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => ExportContactsDtoFromJSON(jsonValue));
    }

    /**
     * Solicita a exportação dos contatos.
     */
    async exportContacts(requestParameters: ExportContactsRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ExportContactsDto> {
        const response = await this.exportContactsRaw(requestParameters, initOverrides);
        return await response.value();
    }

}

/**
 * @export
 */
export const ExportContactsFormatEnum = {
    Csv: 'csv',
    Xlsx: 'xlsx'
} as const;
export type ExportContactsFormatEnum = typeof ExportContactsFormatEnum[keyof typeof ExportContactsFormatEnum];
