/* tslint:disable */
/* eslint-disable */
/**
 * Sofia Pegasus core-api
 * Api principal do sistema Pegasus para gerenciamento financeiro de pequenas e médias empresas.
 *
 * The version of the OpenAPI document: 1.12.16
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  ExceptionResponseEntity,
  ExportContactsDto,
} from '../models/index';
import {
    ExceptionResponseEntityFromJSON,
    ExceptionResponseEntityToJSON,
    ExportContactsDtoFromJSON,
    ExportContactsDtoToJSON,
} from '../models/index';

export interface ExportContactsRequest {
    sortOrder?: string;
    sortBy?: string;
    considerNotIdentified?: boolean;
    states?: string;
    country?: string;
    birthdayTo?: string;
    birthdayFrom?: string;
    origins?: string;
    types?: string;
    format?: ExportContactsFormatEnum;
}

/**
 * ContactsExportApi - interface
 * 
 * @export
 * @interface ContactsExportApiInterface
 */
export interface ContactsExportApiInterface {
    /**
     * 
     * @summary Solicita a exportação dos contatos.
     * @param {string} [sortOrder] Ordem de ordenação dos contatos.
     * @param {string} [sortBy] Campo para ordenação dos contatos.
     * @param {boolean} [considerNotIdentified] Considerar ou não o contato não identificado.
     * @param {string} [states] Estados a serem buscados.
     * @param {string} [country] País a serem buscados.
     * @param {string} [birthdayTo] Data de nascimento final a serem buscadas.
     * @param {string} [birthdayFrom] Data de nascimento inicial a serem buscadas.
     * @param {string} [origins] Origens de contato a serem buscadas.
     * @param {string} [types] Tipos de contato a serem buscados.
     * @param {'csv' | 'xlsx'} [format] Formato de exportação dos dados.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ContactsExportApiInterface
     */
    exportContactsRaw(requestParameters: ExportContactsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ExportContactsDto>>;

    /**
     * Solicita a exportação dos contatos.
     */
    exportContacts(requestParameters: ExportContactsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ExportContactsDto>;

}

/**
 * 
 */
export class ContactsExportApi extends runtime.BaseAPI implements ContactsExportApiInterface {

    /**
     * Solicita a exportação dos contatos.
     */
    async exportContactsRaw(requestParameters: ExportContactsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ExportContactsDto>> {
        const queryParameters: any = {};

        if (requestParameters['sortOrder'] != null) {
            queryParameters['sortOrder'] = requestParameters['sortOrder'];
        }

        if (requestParameters['sortBy'] != null) {
            queryParameters['sortBy'] = requestParameters['sortBy'];
        }

        if (requestParameters['considerNotIdentified'] != null) {
            queryParameters['considerNotIdentified'] = requestParameters['considerNotIdentified'];
        }

        if (requestParameters['states'] != null) {
            queryParameters['states'] = requestParameters['states'];
        }

        if (requestParameters['country'] != null) {
            queryParameters['country'] = requestParameters['country'];
        }

        if (requestParameters['birthdayTo'] != null) {
            queryParameters['birthdayTo'] = requestParameters['birthdayTo'];
        }

        if (requestParameters['birthdayFrom'] != null) {
            queryParameters['birthdayFrom'] = requestParameters['birthdayFrom'];
        }

        if (requestParameters['origins'] != null) {
            queryParameters['origins'] = requestParameters['origins'];
        }

        if (requestParameters['types'] != null) {
            queryParameters['types'] = requestParameters['types'];
        }

        if (requestParameters['format'] != null) {
            queryParameters['format'] = requestParameters['format'];
        }

        const headerParameters: runtime.HTTPHeaders = {};


        let urlPath = `/external/contacts/export`;

        const response = await this.request({
            path: urlPath,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => ExportContactsDtoFromJSON(jsonValue));
    }

    /**
     * Solicita a exportação dos contatos.
     */
    async exportContacts(requestParameters: ExportContactsRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ExportContactsDto> {
        const response = await this.exportContactsRaw(requestParameters, initOverrides);
        return await response.value();
    }

}

/**
 * @export
 */
export const ExportContactsFormatEnum = {
    Csv: 'csv',
    Xlsx: 'xlsx'
} as const;
export type ExportContactsFormatEnum = typeof ExportContactsFormatEnum[keyof typeof ExportContactsFormatEnum];
